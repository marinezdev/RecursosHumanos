
@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout _Administracion.cshtml";
}

<style>
    .alert-warning {
        background-color: #fff;
        border-color: #e91e63;
        color: #fff;
        background: linear-gradient(to right, #e36c95, #e91e63);
        -webkit-box-shadow: 10px 10px 19px -11px rgba(51,51,51,1);
        -moz-box-shadow: 10px 10px 19px -11px rgba(51,51,51,1);
        box-shadow: 10px 10px 19px -11px rgba(51,51,51,1);
    }

    .sweet-mostrar {
        background: linear-gradient(to right, #b02750, #e91e63);
        color: #ffffff;
        /* background-color: black;*/
        /*#or anything you wanna do with the button*/
    }

        .sweet-mostrar:not([disabled]):hover {
            background-color: #e91e63;
            /*#hover here*/
        }

    .sweet-continuar {
        background: linear-gradient(to right, #00bcd4, #036fc5);
        color: #ffffff;
    }
        /*#or anything you wanna do with the button*/


        .sweet-continuar:not([disabled]):hover {
            background-color: #c755db;
            /*#hover here*/
        }
    .fondo-danger {
        background: linear-gradient(to right, #b02750, #e91e63);
        color: #ffffff;
        border-radius: 5px;
    }

    .fondo-warning {
        background: linear-gradient(to right, #d9a500, #dda600);
        color: #ffffff;
        border-radius: 5px;
    }

    .fondo-succefull {
        background: linear-gradient(to right, #008906, #38bb3d);
        color: #ffffff;
        border-radius: 5px;
    }
    .modal {
        z-index: 9999;
    }

    .process-step .btn:focus {
        outline: none
    }

    .process {
        display: table;
        width: 100%;
        position: relative
    }

    .process-row {
        display: table-row
    }

    .process-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important
    }

    .process-row:before {
        top: 40px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 10px;
        background-color: #ccc;
        z-order: 0;
        border-radius: 5px;
    }

    .process-step {
        display: table-cell;
        text-align: center;
        position: relative
    }

        .process-step p {
            margin-top: 4px
        }

    .btn-circle {
        width: 83px;
        height: 80px;
        text-align: center;
        font-size: 12px;
        border-radius: 50%
    }





    .TextoColor {
        color: #555 !important;
    }

    @@media (min-width: 768px) {
        .modal-dialog {
            width: 600px;
            margin: 150px auto;
        }
    }

    .close:not(:disabled):not(.disabled) {
        cursor: pointer;
    }

    .close {
        float: right;
        font-size: 1.5rem;
        font-weight: 700;
        line-height: 1;
        color: #000;
        text-shadow: 0 1px 0 #fff;
        opacity: .5;
    }

    progress {
        -webkit-appearance: none;
        border-radius: 15px;
    }

    ::-webkit-progress-bar {
        background-color: #ccc;
        border-radius: 15px;
    }


    progress[value]::-webkit-progress-value {
        background-image: -webkit-linear-gradient(-45deg, transparent 33%, rgba(0, 0, 0, .1) 33%, rgba(0,0, 0, .1) 66%, transparent 66%), -webkit-linear-gradient(top, rgba(255, 255, 255, .25), rgba(0, 0, 0, .25)), -webkit-linear-gradient(left, #01477f, #008c99);
        border-radius: 15px;
        background-size: 35px 20px, 100% 100%, 100% 100%;
    }



    .cogVcH:hover {
        cursor: pointer;
        border-style: solid;
    }

    .cogVcH {
        max-width: 180px;
        width: 100%;
        border: 1px dashed #448aff;
        color: #448aff;
        height: 216px;
        border-radius: 8px;
        padding: 10px;
        background-color: rgb(255, 255, 255);
        display: flex;
        flex-flow: column wrap;
        -webkit-box-align: center;
        align-items: center;
        -webkit-box-pack: center;
        justify-content: center;
        font-size: 1.2rem;
        margin-right: 10px;
        margin-bottom: 15px;
        -webkit-box-flex: 1;
        flex-grow: 1;
        transition: border 0.25s ease-in-out 0s;
    }

    .gXEoDm {
        width: 180px;
        height: 216px;
        border: 0.5px solid rgb(124, 152, 167);
        border-radius: 8px;
        background-color: rgb(255, 255, 255);
        display: flex;
        flex-direction: column;
        margin-right: 10px;
        margin-bottom: 15px;
        position: relative;
    }

    .sc-fATqzn:hover .fpCmKW {
        visibility: visible;
        top: -16px;
    }

    .fpCmKW {
        position: absolute;
        width: 100%;
        text-align: right;
        z-index: 3;
        top: 0px;
        visibility: hidden;
        transition: visibility 0s ease-out 0s;
        box-sizing: border-box;
        overflow: hidden;
    }

    .ecdNeI {
        width: 48px;
        height: 48px;
        cursor: pointer;
        display: inline-block;
        background-image: url(/panel/static/media/R-PANELv2.06.1-RC1/icon_rotate_48x48.2dfac1f1.svg);
        background-size: cover;
        margin-right: 4px;
    }

    .ecdNeI2 {
        width: 48px;
        height: 48px;
        cursor: pointer;
        display: inline-block;
        background-image: url(/panel/static/media/R-PANELv2.06.1-RC1/icon_rotate_48x48.2dfac1f1.svg);
        background-size: cover;
        margin-right: 4px;
    }


    .fpCmKW span:last-child {
        margin: 0px;
    }

    .jskYLk {
        width: 48px;
        height: 48px;
        cursor: pointer;
        display: inline-block;
        background-size: cover;
        margin-right: 4px;
        background-image: url('../../Images/icons/icon_trash_48x48.e4cbe3f0.svg');
    }

    .gsEJWt {
        width: 100%;
        height: 30px;
        color: white;
        font-size: 12px;
        font-weight: 500;
        padding: 5px 10px;
        background-image: linear-gradient( 310deg, #ff0049 0%, #990051 100%);
        border-radius: 8px 8px 0px 0px;
        text-align: center;
        position: absolute;
        z-index: 2;
        display: flex;
        -webkit-box-pack: center;
        justify-content: center;
        -webkit-box-align: center;
        align-items: center;
    }

    .iOCuAz {
        border-radius: 8px 0px 8px 0px 0px;
        overflow: hidden;
        width: 180px;
        height: 215px;
        transition: height 1s ease 0s;
    }

    .gnckKk {
        width: 178px;
        height: 215px;
        object-fit: cover;
        transition: height 1s ease 0s;
        border-radius: 8px;
    }

    .hZRbtg input, .hZRbtg select, .hZRbtg textarea {
        font-family: Hind;
        font-weight: 400;
        font-size: 14px;
    }

    .ldkJDz {
        display: block;
        width: 100%;
        padding: 0px 67px 0px;
        margin-top: 40px;
        white-space: normal;
        min-height: 692px;
        font-family: Hind;
        overflow-x: hidden;
    }

    .ihwDZV {
        padding: 40px 40px 45px;
        white-space: normal;
    }

    .hZRbtg {
        box-shadow: rgb(0 0 0 / 8%) -1px 2px 20px 0px;
        border-radius: 12px;
        width: 100%;
        white-space: normal;
    }

    .hZRbtg {
        box-shadow: rgb(0 0 0 / 8%) -1px 2px 20px 0px;
        border-radius: 12px;
        width: 100%;
        white-space: normal;
    }

    .dUQJCE {
        height: 35px;
        width: 172px;
        text-overflow: ellipsis;
        border-radius: 0px 0px 8px 8px;
        margin: 0px 5px;
        color: rgb(104, 128, 140);
        font-size: 12px !important;
    }

    .sc-fATqzn:hover .fpCmKW {
        visibility: visible;
        top: -16px;
    }


    .fpCmKW {
        position: absolute;
        width: 100%;
        text-align: right;
        z-index: 3;
        top: 0px;
        visibility: hidden;
        transition: visibility 0s ease-out 0s;
        box-sizing: border-box;
        overflow: hidden;
    }

    .ecdNeI:hover {
        background-image: url('../../Images/icons/icon_rotate_48x48_hover.1e032e91.svg');
    }

    .ecdNeI {
        width: 48px;
        height: 48px;
        cursor: pointer;
        display: inline-block;
        background-image: url('../../Images/icons/icon_rotate_48x48.2dfac1f1.svg');
        background-size: cover;
        margin-right: 4px;
    }

    .ecdNeI2:hover {
        background-image: url('../../Images/icons/icon_subir.png');
    }

    .ecdNeI2 {
        width: 48px;
        height: 48px;
        cursor: pointer;
        display: inline-block;
        background-image: url('../../Images/icons/icon_subir_hover.png');
        background-size: cover;
        margin-right: 4px;
    }

    .gsEJWt div {
        height: 14px;
        width: 14px;
        margin-bottom: 4px;
        background-image: url('../../Images/icons/star.9fe16126.svg');
        background-size: cover;
        margin-right: 8px;
    }

    .faMYgb {
        max-height: 250px;
        width: 100%;
        margin: 0px;
        padding: 0px;
        box-sizing: content-box;
        display: flex;
        flex-direction: column;
        -webkit-box-pack: justify;
        justify-content: space-between;
        transition: max-height 1s ease 0s;
        overflow: hidden;
    }

    .gJWAcE {
        width: 100%;
        padding: 30px 0px 0px px;
        display: flex;
        -webkit-box-pack: start;
        justify-content: flex-start;
        flex-flow: row wrap;
        transition: max-height 1s ease 0s;
    }

    .fpCmKW span:last-child {
        margin: 0px;
    }


    .jskYLk:hover {
        background-image: url('../../Images/icons/icon_trash_48x48_hover.d8eb4bff.svg');
    }

    .btn-info.active, .btn-info:active, .show > .btn-info.dropdown-toggle {
        background-color: #448aff;
        background-image: none;
        /*border-color: #3f629d;*/
        border-color: #ffffff;
        background: linear-gradient(to right, #00bcd4, #0081b3);
    }

    select.form-control, select.form-control:focus, select.form-control:hover {
        border-top: 1px;
        border-right: 1px;
        border-left: 1px;
        border: 1px solid #cccccc;
        border-radius: 2px;
    }

        select.form-control:not([size]):not([multiple]) {
            height: 36px;
        }

    .table td, .table th {
        padding: 0px 0px;
    }

    .btn-danger {
        background: linear-gradient(to right, #d40000, #b30000);
        /* background-color: #ff5252; */
        border-color: #f30000;
        color: #fff;
        cursor: pointer;
        -webkit-transition: all ease-in 0.3s;
        transition: all ease-in 0.3s;
        border-radius: 5px;
    }

    table.dataTable tbody th, table.dataTable tbody td {
        padding: 0px 10px;
    }

    @@media (min-width: 768px) {
        .modal-dialog {
            width: 900px;
            margin: 45px auto;
        }
    }

    .btn {
        padding: 10px 10px;
    }

    .md-tabs .nav-item.open .nav-link, .md-tabs .nav-item.open .nav-link:focus, .md-tabs .nav-item.open .nav-link:hover, .md-tabs .nav-link.active, .md-tabs .nav-link.active:focus, .md-tabs .nav-link.active:hover {
        color: #00bcd4;
        border: none;
        background-color: transparent;
        border-radius: 0;
    }

    .nav-tabs .slide {
        background: #00bcd4;
        width: 100%;
        height: 4px;
        position: absolute;
        -webkit-transition: left 0.3s ease-out;
        transition: left 0.3s ease-out;
        bottom: 0;
    }

    .md-tabs .nav-item a {
        padding: 20px 0 !important;
        color: #37474f;
        background-color: #e5e5e5;
    }

    label {
        display: inline-block;
        margin-bottom: -0.5rem;
    }

    .btn {
        padding: 10px 10px;
    }

    .btn-uppload {
        background-color: #448aff;
        border-color: #008cb9;
        color: #0083b4;
        cursor: pointer;
        -webkit-transition: all ease-in 0.3s;
        transition: all ease-in 0.3s;
        background: linear-gradient(to right, #ffffff, #ffffff);
        width: 60px;
        border-radius: 5px;
    }

        .btn-uppload:hover {
            background-color: #448aff;
            border-color: #b7b7b7;
            color: #ffffff;
            cursor: pointer;
            -webkit-transition: all ease-in 0.3s;
            transition: all ease-in 0.3s;
            background: linear-gradient(to right, #b9b9b9, #cdcbcb);
        }

        .btn-uppload2 {
        background-color: #448aff;
        border-color: #008cb9;
        color: #0083b4;
        cursor: pointer;
        -webkit-transition: all ease-in 0.3s;
        transition: all ease-in 0.3s;
        background: linear-gradient(to right, #ffffff, #ffffff);

        border-radius: 5px;
    }

        .btn-uppload2:hover {
            background-color: #448aff;
            border-color: #b7b7b7;
            color: #ffffff;
            cursor: pointer;
            -webkit-transition: all ease-in 0.3s;
            transition: all ease-in 0.3s;
            background: linear-gradient(to right, #b9b9b9, #cdcbcb);
        }


    .btn-save {
        border-color: #519f55;
        color: #4caf50;
        cursor: pointer;
        transition: all ease-in 0.3s;
        background: linear-gradient(to right, #efffdc, #dfffba);
    }

        .btn-save:hover {
            border-color: #8bc34a;
            color: #ffffff;
            cursor: pointer;
            transition: all ease-in 0.3s;
            background: linear-gradient(to right, #8bc34a, #8bc34a);
        }

    .btn-danger {
        background: linear-gradient(to right, #9f1c1c, #e91e63);
        /* background-color: #ff5252; */
        border-color: #e91e63;
        color: #fff;
        cursor: pointer;
        -webkit-transition: all ease-in 0.3s;
        transition: all ease-in 0.3s;
        width: 60px;
        border-radius: 5px;
    }

        .btn-danger:hover {
            border-color: #c1c1c1;
            color: #cfbaba;
            cursor: pointer;
            -webkit-transition: all ease-in 0.3s;
            transition: all ease-in 0.3s;
            background: linear-gradient(to right, #a11041, #a50038);
        }

    .btn-view {
        background: linear-gradient(to right, #fff7d5, #fff1c6);
        /* background-color: #ff5252; */
        border-color: #ffc107;
        color: #ff9800;
        cursor: pointer;
        -webkit-transition: all ease-in 0.3s;
        transition: all ease-in 0.3s;
        width: 60px;
        border-radius: 5px;
    }

        .btn-view:hover {
            border-color: #ffeb3b;
            color: #ffffff;
            cursor: pointer;
            -webkit-transition: all ease-in 0.3s;
            transition: all ease-in 0.3s;
            background: linear-gradient(to right, #ff9800, #ff9800);
        }

        .btn-success {
            border-color: #ffffff;
            color: #fff;
            cursor: pointer;
            -webkit-transition: all ease-in 0.3s;
            transition: all ease-in 0.3s;
            background: linear-gradient(to right, #11c15b, #4caf50);
            width: 60px;
            border-radius: 5px;
        }

    .btn-save2 {
        border-color: #519f55;
        color: #4caf50;
        cursor: pointer;
        transition: all ease-in 0.3s;
        background: linear-gradient(to right, #efffdc, #dfffba);
        width: 60px;
        border-radius: 5px;
    }

        .btn-save2:hover {
            border-color: #8bc34a;
            color: #ffffff;
            cursor: pointer;
            transition: all ease-in 0.3s;
            background: linear-gradient(to right, #8bc34a, #8bc34a);
        }


</style>


<link rel="stylesheet" type="text/css" href="~/assets/icon/icofont/css/icofont.css">
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.22/css/jquery.dataTables.min.css" />

<!-- Modal -->
<div class="modal fade" id="AgregarBanco" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Banco </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Nombre Banco </label>
                            <input type="text" class="form-control" id="Nombre_Banco" onchange="ValidaInput('Nombre_Banco')" onkeypress="return soloLetras(event)" onkeyup="mayus(this);">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtnCerrarBanco"> Cancelar</button>
                <button type="button" class="btn btn-primary" id="BTnNuevoBanco">Agregar  </button>
            </div>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="AgregarCurso" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Curso </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Nombre Curso </label>
                            <input type="text" class="form-control" id="Nombre_Curso_Modal" onchange="ValidaInput('Nombre_Curso_Modal')" onkeyup="mayus(this);">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtnCerrarCurso"> Cancelar</button>
                <button type="button" class="btn btn-primary" id="BTnNuevoCurso">Agregar  </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="AgregarDiplomados" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Diplomado </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Nombre diplomado </label>
                            <input type="text" class="form-control" id="Nombre_Diplomado_Modal" onchange="ValidaInput('Nombre_Diplomado_Modal')" onkeyup="mayus(this);">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtnCerrarDiplomado"> Cancelar</button>
                <button type="button" class="btn btn-primary" id="BTnNuevoDiplomado">Agregar  </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="AgregarCertificaciones" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nueva Certificación </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Nombre certificación </label>
                            <input type="text" class="form-control" id="Nombre_certificacion_Modal" onchange="ValidaInput('Nombre_certificacion_Modal')" onkeyup="mayus(this);">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtnCerrarCertificacion"> Cancelar</button>
                <button type="button" class="btn btn-primary" id="BTnNuevaCertificacion">Agregar  </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="AgregarEmpresa" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nueva Empresa </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Razón social  </label>
                            <input type="text" class="form-control" id="RazonSocial_Empresa_Modal" onchange="ValidaInput('RazonSocial_Empresa_Modal')" onkeyup="mayus(this);">
                        </div>
                    </div>
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Nombre comercial  </label>
                            <input type="text" class="form-control" id="NombreComercial_Empresa_Modal" onchange="ValidaInput('NombreComercial_Empresa_Modal')" onkeyup="mayus(this);">
                        </div>
                    </div>
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Alias  </label>
                            <input type="text" class="form-control" id="Alias_Empresa_Modal" onchange="ValidaInput('Alias_Empresa_Modal')" onkeyup="mayus(this);">
                        </div>
                    </div>
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* RFC </label>
                            <input type="text" class="form-control" id="RFC_Empresa_Modal" onchange="ValidaInput('RFC_Empresa_Modal')" onkeyup="mayus(this);">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtnCerrarEmpresa"> Cancelar</button>
                <button type="button" class="btn btn-primary" id="BTnNuevaEmpresa">Agregar  </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="AgregarDepartamento" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header ">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Departamento </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Nombre Departamento </label>
                            <input type="text" class="form-control" id="Nombre_Departamento" onchange="ValidaInput('Nombre_Departamento')" onkeyup="mayus(this);">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtnCerrarDepartamento"> Cancelar</button>
                <button type="button" class="btn btn-primary" id="BTnNuevoDepartamento">Agregar  </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="AgregarPuesto" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Puesto </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Nombre Puesto </label>
                            <input type="text" class="form-control" id="Nombre_Puesto" onchange="ValidaInput('Nombre_Puesto')" onkeyup="mayus(this);">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtnCerrarPuesto"> Cancelar</button>
                <button type="button" class="btn btn-primary" id="BTnNuevoPuesto">Agregar  </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="AgregarTipoExamen" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Examen </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Nombre Examen </label>
                            <input type="text" class="form-control" id="Nombre_TipoExamen" onchange="ValidaInput('Nombre_TipoExamen')" onkeyup="mayus(this);">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtnCerrarExamen"> Cancelar</button>
                <button type="button" class="btn btn-primary" id="BTnNuevoExamen">Agregar  </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="AgregarProyectoServicio" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Proyecto o servicio  </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Nombre Proyecto o servicio  </label>
                            <input type="text" class="form-control" id="Nombre_Proyecto_Modal" onchange="ValidaInput('Nombre_Proyecto_Modal')" onkeyup="mayus(this);">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtnCerrarProyectoServicio"> Cancelar</button>
                <button type="button" class="btn btn-primary" id="BTnNuevoProyectoServicio">Agregar  </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="AgregarCliente" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Cliente </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Nombre Cliente </label>
                            <input type="text" class="form-control" id="Nombre_Cliente_Modal" onchange="ValidaInput('Nombre_Cliente_Modal')" onkeyup="mayus(this);">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtnCerrarCliente"> Cancelar</button>
                <button type="button" class="btn btn-primary" id="BTnNuevoCliente">Agregar  </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade bd-example-modal-lg" id="ListaDocumentos" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Lista de documento </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="table-border-style" id="DivTableContenidoDocumentos">
                            <div class="table-responsive">
                                <table class="table table-hover text-center" width="100%" id="TableListCatDocumentos">
                                    <thead>
                                        <tr>
                                            <th class="text-center">Documentos</th>
                                            <th> </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            foreach (var Dat in ViewBag.TipoDocumento)
                                            {
                                                <tr>
                                                    <td>@Dat.Nombre.ToUpper()</td>
                                                    <td>
                                                        <button class="btn waves-effect waves-light btn-primary" onclick="AgregarDocumentoLista(@Dat.Id)" data-toggle="tooltip" data-placement="top" title="" data-original-title="Agregar"><i class="icofont icofont-ui-add"></i></button>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12 col-lg-12">
                        <div class="row" id="DivBtnNuevoDocumento">
                            <div class="col-md-5 col-lg-5">
                                <br />
                                <button class="btn waves-effect waves-light btn-primary col-md-12" id="BtnAbrirNuevoDocumento">  Nuevo documento    <i class="fa fa-plus"></i></button>
                            </div>
                        </div>
                        <div class="row" id="DivNuevoDocumento" style="display:none;">
                            <div class="col-md-12 col-lg-12">
                                <div class="form-group">
                                    <label for="largeInput">* Nombre Documento </label>
                                    <input type="text" class="form-control" id="Nombre_Documento" onchange="ValidaInput('Nombre_Documento')" onkeyup="mayus(this);">
                                </div>
                            </div>
                            <div class="col-md-12 col-lg-12">
                                <button type="button" class="btn btn-secondary" id="BtnCerrarNuevoDocumento"> Cancelar </button>
                                <button type="button" class="btn btn-primary" id="BTnNuevoDocumento"> Agregar </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal"> Cerrar </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade bd-example-modal-lg" id="ModalPDF" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Archivo </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <iframe id="iframepdf" width="100%" height="400px;" frameborder="0"></iframe>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal"> Cerrar </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade bd-example-modal-lg" id="AgregarCentroTrabajo" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nuevo Centro de Trabajo  </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="largeInput">* Código postal  </label>
                            <input type="text" class="form-control input-number" id="CP_Trabajo" maxlength="6" placeholder="Código postal" onchange="CPBuscar_Trabajo(this.value)" onkeypress="return soloNum(event)">
                        </div>
                    </div>
                    <div class="col-md-8 col-lg-8">
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="largeInput">* Calle  </label>
                            <input type="text" class="form-control" id="Calle_Trabajo" placeholder="" onchange="ValidaInput('Calle_Trabajo')" onkeyup="mayus(this);">
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="largeInput">* Número exterior </label>
                            <input type="text" class="form-control" id="NumExterior_Trabajo" placeholder="" onchange="ValidaInput('NumExterior_Trabajo')" onkeyup="mayus(this);">
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="largeInput">Interior </label>
                            <input type="text" class="form-control" id="NumInterior_Trabajo" placeholder="" onchange="ValidaInput('NumInterior_Trabajo')" onkeyup="mayus(this);">
                        </div>
                    </div>

                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="largeInput">* Estado  </label>
                            <select class="form-control" id="Select_Estado_Trabajo" onchange="callEstados_Trabajo(this.value)">
                                <option value="0">SELECCIONAR </option>
                                @foreach (var item1 in ViewBag.CatEstados)
                                {
                                    <option value="@item1.Id">@item1.Estado.ToUpper()</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="largeInput">* Ciudad o Municipio </label>
                            <select class="form-control" id="Select_Delegacion_Municipio_Trabajo" onchange="callColonias_Trabajo(this.value)">
                                <option value="0">SELECCIONAR </option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="largeInput">* Colonia  </label>
                            <select class="form-control" id="Select_Colonia_Trabajo" onchange="callCP_Trabajo(this.value)">
                                <option value="0">SELECCIONAR </option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <div class="form-group">
                            <label for="largeInput">¿ Entre que calles está el domicilio ? </label>
                            <input type="text" class="form-control" id="EntreCalle_Trabajo" placeholder="" onkeyup="mayus(this);">
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <div class="form-group">
                            <label for="largeInput">Referencias, ¿ Qué se encuentra cerca ?</label>
                            <input type="text" class="form-control" id="Referencias_Trabajo" placeholder="" onkeyup="mayus(this);">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="col-md-6 col-lg-6">
                </div>
                <div class="col-md-6 col-lg-6">
                    <div class="row">
                        <button type="button" class="btn btn-secondary col-md-6" data-dismiss="modal" id="BtnCerrarCentroTrabajo"> Cancelar</button>
                        <button type="button" class="btn btn-primary col-md-6" id="BTnAgregarCentroTrabajo">Agregar  </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade bd-example-modal-lg" id="EditarDocumento" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Editar Documento  </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Fecha entrega  </label>
                            <input type="date" class="form-control" id="Edit_Fecha_Entrega" onchange="ValidaInput('Edit_Fecha_Entrega')" >
                        </div>
                    </div>
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Fecha vigencia  </label>
                            <input type="date" class="form-control" id="Edit_Fecha_vigencia"  onchange="ValidaInput('Edit_Fecha_vigencia')">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="col-md-6 col-lg-6">
                </div>
                <div class="col-md-6 col-lg-6">
                    <div class="row">
                        <button type="button" class="btn btn-secondary col-md-6" data-dismiss="modal" id=""> Cancelar</button>
                        <button type="button" class="btn btn-primary col-md-6" id="">Guardar  </button>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="CargandoProcesos" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Cargando ... </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <progress id="fileProgress4" style="width:100%"></progress>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtnCerrarCargandoProcesos"> Cerrar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="AgregarAplicacion" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Nueva aplicación </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="largeInput">* Aplicación </label>
                            <div class="input-group">
                                <select class="form-control" id="Select_Aplicacion">
                                    <option value="0">SELECCIONAR </option>
                                    @foreach (var item1 in ViewBag.Aplicaciones)
                                    {
                                        <option value="@item1.Id">@item1.Nombre.ToUpper()</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="BtnCerrarAplicacion"> Cancelar</button>
                <button type="button" class="btn btn-primary" id="BtnNuevaAplicacion">Agregar  </button>
            </div>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="MotivosRechazo" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">
                    Motivos de baja empleado <br />
                    <span style="font-size:14px">Seleccione uno o más motivos de baja</span>
                </h5>
                    
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        @{
                            if (ViewBag.MotivosBajaEmpleados != null)
                            {
                                foreach (var Dat in ViewBag.MotivosBajaEmpleados)
                                {
                                    <label><input type="checkbox" id="cbox_@Dat.Id" name="checksMotivosBaja[]" value="@Dat.Id"> @Dat.Nombre</label>
                                    <br />
                                }
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                    <button type="button" class="btn btn-secondary col-lg-6" data-dismiss="modal" id="BtnCerrarMotivosBaja"> Cancelar</button>
                    <button type="button" class="btn btn-primary col-lg-6" id="BtnDarBaja" onclick="DarDeBaja()">Dar de baja  </button>
            </div>
        </div>
    </div>
</div>


<!-- Main-body start -->
<div class="main-body">
    <div class="page-wrapper">
        <!-- Page-body start -->
        <div class="page-body">
            <div class="row">
                <div class="col-sm-12">

                    <!-- Basic Form Inputs card start -->
                    <div class="card">
                        <div class="card-header">
                            <div class="row">
                                <div class="col-md-9 col-lg-9">
                                    <h5>Editar empleado: </h5>
                                    <span>Completa los campos marcados *</span>
                                </div>
                                <div class="col-md-3 col-lg-3">
                                    @if (ViewBag.Personas.Empleados.systemStatus == 1)
                                    {
                                        <button class="btn waves-effect waves-light fondo-warning col-md-12" onclick="ValidarDarDeBaja()">  Dar de baja   <i class="fa fa-hand-o-down fa-2"></i></button>
                                    }
                                    else
                                    {
                                        <button class="btn waves-effect waves-light fondo-succefull col-md-12" onclick="DarDeAlta()">  Dar de alta   <i class="fa fa-hand-o-up fa-2"></i></button>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            
                            <div class="row">
                                <div class="col-lg-12 col-xl-12">
                                    <!-- Nav tabs -->
                                    <ul class="nav nav-tabs md-tabs" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link active" data-toggle="tab" href="#menu1" role="tab">Información <br /><br /></a>
                                            <div class="slide"></div>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" data-toggle="tab" href="#menu2" role="tab">Dirección <br /><br /></a>
                                            <div class="slide"></div>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" data-toggle="tab" href="#menu3" role="tab">Información <br /> Académica</a>
                                            <div class="slide"></div>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" data-toggle="tab" href="#menu4" role="tab">Puesto <br /> Entrevista</a>
                                            <div class="slide"></div>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" data-toggle="tab" href="#menu5" role="tab">Examen <br /><br /></a>
                                            <div class="slide"></div>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" data-toggle="tab" href="#menu6" role="tab">Psicométrico <br /><br /></a>
                                            <div class="slide"></div>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" data-toggle="tab" href="#menu7" role="tab">Documentos <br /><br /></a>
                                            <div class="slide"></div>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" data-toggle="tab" href="#menu8" role="tab">Ingreso <br /><br /></a>
                                            <div class="slide"></div>
                                        </li>
                                    </ul>
                                    <hr />
                                    <!-- Tab panes -->
                                    <div class="tab-content ">
                                        <div class="tab-pane active" id="menu1" role="tabpanel">
                                            <div class="row">
                                                <div class="col-md-12 text-left">
                                                    <h5>Información Basica </h5>
                                                    <p>Completa los campos marcados * </p>
                                                    <hr />
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Nombre </label>
                                                        <input type="text" class="form-control" id="Nombre_Empleado" value="@ViewBag.Personas.Nombre" onchange="ValidaInput('Nombre_Empleado')" onkeyup="mayus(this);" onkeypress="return soloLetras(event)">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Apellido Paterno  </label>
                                                        <input type="text" class="form-control" id="ApellidoPaterno_Empleado" value="@ViewBag.Personas.ApPaterno" onchange="ValidaInput('ApellidoPaterno_Empleado')" onkeyup="mayus(this);" onkeypress="return soloLetras(event)">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Apellido Materno  </label>
                                                        <input type="text" class="form-control" id="ApellidoMaterno_Empleado" value="@ViewBag.Personas.ApMaterno" onchange="ValidaInput('ApellidoMaterno_Empleado')" onkeyup="mayus(this);" onkeypress="return soloLetras(event)">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Fecha Nacimiento </label>
                                                        <input type="date" class="form-control" id="FechaNacimiento_Empleado" value="@ViewBag.Personas.PersonasDetalle.FechaNacimiento.ToString("yyyy-MM-dd")" onchange="ValidaInput('FechaNacimiento_Empleado')">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Sexo  </label>
                                                        <select class="form-control" id="Select_Sexo_Empleado" onchange="ValidaSelect('Select_Sexo_Empleado')">
                                                            <option value="0">SELECCIONAR </option>
                                                            @if (ViewBag.Personas.PersonasDetalle.Sexo == 1)
                                                            {
                                                                <option value="1" selected>MASCULINO </option>
                                                                <option value="2">FEMENINO </option>
                                                            }
                                                            else
                                                            {
                                                                <option value="1">MASCULINO </option>
                                                                <option value="2" selected>FEMENINO </option>
                                                            }

                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Estado Civil  </label>
                                                        <select class="form-control" id="Select_EstadoCivil_Empleado" onchange="ValidaSelect('Select_EstadoCivil_Empleado')">
                                                            <option value="0">SELECCIONAR </option>
                                                            @foreach (var item1 in ViewBag.EstadoCivil)
                                                            {
                                                                if (ViewBag.Personas.PersonasDetalle.Cat_EstadoCivil.Id == @item1.Id)
                                                                {
                                                                    <option value="@item1.Id" selected>@item1.Nombre.ToUpper()</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@item1.Id">@item1.Nombre.ToUpper()</option>
                                                                }

                                                            }
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* RFC </label>
                                                        <input type="text" class="form-control" id="RFC_Empleado" max="13" value="@ViewBag.Personas.PersonasDetalle.RFC" onchange="ValidaInput('RFC_Empleado')" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* CURP  </label>
                                                        <input type="text" class="form-control" id="CURP_Empleado" value="@ViewBag.Personas.PersonasDetalle.CURP" onchange="ValidaInput('CURP_Empleado')" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Numero de seguro social   </label>
                                                        <input type="text" class="form-control" id="NSS_Empleado" value="@ViewBag.Personas.PersonasDetalle.NSS" onchange="ValidaInput('NSS_Empleado')" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Cuenta con algún crédito  </label>
                                                        <select class="form-control" id="Select_TipoCredito_Empleado" onchange="ValidaSelect('Select_TipoCredito_Empleado')">
                                                            <option value="0">SELECCIONAR </option>
                                                            @foreach (var item1 in ViewBag.TipoCredito)
                                                            {
                                                                if (ViewBag.Personas.PersonasDetalle.Cat_TipoCredito.Id == @item1.Id)
                                                                {
                                                                    <option value="@item1.Id" selected>@item1.Nombre.ToUpper()</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@item1.Id">@item1.Nombre.ToUpper()</option>
                                                                }
                                                            }
                                                        </select>
                                                    </div>
                                                </div>

                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Banco  </label>
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <button class="btn btn-default waves-effect" type="button" id="BtnBuscar2" data-toggle="modal" data-target="#AgregarBanco" style="padding: 8px 19px;" data-toggle="tooltip" data-placement="top" title="Agregar Nuevo Banco"><i class="fa fa-plus"></i></button>
                                                            </div>
                                                            <select class="form-control" id="Select_Bancos_Empleado" onchange="ValidaSelect('Select_Bancos_Empleado')">
                                                                <option value="0">SELECCIONAR </option>
                                                                @foreach (var item1 in ViewBag.Bancos)
                                                                {
                                                                    if (ViewBag.Personas.PersonasDetalle.Cat_Banco.Id == @item1.Id)
                                                                    {
                                                                        <option value="@item1.Id" selected>@item1.Nombre.ToUpper()</option>
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value="@item1.Id"> @item1.Nombre.ToUpper() </option>
                                                                    }
                                                                }
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput"> * Clave Interbancaria    </label>
                                                        <input type="text" class="form-control" id="ClaveInterbancaria_Empleado" value="@ViewBag.Personas.PersonasDetalle.ClaveInterbancaria" onchange="ValidaInput('ClaveInterbancaria_Empleado')">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">No. de empleado en nomina  </label>
                                                        <input type="text" class="form-control" id="NoNomina_Empleado" value="@ViewBag.Personas.PersonasDetalle.NoNomina" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12 text-left">
                                                    <br />
                                                    <h5>Contacto  </h5>
                                                    <hr />
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Teléfono Celular </label>
                                                        <input type="text" class="form-control" id="TelefonoCelular_Empleado" value="@ViewBag.Personas.PersonasDetalle.TelefonoCelular" onchange="ValidaInput('TelefonoCelular_Empleado')" onkeypress="return soloNum(event)">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">Teléfono Fijo </label>
                                                        <input type="text" class="form-control" id="TelefonoFijo_Empleado" value="@ViewBag.Personas.PersonasDetalle.TelefonoFijo" onchange="ValidaInput('TelefonoFijo_Empleado')" onkeypress="return soloNum(event)">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Correo Electrónico Personal </label>
                                                        <input type="text" class="form-control" id="EmailPersonal_Empleado" value="@ViewBag.EmailPersonal" onchange="ValidaInput('EmailPersonal_Empleado')">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput"> Correo Electrónico Corporativo </label>
                                                        <input type="text" class="form-control" id="EmailCorporativo_Empleado" value="@ViewBag.EmailCorporativo" onchange="ValidaInput('EmailCorporativo_Empleado')">
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-md-12 col-lg-12">
                                                    <button class="btn waves-effect waves-light btn-primary col-md-3" onclick="GuardarInformacionBasica()">  Guardar   <i class="fa fa-floppy-o"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane" id="menu2" role="tabpanel">
                                            <div class="row">
                                                <div class="col-md-12 text-left">
                                                    <h5>Dirección </h5>
                                                    <p>Coloca el código postal para agilizar el llenado </p>
                                                    <hr />
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Código postal  </label>
                                                        <input type="text" class="form-control input-number" id="CP_Empleado" maxlength="6" placeholder="Código postal" onchange="CPBuscar(this.value)" onkeypress="return soloNum(event)">
                                                    </div>
                                                </div>
                                                <div class="col-md-8 col-lg-8">
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Calle  </label>
                                                        <input type="text" class="form-control" id="Calle_Empleado" placeholder="" value="@{ if (ViewBag.PersonasDirecciones.Calle != null) { @ViewBag.PersonasDirecciones.Calle }  }" onchange="ValidaInput('Calle_Empleado')" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Número exterior </label>
                                                        <input type="text" class="form-control" id="NumExterior_Empleado" placeholder="" value="@{ if (ViewBag.PersonasDirecciones.NumExterior != null) { @ViewBag.PersonasDirecciones.NumExterior }  }" onchange="ValidaInput('NumExterior_Empleado')" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">Interior </label>
                                                        <input type="text" class="form-control" id="NumInterior_Empleado" placeholder="" value="@{ if (ViewBag.PersonasDirecciones.NumInteriror != null) { @ViewBag.PersonasDirecciones.NumInteriror }  }" onchange="ValidaInput('NumInterior_Empleado')" onkeyup="mayus(this);">
                                                    </div>
                                                </div>

                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Estado  </label>
                                                        <select class="form-control" id="Select_Estado_Empleado" onchange="callEstados(this.value)">
                                                            <option value="0">SELECCIONAR </option>
                                                            @foreach (var item1 in ViewBag.CatEstados)
                                                            {
                                                                <option value="@item1.Id">@item1.Estado.ToUpper()</option>
                                                            }
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Ciudad o Municipio </label>
                                                        <select class="form-control" id="Select_Delegacion_Municipio_Empleado" onchange="callColonias(this.value)">
                                                            <option value="0">SELECCIONAR </option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Colonia  </label>
                                                        <select class="form-control" id="Select_Colonia_Empleado" onchange="callCP(this.value)">
                                                            <option value="0">SELECCIONAR </option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-6 col-lg-6">
                                                    <div class="form-group">
                                                        <label for="largeInput">¿ Entre que calles está el domicilio ? </label>
                                                        <input type="text" class="form-control" id="EntreCalle_Empleado" placeholder="" value="@{ if (ViewBag.PersonasDirecciones.EntreCalles != null) { @ViewBag.PersonasDirecciones.EntreCalles }  }" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                                <div class="col-md-6 col-lg-6">
                                                    <div class="form-group">
                                                        <label for="largeInput">Referencias, ¿ Qué se encuentra cerca ?</label>
                                                        <input type="text" class="form-control" id="Referencias_Empleado" placeholder="" value="@{ if (ViewBag.PersonasDirecciones.Referencias != null) { @ViewBag.PersonasDirecciones.Referencias }  }" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12 col-lg-12">
                                                    <button class="btn waves-effect waves-light btn-primary col-md-3" onclick="GuardarDireccion()">  Guardar   <i class="fa fa-floppy-o"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane" id="menu3" role="tabpanel">

                                            <div class="row">
                                                <div class="col-md-12 text-left">
                                                    <h5>Información Académica   </h5>
                                                    <p>Completa los campos marcados * </p>
                                                    <hr />
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-md-5 col-lg-12">
                                                    <div class="form-check">
                                                        <label class="form-check-label">
                                                            <input type="checkbox" class="form-check-input" id="checkboxEstudios"> Agregar grados de estudios
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row" id="DivGradosEstudios" style="display:none;">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Ultimo grado de estudios   </label>
                                                        <select class="form-control" id="Select_Estudios_Grado" onchange="ValidaSelect('Select_Estudios_Grado')">
                                                            <option value="0">SELECCIONAR  </option>
                                                            @foreach (var item1 in ViewBag.Estudios)
                                                            {
                                                                <option value="@item1.Id">@item1.Nombre.ToUpper() </option>
                                                            }
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Estatus   </label>
                                                        <select class="form-control" id="Select_EstatusEstudios_Grado" onchange="ValidaSelect('Select_EstatusEstudios_Grado')">
                                                            <option value="0">SELECCIONAR  </option>
                                                            @foreach (var item1 in ViewBag.EstatusEstudios)
                                                            {
                                                                <option value="@item1.Id">@item1.Nombre.ToUpper()</option>
                                                            }
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Fecha Termino </label>
                                                        <input type="date" class="form-control" id="FechaTermino_Grado" onchange="ValidaInput('FechaTermino_Grado')">
                                                    </div>
                                                </div>

                                                <div class="col-md-4 col-lg-4">
                                                    <button class="btn waves-effect waves-light btn-save col-md-12" id="" onclick="BtnAgregarGrado()">  Agregar <i class="fa fa-floppy-o"></i></button>
                                                </div>
                                            </div>

                                            <div class="row" id="DivFormGradosTabla">
                                                <div class="col-md-12 col-lg-12">
                                                    <div class="row">
                                                        <div class="col-md-12 text-center">
                                                            <p><strong>Lista nivel de estudios  </strong>  </p>
                                                        </div>
                                                        <div class="col-md-12 table-responsive" id="TablaNivelEstudios">
                                                            <table class='table text-center table-hover table-striped' width='100%' id='TableListaEstudios'>
                                                                <thead class='thead-dark text-center'>
                                                                    <tr>
                                                                        <th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Grado de estudio</p></th>
                                                                        <th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Estatus</p></th>
                                                                        <th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Fecha Termino</p></th>
                                                                        <th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Archivo</p></th>
                                                                        <th> </th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @if (ViewBag.PersonasEstudios != null)
                                                                    {
                                                                        foreach (var item1 in ViewBag.PersonasEstudios)
                                                                        {
                                                                            <tr>
                                                                                <td>
                                                                                    <p style='font-size:13px;'>
                                                                                        <strong>@item1.Cat_Estudios.Nombre </strong>
                                                                                    </p>
                                                                                </td>
                                                                                <td>
                                                                                    <p style='font-size:13px;'>
                                                                                        @item1.Cat_EstatusEstudios.Nombre
                                                                                    </p>
                                                                                </td>
                                                                                <td>
                                                                                    <p style='font-size:13px;'>
                                                                                        @item1.FechaTermino.ToString("yyyy-MM-dd")
                                                                                    </p>
                                                                                </td>
                                                                                <td>
                                                                                    <div class="col-md-12 text-center">
                                                                                        @if (@item1.NmArchivo == null)
                                                                                        {
                                                                                            <input type='file' id='fileInputEstudios_@item1.Id' onchange='handleFilesEstudio(@item1.Id)' style='visibility: hidden; width: 1px;'>
                                                                                            <strong>Sin Archivo</strong>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <button class='btn waves-effect btn-danger waves-light' onclick='EliminarArchivoEstudio(@item1.Id)' data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>
                                                                                            <button class='btn waves-effect btn-view waves-light' onclick='MostrarArchivoEstudio(@item1.Id)' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>
                                                                                        }
                                                                                    </div>
                                                                                </td>
                                                                                <td>
                                                                                    <div class="col-md-12 text-center">
                                                                                        @if (@item1.NmArchivo == null)
                                                                                        {
                                                                                            <button class='btn waves-effect waves-light btn-uppload' id='BtnSubirArchivoListEstudios_@item1.Id' onclick='SubirArchivoListEstudios(@item1.Id)' data-toggle='tooltip' data-placement='top' title='Subir documento'>&nbsp;<i class='fa fa-cloud-upload'></i></button>
                                                                                            <button class='btn waves-effect waves-light btn-danger' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarEstudio(@item1.Id)'><i class='fa fa-trash'></i></button>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <button class='btn waves-effect waves-light btn-danger' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarEstudio(@item1.Id)'><i class='fa fa-trash'></i></button>
                                                                                        }
                                                                                    </div>
                                                                                </td>
                                                                            </tr>
                                                                        }
                                                                    }

                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="col-md-5 col-lg-12">
                                                    <div class="form-check">
                                                        <br />
                                                        <label class="form-check-label">
                                                            <input type="checkbox" class="form-check-input" id="checkboxCDC"> Cuenta con cursos, diplomados o certificaciones
                                                        </label>
                                                        <br /><br />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row" id="DivFormCDC" style="display:none;">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">Tipo</label>
                                                        <select class="form-control" id="Select_Tipo_CDC" onchange="CargaFormulario(this.value)">
                                                            <option value="0">SELECCIONAR </option>
                                                            <option value="1">CURSO </option>
                                                            <option value="2">DIPLOMADO </option>
                                                            <option value="3">CERTIFICACION </option>
                                                        </select>

                                                    </div>
                                                </div>
                                                <div class="col-md-8 col-lg-8">
                                                    <br /><br />
                                                    <label for="largeInput">Agrega todos los cursos, diplomatos o certificaciones, seleciona un tipo y completa el formulario</label>
                                                </div>
                                            </div>

                                            <div class="row" id="DivFormCurso" style="display:none;">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Nombre  </label>
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <button class="btn btn-default waves-effect" type="button" data-toggle="modal" data-target="#AgregarCurso" style="padding: 8px 19px;" data-toggle="tooltip" data-placement="top" title="Agregar Nuevo Curso"><i class="fa fa-plus"></i></button>
                                                            </div>
                                                            <select class="form-control" id="Select_Curso_nombre">
                                                                <option value="0">SELECCIONAR  </option>
                                                                @foreach (var item1 in ViewBag.Cursos)
                                                                {
                                                                    <option value="@item1.Id">@item1.Nombre.ToUpper() </option>
                                                                }
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Fecha Termino </label>
                                                        <input type="date" class="form-control" id="FechaTermino_Curso">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Acreditado    </label>
                                                        <select class="form-control" id="Select_Curso_Acreditado">
                                                            <option value="0">SELECCIONAR  </option>
                                                            <option value="1">SI </option>
                                                            <option value="2">NO </option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <button class="btn waves-effect waves-light btn-save col-md-12" id="BTnAgregarCurso"> Agregar <i class="fa fa-floppy-o"></i></button>
                                                    <br /><br />
                                                </div>
                                            </div>

                                            <div class="row" id="DivFormDiplomado" style="display:none;">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Nombre  </label>
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <button class="btn btn-default waves-effect" type="button" data-toggle="modal" data-target="#AgregarDiplomados" style="padding: 8px 19px;" data-toggle="tooltip" data-placement="top" title="Agregar Nuevo Diplomado"><i class="fa fa-plus"></i></button>
                                                            </div>
                                                            <select class="form-control" id="Select_Diplomados_nombre">
                                                                <option value="0">SELECCIONAR </option>
                                                                @foreach (var item1 in ViewBag.Diplomados)
                                                                {
                                                                    <option value="@item1.Id">@item1.Nombre.ToUpper() </option>
                                                                }
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Fecha Termino </label>
                                                        <input type="date" class="form-control" id="FechaTermino_Diplomado">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Aprobado </label>
                                                        <select class="form-control" id="Select_Diplomado_Aprobado">
                                                            <option value="0">SELECCIONAR </option>
                                                            <option value="1">SI </option>
                                                            <option value="2">NO </option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <button class="btn waves-effect waves-light btn-save col-md-12" id="BTnAgregarDiplomado"> Agregar <i class="fa fa-floppy-o"></i></button>
                                                    <br /><br />
                                                </div>
                                            </div>

                                            <div class="row" id="DivFormCertificaciones" style="display:none;">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Nombre  </label>
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <button class="btn btn-default waves-effect" type="button" data-toggle="modal" data-target="#AgregarCertificaciones" style="padding: 8px 19px;" data-toggle="tooltip" data-placement="top" title="Agregar Nuevo Banco"><i class="fa fa-plus"></i></button>
                                                            </div>
                                                            <select class="form-control" id="Select_Certificaciones_nombre">
                                                                <option value="0">SELECCIONAR </option>
                                                                @foreach (var item1 in ViewBag.Certificaciones)
                                                                {
                                                                    <option value="@item1.Id">@item1.Nombre.ToUpper()</option>
                                                                }
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Fecha Termino </label>
                                                        <input type="date" class="form-control" id="FechaTermino_Certificaciones">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Certificado  </label>
                                                        <select class="form-control" id="Select_Certificado_Certificaciones">
                                                            <option value="0">SELECCIONAR </option>
                                                            <option value="1">SI </option>
                                                            <option value="2">NO </option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <button class="btn waves-effect waves-light btn-save col-md-12" id="BTnAgregarCertificado">  Agregar  <i class="fa fa-floppy-o"></i></button>
                                                    <br /><br />
                                                </div>
                                            </div>

                                            <div class="row" id="DivFormCDCTabla">
                                                <div class="col-md-12 col-lg-12">
                                                    <div class="row">
                                                        <div class="col-md-12 text-center">
                                                            <p><strong>Lista de Cursos, diplomados o certificaciones </strong>  </p>
                                                        </div>
                                                        <div class="col-md-12 table-responsive" id="TablaCursoCertifiDiplo">
                                                            <table class='table text-center table-hover table-striped' width='100%' id='TableListaCursoCertifiDiplo'>
                                                                <thead class='thead-dark text-center'>
                                                                    <tr>
                                                                        <th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Nombre</p></th>
                                                                        <th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Estatus </p></th>
                                                                        <th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Fecha </p></th>
                                                                        <th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Archivo </p></th>
                                                                        <th class='text-center'> </th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @if (ViewBag.PersonasCDC.PersonasCursos != null)
                                                                    {
                                                                        foreach (var item1 in ViewBag.PersonasCDC.PersonasCursos)
                                                                        {
                                                                            <tr>
                                                                                <td>
                                                                                    <p style='font-size:13px;'>
                                                                                        <strong> CURSO </strong><br>
                                                                                        @item1.Cat_Cursos.Nombre
                                                                                    </p>
                                                                                </td>
                                                                                <td>
                                                                                    <p style='font-size:13px;'>
                                                                                        @if (item1.Acreditado == 1)
                                                                                        {
                                                                                            <strong>Acreditado</strong>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <strong>No Acreditado</strong>
                                                                                        }
                                                                                    </p>
                                                                                </td>
                                                                                <td>
                                                                                    <p style='font-size:13px;'>
                                                                                        @item1.FechaTermino.ToString("yyyy-MM-dd")
                                                                                    </p>

                                                                                </td>
                                                                                <td>

                                                                                    @if (item1.NmArchivo == null)
                                                                                    {
                                                                                        <strong>Sin Archivo</strong>
                                                                                        <input type='file' id='fileInputCDC_@item1.Id' onchange='handleFilesCDC(1,@item1.Id)' style='visibility: hidden; width: 1px;'>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <button class='btn waves-effect btn-danger waves-light' onclick='EliminarArchivoCDC(1,@item1.Id)' data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>
                                                                                        <button class='btn waves-effect btn-view waves-light' onclick='MostrarArchivoCDC(1,@item1.Id)' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>
                                                                                    }
                                                                                </td>
                                                                                <td>
                                                                                    @if (item1.NmArchivo == null)
                                                                                    {
                                                                                        <button class='btn waves-effect waves-light btn-uppload ' id='BtnSubirArchivoListCDC_@item1.Id' onclick='SubirArchivoListCDC(@item1.Id)' data-toggle='tooltip' data-placement='top' title='Subir documento'><i class='fa fa-cloud-upload'></i></button>
                                                                                        <button class='btn waves-effect waves-light btn-danger ' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarCDC(1,@item1.Id)'><i class='fa fa-trash'></i></button>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <button class='btn waves-effect waves-light btn-danger ' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarCDC(1,@item1.Id)'><i class='fa fa-trash'></i></button>
                                                                                    }
                                                                                </td>
                                                                            </tr>
                                                                        }
                                                                    }
                                                                    @if (ViewBag.PersonasCDC.PersonasDiplomados != null)
                                                                    {
                                                                        foreach (var item1 in ViewBag.PersonasCDC.PersonasDiplomados)
                                                                        {
                                                                            <tr>
                                                                                <td>
                                                                                    <p style='font-size:13px;'>
                                                                                        <strong> DIPLOMADO </strong><br>
                                                                                        @item1.Cat_Diplomados.Nombre
                                                                                    </p>
                                                                                </td>
                                                                                <td>
                                                                                    <p style='font-size:13px;'>
                                                                                        @if (item1.Aprobado == 1)
                                                                                        {
                                                                                            <strong>Acreditado</strong>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <strong>No Acreditado</strong>
                                                                                        }
                                                                                    </p>
                                                                                </td>
                                                                                <td>
                                                                                    <p style='font-size:13px;'>
                                                                                        @item1.FechaTermino.ToString("yyyy-MM-dd")
                                                                                    </p>

                                                                                </td>
                                                                                <td>
                                                                                    @if (item1.NmArchivo == null)
                                                                                    {
                                                                                        <strong>Sin Archivo</strong>
                                                                                        <input type='file' id='fileInputCDC_@item1.Id' onchange='handleFilesCDC(2,@item1.Id)' style='visibility: hidden; width: 1px;'>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <button class='btn waves-effect btn-danger waves-light' onclick='EliminarArchivoCDC(2,@item1.Id)' data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>
                                                                                        <button class='btn waves-effect btn-view waves-light' onclick='MostrarArchivoCDC(2,@item1.Id)' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>
                                                                                    }
                                                                                <td>
                                                                                    @if (item1.NmArchivo == null)
                                                                                    {
                                                                                        <button class='btn waves-effect waves-light btn-uppload' id='BtnSubirArchivoListCDC_@item1.Id' onclick='SubirArchivoListCDC(@item1.Id)' data-toggle='tooltip' data-placement='top' title='Subir documento'><i class='fa fa-cloud-upload'></i></button>
                                                                                        <button class='btn waves-effect waves-light btn-danger' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarCDC(2,@item1.Id)'><i class='fa fa-trash'></i></button>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <button class='btn waves-effect waves-light btn-danger' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarCDC(2,@item1.Id)'><i class='fa fa-trash'></i></button>
                                                                                    }
                                                                                </td>
                                                                            </tr>
                                                                        }
                                                                    }
                                                                    @if (ViewBag.PersonasCDC.PersonasCertificaciones != null)
                                                                    {
                                                                        foreach (var item1 in ViewBag.PersonasCDC.PersonasCertificaciones)
                                                                        {
                                                                            <tr>
                                                                                <td>
                                                                                    <p style='font-size:13px;'>
                                                                                        <strong> CERTIFICACIÓN </strong><br>
                                                                                        @item1.Cat_Certificaciones.Nombre
                                                                                    </p>
                                                                                </td>
                                                                                <td>
                                                                                    <p style='font-size:13px;'>
                                                                                        @if (item1.Aprobado == 1)
                                                                                        {
                                                                                            <strong>Acreditado</strong>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <strong>No Acreditado</strong>
                                                                                        }
                                                                                    </p>
                                                                                </td>
                                                                                <td>
                                                                                    <p style='font-size:13px;'>
                                                                                        @item1.FechaTermino.ToString("yyyy-MM-dd")
                                                                                    </p>
                                                                                </td>
                                                                                <td>
                                                                                    @if (item1.NmArchivo == null)
                                                                                    {
                                                                                        <strong>Sin Archivo</strong>
                                                                                        <input type='file' id='fileInputCDC_@item1.Id' onchange='handleFilesCDC(3,@item1.Id)' style='visibility: hidden; width: 1px;'>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <button class='btn waves-effect btn-danger waves-light ' onclick='EliminarArchivoCDC(3,@item1.Id)' data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>
                                                                                        <button class='btn waves-effect btn-view waves-light ' onclick='MostrarArchivoCDC(3,@item1.Id)' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>
                                                                                    }
                                                                                <td>
                                                                                    @if (item1.NmArchivo == null)
                                                                                    {
                                                                                        <button class='btn waves-effect waves-light btn-uppload ' id='BtnSubirArchivoListCDC_@item1.Id' onclick='SubirArchivoListCDC(@item1.Id)' data-toggle='tooltip' data-placement='top' title='Subir documento'><i class='fa fa-cloud-upload'></i></button>
                                                                                        <button class='btn waves-effect waves-light btn-danger ' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarCDC(3,@item1.Id)'><i class='fa fa-trash'></i></button>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <button class='btn waves-effect waves-light btn-danger ' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarCDC(3,@item1.Id)'><i class='fa fa-trash'></i></button>
                                                                                    }
                                                                                </td>
                                                                            </tr>
                                                                        }
                                                                    }
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="tab-pane" id="menu4" role="tabpanel">
                                            <div class="row">
                                                <div class="col-md-12 text-left">
                                                    <h5>Información del Puesto </h5>
                                                    <hr />
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Empresa  </label>
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <button class="btn btn-default waves-effect" type="button" id="BtnBuscar2" data-toggle="modal" data-target="#AgregarEmpresa" style="padding: 8px 19px;" data-toggle="tooltip" data-placement="top" title="Agregar Nueva Empresa"><i class="fa fa-plus"></i></button>
                                                            </div>
                                                            <select class="form-control" id="Select_Empresa_Empleado" onchange="CargaDepartamentos(this.value)">
                                                                <option value="0">SELECCIONAR </option>
                                                                @foreach (var item1 in ViewBag.Empresas)
                                                                {
                                                                    <option value="@item1.Id">@item1.RazonSocial.ToUpper()</option>
                                                                }
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Departamento  </label>
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <button class="btn btn-default waves-effect" type="button" id="BtnAbrirNuevoDEpartamento" style="padding: 8px 19px;" data-toggle="tooltip" data-placement="top" title="Agregar Nuevo Departamento"><i class="fa fa-plus"></i></button>
                                                            </div>
                                                            <select class="form-control" id="Select_Departamento_Empleado" onchange="CargaPuestos(this.value)">
                                                                <option value="0">SELECCIONAR </option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Puesto  </label>
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <button class="btn btn-default waves-effect" type="button" id="BtnAbrirNuevoPuesto" style="padding: 8px 19px;" data-toggle="tooltip" data-placement="top" title="Agregar Nuevo Puesto"><i class="fa fa-plus"></i></button>
                                                            </div>
                                                            <select class="form-control" id="Select_Puesto_Empleado" onchange="ValidaSelect('Select_Puesto_Empleado')">
                                                                <option value="0">SELECCIONAR </option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Cliente   </label>
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <button class="btn btn-default waves-effect" type="button" id="BTnNuevoCliente2" data-toggle="modal" data-target="#AgregarCliente" style="padding: 8px 19px;" data-toggle="tooltip" data-placement="top" title="Agregar Nuevo Cliente"><i class="fa fa-plus"></i></button>
                                                            </div>
                                                            <select class="form-control" id="Select_Cliente_Empleado" onchange="CargaProyectosServicios(this.value)">
                                                                <option value="0">SELECCIONAR </option>
                                                                @*@foreach (var item1 in ViewBag.Clientes)
                            {
                                <option value="@item1.Id">@item1.Nombre.ToUpper()</option>
                            }*@
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Proyecto o servicio </label>
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <button class="btn btn-default waves-effect" type="button" id="BTnNuevoProyecto" style="padding: 8px 19px;" data-toggle="tooltip" data-placement="top" title="Agregar Nuevo Proyecto o Servicio"><i class="fa fa-plus"></i></button>
                                                            </div>
                                                            <select class="form-control" id="Select_Proyecto_Empleado" onchange="ValidaSelect('Select_Proyecto_Empleado')">
                                                                <option value="0">SELECCIONAR </option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Esquema de Contratación   </label>
                                                        <select class="form-control" id="Select_EsquemaContratacion_Empleado" onchange="ValidaSelect('Select_EsquemaContratacion_Empleado')">
                                                            <option value="0">SELECCIONAR </option>
                                                            @foreach (var item1 in ViewBag.EsquemaContratacion)
                                                            {
                                                                <option value="@item1.Id">@item1.Nombre.ToUpper()</option>
                                                            }
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-8 col-lg-8">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Dirección centro de rabajo  </label>
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <button class="btn btn-default waves-effect" type="button" id="BTnNuevoCentroTrabajo" style="padding: 8px 19px;" data-toggle="tooltip" data-placement="top" title="Agregar Nuevo Centro de Trabajo"><i class="fa fa-plus"></i></button>
                                                            </div>
                                                            <select class="form-control" id="Select_Centro_Trabajo_Empleado" onchange="ValidaSelect('Select_Centro_Trabajo_Empleado')">
                                                                <option value="0">SELECCIONAR </option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput"> Sueldo </label>
                                                        <input type="text" class="form-control input-number" id="Sueldo_Empleado" value="@{ if (ViewBag.Personas.PersonasDetalle.Sueldo != null) { @ViewBag.Personas.PersonasDetalle.Sueldo }  }" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                            </div>
                                            <hr />
                                            <div class="row">
                                                <div class="col-md-9 text-left">
                                                    <h5>Acceso aplicaciones </h5>
                                                    <br />
                                                </div>
                                                <div class="col-md-3 col-lg-3">
                                                    <button class="btn waves-effect waves-light btn-save col-md-12" data-toggle="modal" data-target="#AgregarAplicacion">Agregar aplicación <i class="fa fa-plus"></i></button>
                                                </div>
                                            </div>
                                            <div class="row" id="DivContenidoPersonasAplicaciones">
                                                @if (@ViewBag.PersonasAplicaciones != null)
                                                {
                                                    <div class="col-sm-12">
                                                        <table class="table table-striped text-center table-hover" width="100%">
                                                            <thead class="thead-dark text-center">
                                                                <tr>
                                                                    <th class="text-center"><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Aplicación </p> </th>
                                                                    <th class="text-center"><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Fecha Registro</p> </th>
                                                                    <th></th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                @{
                                                                    foreach (var Dat in ViewBag.PersonasAplicaciones)
                                                                    {
                                                                        <tr>
                                                                            <td>
                                                                                @Dat.Cat_Aplicaciones.Nombre
                                                                            </td>
                                                                            <td>
                                                                                @Convert.ToDateTime(Dat.FechaRegistro).ToString("yyyy-MM-dd")
                                                                            </td>
                                                                            <td>
                                                                                <button class='btn waves-effect waves-light btn-danger ' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarAplicacion(@Dat.Id)'><i class='fa fa-trash'></i></button>
                                                                            </td>
                                                                        </tr>
                                                                    }
                                                                }
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="col-sm-12 text-center">
                                                        <h5>No se registraron aplicaciones </h5>
                                                        <br />
                                                    </div>
                                                }
                                            </div>
                                            <hr />
                                            <div class="row">
                                                <div class="col-md-12 text-left">
                                                    <h5>Experiencia </h5>
                                                    <hr />
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Ultima empresa  </label>
                                                        <input type="text" class="form-control" id="UltimaEmpresa_Empleado" value="@{ if (ViewBag.PersonasExperiencia.Empresa != null) { @ViewBag.PersonasExperiencia.Empresa }  }" onchange="ValidaInput('UltimaEmpresa_Empleado')" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Ultimo puesto   </label>
                                                        <input type="text" class="form-control" id="UltimoPuesto_Empleado" value="@{ if (ViewBag.PersonasExperiencia.Puesto != null) { @ViewBag.PersonasExperiencia.Puesto }  }" onchange="ValidaInput('UltimoPuesto_Empleado')" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Motivo de salida </label>
                                                        <input type="text" class="form-control" id="MotivoSalida_Empleado" value="@{ if (ViewBag.PersonasExperiencia.MotivoSalida != null) { @ViewBag.PersonasExperiencia.MotivoSalida }  }" onchange="ValidaInput('MotivoSalida_Empleado')" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                                <div class="col-md-12 col-lg-12">
                                                    <div class="form-group">
                                                        <label for="largeInput"> Actividades  </label>
                                                        <textarea class="form-control" id="Actividades_Puesto_Empleado" required="" rows="3" onkeyup="mayus(this);"> @{ if (ViewBag.PersonasExperiencia.Actividades != null) { @ViewBag.PersonasExperiencia.Actividades }  } </textarea>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12 col-lg-12">
                                                    <button class="btn waves-effect waves-light btn-primary col-md-4" onclick="GuardarInformacionPuesto()">  Guardar   <i class="fa fa-floppy-o"></i></button>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12 text-left">
                                                    <hr />
                                                    <h5>Entrevistas</h5>
                                                    <br />
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-5 col-lg-12">
                                                    <div class="form-check">
                                                        <label class="form-check-label">
                                                            <input type="checkbox" class="form-check-input" id="checkboxEntrevista"> Agregar Entrevistas
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" style="display:none" id="DivFormEntrevisa">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="row">
                                                        <div class="col-md-12 col-lg-12">
                                                            <div class="form-group">
                                                                <label for="largeInput">* Entrevisto  </label>
                                                                <input type="text" class="form-control input-number" id="Entrevisto_Entrevista" onchange="ValidaInput('Entrevisto_Entrevista')" onkeyup="mayus(this);">
                                                            </div>
                                                        </div>
                                                        <div class="col-md-12 col-lg-12">
                                                            <div class="form-group">
                                                                <label for="largeInput">* Fecha entrevista </label>
                                                                <input type="date" class="form-control" id="FechaEntrevista_Entrevista">
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput"> Observaciones   </label>
                                                        <textarea class="form-control" id="Observaciones_Entrevista" required="" rows="6" onkeyup="mayus(this);"></textarea>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <br />
                                                    <button class="btn waves-effect waves-light btn-save col-md-12" id="BTnNuevoEntrevista">  Guardar entrevista <i class="fa fa-floppy-o"></i></button>
                                                    <br /><br />
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12 col-lg-12">
                                                    <div class="row">
                                                        <div class="col-md-12 text-center">
                                                            <p><strong>Lista de entrevistas </strong>  </p>
                                                        </div>
                                                        <div class="col-md-12 table-responsive" id="TablaEntrevitas">
                                                            <table class='table text-center table-hover table-striped' width='100%' id='TableListaEntrevitas2'>
                                                                <thead class='thead-dark  text-center'>
                                                                    <tr>
                                                                        <th class='text-center'>Entrevisto</th>
                                                                        <th class='text-center'>Fecha Entrevista</th>
                                                                        <th class='text-center'>Observaciones </th>
                                                                        <th class='text-center'> </th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @if (ViewBag.Entrevistas != null)
                                                                    {
                                                                        foreach (var item1 in ViewBag.Entrevistas)
                                                                        {
                                                                            <tr>
                                                                                <td> @item1.Entrevisto</td>
                                                                                <td> @item1.FechaEntrevista</td>
                                                                                <td> @item1.Observaciones</td>
                                                                                <td>
                                                                                    <div class="col-md-12 text-center">
                                                                                        <button class='btn waves-effect waves-light btn-danger' onclick='EliminarEntrevita(@item1.Id)'><i class='fa fa-trash'></i></button>
                                                                                    </div>
                                                                                </td>
                                                                            </tr>
                                                                        }
                                                                    }
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane" id="menu5" role="tabpanel">
                                            <div class="row">
                                                <div class="col-md-12 text-left">
                                                    <h3>Examen</h3>
                                                    <p>Completa los campos marcados * </p>
                                                    <hr />
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-check">
                                                        <label class="form-check-label">
                                                            <input type="checkbox" class="form-check-input" id="ApplicoExamen" checked="checked"> No aplico examen
                                                        </label>
                                                        <br /><br />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" id="DivApplicoExamen" style="display:none;">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Tipo examen  </label>
                                                        <div class="input-group">
                                                            <div class="input-group-prepend">
                                                                <button class="btn btn-default waves-effect" type="button" data-toggle="modal" data-target="#AgregarTipoExamen" style="padding: 8px 19px;" data-toggle="tooltip" data-placement="top" title="Agregar Nuevo Tipo Examen"><i class="fa fa-plus"></i></button>
                                                            </div>
                                                            <select class="form-control" id="Select_TipoExamen_Empleado" onchange="ValidaSelect('Select_TipoExamen_Empleado')">
                                                                <option value="0">Seleccionar </option>
                                                                @foreach (var item1 in ViewBag.TipoExamen)
                                                                {
                                                                    <option value="@item1.Id">@item1.Nombre.ToUpper()</option>
                                                                }
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Calificación   </label>
                                                        <input type="text" class="form-control" id="Examen_Calificacion_Empleado" value="@{ if (ViewBag.Examen.Calificacion != null) { @ViewBag.Examen.Calificacion }  }" onchange="ValidaInput('Examen_Calificacion_Empleado')" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Califico  </label>
                                                        <input type="text" class="form-control" id="Examen_Califico_Empleado" value="@{ if (ViewBag.Examen.Califico != null) { @ViewBag.Examen.Califico }  }" onchange="ValidaInput('Examen_Califico_Empleado')" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Fecha aplicación   </label>
                                                        <input type="date" class="form-control" id="Examen_FechaAplicacion_Empleado" value="@{ if (ViewBag.Examen.FechaAplicacion != null) { @ViewBag.Examen.FechaAplicacion.ToString("yyyy-MM-dd") }  }" onchange="ValidaInput('Examen_FechaAplicacion_Empleado')">
                                                    </div>
                                                </div>
                                                <div class="col-md-8 col-lg-8">
                                                    <div class="form-group">
                                                        <label for="largeInput"> Observaciones   </label>
                                                        <textarea class="form-control" id="Examen_Observaciones_Empleado" required="" rows="3" onkeyup="mayus(this);">@{ if (ViewBag.Examen.Observaciones != null) { @ViewBag.Examen.Observaciones }  }</textarea>
                                                    </div>
                                                </div>
                                                <div class="col-md-8 col-lg-8 table-responsive" id="DivTableExamen">
                                                    @{ if (ViewBag.Examen.NmArchivo != null)
                                                        {
                                                            if (ViewBag.Examen.NmArchivo.Length > 0)
                                                            {
                                                                <table class='table text-center table-hover table-striped' width='100%' id='TableListaExamen'>
                                                                    <thead class='thead-dark text-center'>
                                                                        <tr>
                                                                            <th class='text-center'>Archivo</th>
                                                                            <th class='text-center'> </th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>
                                                                        <tr>
                                                                            <td>@ViewBag.Examen.NmOriginal </td>
                                                                            <td>
                                                                                <div class="col-md-12 text-center">
                                                                                    <button class='btn waves-effect btn-view waves-light' onclick='MostrarExamen()' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>
                                                                                    <button class='btn waves-effect waves-light btn-danger' id="EliminarExamen" onclick='EliminarExamen()' data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>
                                                                                </div>
                                                                            </td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                            }
                                                        }
                                                    }
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <label for="largeInput">Archivo formato PDF </label>
                                                    <button class="btn waves-effect waves-light btn-uppload2 col-md-12" id="BtnSubirExamen" onclick="BtnCargarExamen()">  Subir examen <i class="fa fa-cloud-upload"></i></button>
                                                    <br /><br />
                                                </div>
                                                <div class="col-md-12">
                                                    <input id="fileInput2" type="file" multiple style="visibility:hidden">
                                                </div>

                                            </div>
                                            <div class="row">
                                                <div class="col-md-12 col-lg-12">
                                                    <button class="btn waves-effect waves-light btn-primary col-md-3" onclick="GuardarExamen()">  Guardar   <i class="fa fa-floppy-o"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane" id="menu6" role="tabpanel">
                                            <div class="row">
                                                <div class="col-md-12 text-left">
                                                    <h5>Prueba Psicométrico </h5>
                                                    <p>Completa los campos marcados * </p>
                                                    <hr />
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-check">
                                                        <label class="form-check-label">
                                                            <input type="checkbox" class="form-check-input" id="ApplicoPrueba" checked="checked"> No aplico prueba
                                                        </label>
                                                        <br /><br />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" id="DivApplicoPrueba" style="display:none;">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Califico  </label>
                                                        <input type="text" class="form-control" id="Prueba_Califico_Empleado" value="@{ if (ViewBag.Prueba.Califico != null) { @ViewBag.Prueba.Califico }  }" onchange="ValidaInput('Prueba_Califico_Empleado')" onkeyup="mayus(this);">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Fecha aplicación   </label>
                                                        <input type="date" class="form-control" id="Prueba_FechaAplicacion_Empleado" value="@{ if (ViewBag.Prueba.FechaAplicacion != null) { @ViewBag.Prueba.FechaAplicacion.ToString("yyyy-MM-dd") }  }" onchange="ValidaInput('Prueba_FechaAplicacion_Empleado')">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput"> Observaciones   </label>
                                                        <textarea class="form-control" id="Prueba_Observaciones_Empleado" required="" rows="3" onkeyup="mayus(this);">@{ if (ViewBag.Prueba.Observaciones != null) { @ViewBag.Prueba.Observaciones }  }</textarea>
                                                    </div>
                                                </div>
                                                <div class="col-md-8 col-lg-8 table-responsive" id="DivTablePrueba">
                                                    @{ if (ViewBag.Prueba.NmArchivo != null)
                                                        {
                                                            if (ViewBag.Prueba.NmArchivo.Length > 0)
                                                            {
                                                                <table class='table text-center table-hover table-striped' width='100%' id='TableListaPrueba'>
                                                                    <thead class='thead-dark  text-center'>
                                                                        <tr>
                                                                            <th class='text-center'>Archivo</th>
                                                                            <th class='text-center'> </th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>
                                                                        <tr>
                                                                            <td>@ViewBag.Prueba.NmOriginal </td>
                                                                            <td>
                                                                                <div class="col-md-12 text-center">
                                                                                    <button class='btn waves-effect btn-view waves-light' onclick='MostrarPrueba()' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>
                                                                                    <button class='btn waves-effect waves-light btn-danger' id="BtnEliminarPrueba" onclick='EliminarPrueba()' data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>
                                                                                </div>
                                                                            </td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                            }
                                                        }
                                                    }
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <label for="largeInput">Archivo formato PDF </label>
                                                    <button class="btn waves-effect waves-light btn-uppload2 col-md-12" id="BtnSubirPrueba" onclick="BtnCargarPrueba()">  Subir prueba <i class="fa fa-cloud-upload"></i></button>
                                                    <br /><br />
                                                </div>
                                                <div class="col-md-12">
                                                    <input id="fileInput3" type="file" multiple style="visibility:hidden">
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12 col-lg-12">
                                                    <button class="btn waves-effect waves-light btn-primary col-md-3" onclick="GuardarPrueba()">  Guardar   <i class="fa fa-floppy-o"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane" id="menu7" role="tabpanel">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <h5>Documentos </h5>
                                                    <p> Agrega o crea cuantos documentos sean necesarios. Completa los campos marcados * </p>
                                                   
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-3 col-lg-3">
                                                    <button class="btn waves-effect waves-light btn-primary col-md-12" data-toggle="modal" data-target="#ListaDocumentos">  Agregar documento    <i class="fa fa-plus"></i></button>
                                                    <br /><br />
                                                </div>
                                                <div class="col-md-12 table-responsive" id="DivTableListaDocumentos">
                                                    <table class='table text-center table-hover table-striped' width='100%'>
                                                        <thead class='thead-dark text-center'>
                                                            <tr>
                                                                <th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Archivo</p></th>
                                                                <th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Estatus </p></th>
                                                                <th class='text-center'> </th>
                                                                <th class='text-center'> </th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @if (ViewBag.LstDocumentos != null)
                                                            {
                                                                foreach (var doc in ViewBag.LstDocumentos)
                                                                {
                                                                    <tr>
                                                                        <td>
                                                                            <strong style="font-size:10px;">@doc.Cat_TipoDocumento.Nombre</strong>
                                                                        </td>
                                                                        <td>
                                                                            <strong style="font-size:10px;">
                                                                                @doc.Cat_EstatusDocumento.Nombre.ToUpper()
                                                                            </strong>
                                                                        </td>
                                                                        <td>
                                                                            @if (doc.DocumentoVersiones.NmArchivo == null)
                                                                            {
                                                                                <strong style="font-size:10px;">SIN ARCHIVO</strong>
                                                                                <input type='file' id='fileInput_@doc.Id' onchange='handleFiles(@doc.Id)' style='visibility: hidden; width: 0px;'>
                                                                            }
                                                                            else
                                                                            {
                                                                                <button class='btn waves-effect btn-danger waves-light ' onclick='EliminarArchivo(@doc.Id)' data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>
                                                                                <button class='btn waves-effect btn-view waves-light ' onclick='MostrarArchivo(@doc.Id)' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>
                                                                            }
                                                                        </td>
                                                                        <td>
                                                                            @if (doc.DocumentoVersiones.NmArchivo == null)
                                                                            {
                                                                                <button class='btn waves-effect waves-light btn-uppload ' id='BtnSubirArchivoListDocumentos_@doc.Id' onclick='SubirArchivoListDocumentos(@doc.Id)' data-toggle='tooltip' data-placement='top' title='Subir documento'><i class='fa fa-cloud-upload'></i></button>
                                                                            }

                                                                            <button class='btn waves-effect btn-save2 waves-light ' onclick='EditarDocumento(@doc.Id)' data-toggle='tooltip' data-placement='top' title='Editar'><i class='fa fa-pencil'></i></button>
                                                                            <button class='btn waves-effect waves-light btn-danger ' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarDocumento(@doc.Id)'><i class='fa fa-trash'></i></button>
                                                                        </td>
                                                                    </tr>
                                                                }
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane" id="menu8" role="tabpanel">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <h5>Información de ingreso </h5>
                                                    <p> Completa los campos marcados * </p>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-3 col-lg-3">
                                                    <button class="btn waves-effect waves-light btn-save col-md-12" id="BtnNuvaImagenFotografica">  Agregar fotografia    <i class="fa fa-plus"></i></button>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4 text-center">
                                                    <br />
                                                    <p><strong>Imagen fotográfica del empleado </strong>  </p>

                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4 text-center">
                                                    <div id="ImgEmpleado" style="width:100%">
                                                        <img src="https:\\@ViewBag.Foto" width="100%" />
                                                    </div>
                                                    <input id="fileInput4" type="file" style="visibility:hidden">
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Fecha de ingreso </label>
                                                        <input type="date" class="form-control" id="Registrar_FechaIngreso_Empleado" value="@{ if (ViewBag.Personas.PersonasDetalle.FechaIngreso != null) { @ViewBag.Personas.PersonasDetalle.FechaIngreso.ToString("yyyy-MM-dd") }  }" onchange="ValidaInput('Registrar_FechaIngreso_Empleado')">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Fecha vencimiento contrato </label>
                                                        <input type="date" class="form-control" id="Registrar_FechaVencimiento_Empleado" value="@{ if (ViewBag.Personas.PersonasDetalle.Fechavencimiento != null) { @ViewBag.Personas.PersonasDetalle.Fechavencimiento.ToString("yyyy-MM-dd") }  }" onchange="ValidaInput('Registrar_FechaVencimiento_Empleado')">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-check">
                                                        <br />
                                                        <label class="form-check-label">
                                                            <input type="checkbox" class="form-check-input" id="Vencimiento"> No aplica fecha vencimiento
                                                        </label>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-lg-4">
                                                    <div class="form-group">
                                                        <label for="largeInput">* Fuente de reclutamiento    </label>
                                                        <select class="form-control" id="Select_FuenteReclutamiento_Empleado" onchange="ValidaSelect('Select_FuenteReclutamiento_Empleado')">
                                                            <option value="0">Seleccionar </option>
                                                            @foreach (var item1 in ViewBag.FuenteReclutamiento)
                                                            {
                                                                <option value="@item1.Id">@item1.Nombre.ToUpper() </option>
                                                            }
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12 col-lg-12">
                                                    <button class="btn waves-effect waves-light btn-primary col-md-3" onclick="GuardarIngreso()">  Guardar   <i class="fa fa-floppy-o"></i></button>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="~/assets/js/bootstrap-notify/bootstrap-notify.min.js"></script>
<script src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>


<script>
    function EliminarAplicacion(Id) {

        swal({
            title: "¿Eliminar aplicación ?",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
                swal.close();

                var obj = {};
                obj['Id'] = Id;

                var jsonObject = {
                    "PersonasAplicaciones": obj
                };

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Aplicaciones_Editar_Eliminar", "Aplicaciones")",
                    async: false,
                    data: JSON.stringify(jsonObject),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: resultadoEliminarAplicacion,
                    error: errores
                });

            } else {
                swal.close();
            }
        });
    }
    function resultadoEliminarAplicacion(data) {

        if (data.Id >= 0) {
            PintaTableListaAplicaciones();
        } else {
            $.notify({
                icon: 'fa fa-paw',
                message: "Aplicación no eliminada .",
            }, {
                type: 'warning',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    }
    function PintaTableListaAplicaciones() {
       var obj = {};
        obj['Id'] = @ViewBag.Personas.Id;

        var jsonObject = {
            "Personas": obj
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("Aplicaciones_Editar_Listar", "Aplicaciones")",
            async: false,
            data: JSON.stringify(jsonObject),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {

                var Table = "";
                if (result.length > 0) {
                    Table +=
                        "<div class='col-sm-12'>" +
                            "<table class='table text-center table-hover table-striped' width='100%' >" +
                                "<thead class='thead-dark text-center'>" +
                                    "<tr>" +
                                        "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Aplicación</p> </th>" +
                                        "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Fecha Registro</p> </th>" +
                                        "<th class='text-center'> </th>" +
                                    "</tr>" +
                                "</thead>" +
                                "<tbody>";
                            for (var b = 0; b < result.length; b++) {
                            Table += "<tr>" +
                                        "<td>" +
                                            result[b].Cat_Aplicaciones.Nombre +
                                        "</td>" +
                                        "<td>" +
                                            moment(result[b].FechaRegistro).format('DD/MM/YYYY') +
                                        "</td>" +
                                        "<td>" +
                                            "<button class='btn waves-effect waves-light btn-danger' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarAplicacion(" + result[b].Id + ")'><i class='fa fa-trash'></i></button>" +
                                        "</td>" +
                                     "</td>";
                                }
                    Table +=    "</tbody>" +
                            "</table>" +
                        "</div>";
                } else {
                Table += "<div class='col-sm-12 text-center'>" +
                            "<h5>No se registraron aplicaciones </h5>" +
                            "<br />" +
                        "</div>";
                }

                $('#DivContenidoPersonasAplicaciones').html(Table);
                $('[data-toggle="tooltip"]').tooltip();

            },
            error: function () {
                var Table = "";

                    Table += "<div class='col-sm-12 text-center'>" +
                        "<h5>No se registraron aplicaciones </h5>" +
                        "<br />" +
                        "</div>";

                $('#DivContenidoPersonasAplicaciones').html(Table);
            },
        });
    }

    $('#BtnNuevaAplicacion').click(function () {
        var Aplicacion = $("#Select_Aplicacion option:selected").val();
        $('#Select_Aplicacion').css("border", "1px solid #f44336");

        if ($("#Select_Aplicacion option:selected").val() > 0) {
            $('#Select_Aplicacion').css("border", "1px solid #cccccc");
        }

        var resul = false;

        if (Aplicacion > 0) {
            resul = true;
        }

        if (resul) {

            var Personas = new Object();
            Personas.Id = @ViewBag.Personas.Id;

            var Cat_Aplicaciones = new Object();
            Cat_Aplicaciones.Id = Aplicacion;

            var PersonasAplicaciones = new Object();
            PersonasAplicaciones.Personas = Personas;
            PersonasAplicaciones.Cat_Aplicaciones = Cat_Aplicaciones;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Aplicaciones_Editar_Agregar", "Aplicaciones")",
                async: false,
                data: JSON.stringify(PersonasAplicaciones),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Id >= 0) {
                        $("#BtnCerrarAplicacion").trigger("click");
                        PintaTableListaAplicaciones();
                    } else if (result.Id = -1 ) {
                        $("#BtnCerrarAplicacion").trigger("click");
                        $.notify({
                            icon: 'fa fa-paw',
                            message: "La aplicación ya se encuentra agregada.",
                        }, {
                            type: 'warning',
                            allow_dismiss: false,
                            animate: {
                                enter: 'animated rollIn',
                                exit: 'animated rollOut'
                            }
                        });
                    } else {
                        $("#BtnCerrarAplicacion").trigger("click");
                        $.notify({
                            icon: 'fa fa-paw',
                            message: "Aplicación no agregada.",
                        }, {
                            type: 'warning',
                            allow_dismiss: false,
                            animate: {
                                enter: 'animated rollIn',
                                exit: 'animated rollOut'
                            }
                        });
                    }
                },
                error: function () {
                    $("#BtnCerrarAplicacion").trigger("click");
                    $.notify({
                        message: "Inténtelo mas tarde."
                    }, {
                        type: 'danger',
                        allow_dismiss: false,
                        animate: {
                            enter: 'animated rollIn',
                            exit: 'animated rollOut'
                        }
                    });
                }
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }
    });
</script>

<script>
    function DarDeAlta() {
         swal({
            title: "Confirmación de alta de empleado",
            text: "Deseas darlo de alta !" ,
            imageUrl: "../Images/icons/5673974.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
               var obj = {};
                obj['Id'] = @ViewBag.Personas.Id;

                var jsonObject = {
                    "Personas": obj
                };

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Empleados_DarDeAlta", "Empleados")",
                    async: false,
                    data: JSON.stringify(jsonObject),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: resultadoDarDeAlta,
                    error: errores
                });
            }
        });
    }

    function resultadoDarDeAlta() {
        swal({
            title: "Empleado dado de alta . !",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: false,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "OK",
            closeOnConfirm: false,
        },
            function (isConfirm) {
                if (isConfirm) {
                    location.reload();
                }
            });
    }

</script>
<script>
    function ValidarDarDeBaja() {

        swal({
            title: "¿Dar de baja empleado?",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
                swal.close();
                $("#MotivosRechazo").modal("show");
            } else {
                swal.close();
            }
        });
    }

    function DarDeBaja() {
        var cat_MotivosBajaEmpleados = new Array();
        $("[name='checksMotivosBaja[]']:checked").each(function () {
           
            var Cat_MotivosBajaEmpleado = new Object();
            Cat_MotivosBajaEmpleado.Id = $(this).val();
            cat_MotivosBajaEmpleados.push(Cat_MotivosBajaEmpleado);
        });

        var Personas = new Object();
        Personas.Id = @ViewBag.Personas.Id;

        var EmpleadoBaja = new Object();
        EmpleadoBaja.Personas = Personas;
        EmpleadoBaja.cat_MotivosBajaEmpleados = cat_MotivosBajaEmpleados;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Empleados_DarDeBaja", "Empleados")",
            async: false,
            data: JSON.stringify(EmpleadoBaja),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: resultadoDarDeBaja,
            error: errores
        });
    }

    function resultadoDarDeBaja(data) {
        $("#BtnCerrarMotivosBaja").trigger("click");
        if (data.Id >=  0) {
            swal({
                title: "Empleado dado de baja . !",
                text: "",
                imageUrl: "../Images/icons/5673974.png",
                buttons: true,
                dangerMode: true,
            }, function (isConfirm) {
                if (isConfirm) {
                    location.reload();
                }
            });
        } else {
            $.notify({
                icon: 'fa fa-paw',
                message: "Empleado no dado de baja.",
            }, {
                type: 'warning',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    }
</script>

<script>
    function GuardarIngreso() {
        if (ValidaRegistroImagen()) {
       
            var Cat_FuenteReclutamiento = new Object();
            Cat_FuenteReclutamiento.Id = $("#Select_FuenteReclutamiento_Empleado option:selected").val();;

            var PersonasDetalle = new Object();
            PersonasDetalle.FechaIngreso = $('#Registrar_FechaIngreso_Empleado').val();
            PersonasDetalle.Vencimiento = 0;
            PersonasDetalle.Cat_FuenteReclutamiento = Cat_FuenteReclutamiento;

            if (!$('#Vencimiento').is(':checked')) {
                PersonasDetalle.Vencimiento = 1;
                PersonasDetalle.Fechavencimiento = $('#Registrar_FechaVencimiento_Empleado').val();;
            }

            var Personas = new Object();
            Personas.Id = @ViewBag.Personas.Id;
            Personas.PersonasDetalle = PersonasDetalle;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Empleados_Actualizar_InformacionIngreso", "Empleados")",
                async: false,
                data: JSON.stringify(Personas),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    swal({
                        title: "¡ Actualizado !",
                        text: "",
                        imageUrl: "../Images/icons/5673974.png",
                        buttons: true,
                        dangerMode: true,
                    }, function (isConfirm) {
                        if (isConfirm) {
                            swal.close();
                        }
                    });
                },
                error: errores
            });

        } else {
            $.notify({
                icon: 'fa fa-paw',
                message: "Completa el formulario.",
            }, {
                type: 'warning',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }

    }

    $('#BtnNuvaImagenFotografica').click(function () {
        $("#fileInput4").click();
    });

    $('#fileInput4').change(function () {
        var fileInput = document.getElementById('fileInput4');

        if (fileInput.files.length > 0) {
            for (i = 0; i < fileInput.files.length; i++) {
                var ext = fileInput.files[i].name.split('.').pop();
                Extencion = fileInput.files[i].name.split('.').pop();

                // Convertimos en minúscula porque
                // la extensión del archivo puede estar en mayúscula
                ext = ext.toLowerCase();

                if (ext == 'png' || ext == 'jpg' || ext == 'jpeg') {
                    Carga = true;
                } else {
                    Carga = false;
                    Formato = ext;
                    break;
                }
            }

            for (i = 0; i < fileInput.files.length; i++) {
                var filesize = ((fileInput.files[i].size / 1024) / 1024).toFixed(4);

                if (filesize < 10) {
                    CargaTam = true;
                } else {
                    CargaTam = false;
                    Tam = filesize;
                    break;
                }
            }

            if (Carga) {
                if (CargaTam) {

                    $("#BtnNuvaImagenFotografica").prop('disabled', true);
                    var formData = new FormData();

                    for (i = 0; i < fileInput.files.length; i++) {
                        formData.append(fileInput.files[i].name, fileInput.files[i]);
                    }

                    $("#CargandoProcesos").modal("show");

                    $.ajax({
                        url: '/api/FileAPI/UploadFilesImagen',
                        type: 'POST',
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (Imagen) {
                            /*$("#fileProgress5").hide();*/
                            $("#BtnNuvaImagenFotografica").prop('disabled', false);

                            CargaImagenEmpleado(Imagen);
                        },
                        xhr: function () {

                            var fileXhr = $.ajaxSettings.xhr();
                            if (fileXhr.upload) {
                                $("progress").show();
                                fileXhr.upload.addEventListener("progress", function (e) {
                                    if (e.lengthComputable) {
                                        $("#fileProgress4").attr({
                                            value: e.loaded,
                                            max: e.total
                                        });
                                    }
                                }, false);
                            }
                            return fileXhr;
                        },
                        error: function () {

                            $("#BtnNuvaImagenFotografica").prop('disabled', false);
                            /*$("#fileProgress5").hide();*/
                            /*$("progress").css("display", "none");*/
                            $.notify({
                                message: "Problemas para leer el archivo",
                            }, {
                                type: 'warning',
                                allow_dismiss: false,
                                animate: {
                                    enter: 'animated rollIn',
                                    exit: 'animated rollOut'
                                }
                            });
                        }
                    }).done(function (results) {
                        setTimeout(CerrarModal, 1000);
                    });;

                } else {
                    $.notify({
                        message: "Intentas cargar una imagen muy pesada: " + Tam + " MG" + " Límite permitido 10 MG",
                    }, {
                        type: 'warning',
                        allow_dismiss: false,
                        animate: {
                            enter: 'animated rollIn',
                            exit: 'animated rollOut'
                        }
                    });
                }
            } else {
                $.notify({
                    message: "Intentas cargar un formato no permitido: " + Formato + " Formato de archivo permitido: .png, .jpg, jpeg ",
                }, {
                    type: 'warning',
                    allow_dismiss: false,
                    animate: {
                        enter: 'animated rollIn',
                        exit: 'animated rollOut'
                    }
                });
            }

        } else {
            $("#BtnNuvaImagenFotografica").prop('disabled', false);
            $.notify({
                message: "Selecciona un archivo."
            }, {
                type: 'danger',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    });

    function CargaImagenEmpleado(Imagen) {

        var PersonasDetalle = new Object();
        PersonasDetalle.NmArchivo = Imagen.NmArchivo;
        PersonasDetalle.NmOriginal = Imagen.NmOriginal;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Empleados_NuevoEmpleado_AgregarImagen", "Empleados")",
            data: JSON.stringify(PersonasDetalle),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {
                console.log(respuesta);
                $('#ImgEmpleado').html('');
                var image = new Image();
                var src = 'https://' + respuesta;
                image.src = src;
                image.style.width = '100%';

                $('#ImgEmpleado').append(image);
            },
            error: errores
        });

    }

    $(document).on('click', '#Vencimiento', function () {
        let val = $(this).val();
        //Revisa en que status está el checkbox y controlalo según lo //desees
        if ($(this).is(':checked')) {

            $("#Registrar_FechaVencimiento_Empleado").prop('disabled', true);
            $('#Registrar_FechaVencimiento_Empleado').css("border", "1px solid #cccccc");
        }
        else {
            $("#Registrar_FechaVencimiento_Empleado").prop('disabled', false);
        }
    });

    function ValidaRegistroImagen() {
        var result = false;
        if (ValidaRegistrar()) {
            if (ValidaImagen()) {
                result = true;
            }
        }
        return result;
    }

    function ValidaRegistrar() {

        var result = false;
        var fecha = false;
        var Formulario = false;

        $('#Registrar_FechaIngreso_Empleado').css("border", "1px solid #f44336");
        $('#Select_FuenteReclutamiento_Empleado').css("border", "1px solid #f44336");

        if ($("#Select_FuenteReclutamiento_Empleado option:selected").val() > 0) {
            $('#Select_FuenteReclutamiento_Empleado').css("border", "1px solid #cccccc");
        }

        if ($('#Registrar_FechaIngreso_Empleado').val().length > 0) {
            $('#Registrar_FechaIngreso_Empleado').css("border", "1px solid #cccccc");
        }

        if ($("#Vencimiento").is(':checked')) {
            fecha = true;
        } else {
            $('#Registrar_FechaVencimiento_Empleado').css("border", "1px solid #f44336");
            if ($('#Registrar_FechaVencimiento_Empleado').val().length > 0) {
                $('#Registrar_FechaVencimiento_Empleado').css("border", "1px solid #cccccc");
                fecha = true;
            }
        }

        if ($("#Select_FuenteReclutamiento_Empleado option:selected").val() > 0) {
            if ($('#Registrar_FechaIngreso_Empleado').val().length > 0) {
                Formulario = true;
            }
        }

        if (Formulario) {
            if (fecha) {
                result = true;
            }
        }

        return result;
    }

    function ValidaImagen() {
        var result = false;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Empleados_NuevoEmpleado_ConsultarImagen", "Empleados")",
            async: false,
            data: "",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {
                if (respuesta.NmArchivo != null) {
                    result = true;
                }else {
                    $.notify({
                        icon: 'fa fa-paw',
                        message: "Debes de registrar una imagen foto grafica del empleado .",
                    }, {
                        type: 'warning',
                        allow_dismiss: false,
                        animate: {
                            enter: 'animated rollIn',
                            exit: 'animated rollOut'
                        }
                    });
                }
            },
            error: errores
        });

        return result;
    }

    $(document).ready(function () {

        if (@ViewBag.Personas.PersonasDetalle.Vencimiento == 1) {
            $('#Vencimiento').prop('checked', false);
        } else {
            $('#Vencimiento').prop('checked', true);

            if ($('#Vencimiento').is(':checked')) {
                $("#Registrar_FechaVencimiento_Empleado").prop('disabled', true);
                $('#Registrar_FechaVencimiento_Empleado').css("border", "1px solid #cccccc");
            }
            else {
                $("#Registrar_FechaVencimiento_Empleado").prop('disabled', false);
            }
        }

        var valor = @ViewBag.Personas.PersonasDetalle.Cat_FuenteReclutamiento.Id;
        $("#Select_FuenteReclutamiento_Empleado option[value='" + valor + "']").attr("selected", true);

    });
</script>

<script>

    function EditarDocumento(num)
    {
        $("#EditarDocumento").modal("show");
    }

    function AgregarDocumentoLista(value) {
        if (value > 0) {

            var Personas = new Object();
            Personas.Id = @ViewBag.Personas.Id;

            var Cat_TipoDocumento = new Object();
            Cat_TipoDocumento.Id = value;

            var PersonasDocumentos = new Object();
            PersonasDocumentos.Cat_TipoDocumento = Cat_TipoDocumento;
            PersonasDocumentos.Personas = Personas;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Documento_EditarEmpleado_Agregar_Lista", "Documentos")",
                data: JSON.stringify(PersonasDocumentos),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    PintaTableListaDocumentos(respuesta);
                },
                error: errores
            });
        }
    }

    function PintaTableListaDocumentos(respuesta) {
        var Table =
                    "<table class='table text-center table-hover table-striped' width='100%' >" +
                        "<thead class='thead-dark text-center'>" +
                            "<tr>" +
                                "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Archivo</p> </th>" +
                                "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Estatus</p> </th>" +
                                "<th class='text-center'> </th>" +
                                "<th class='text-center'> </th>" +
                            "</tr>" +
                        "</thead>" +
                        "<tbody>";

            if (respuesta.length > 0) {
                for (var b = 0; b < respuesta.length; b++) {
                    Table += "<tr>" +
                                "<td>" +
                                    "<strong style='font-size:10px;'>" + respuesta[b].Cat_TipoDocumento.Nombre + "</strong>" +
                                "</td>" +
                                "<td>" +
                                    "<strong style='font-size:10px;'>" +
                                        respuesta[b].Cat_EstatusDocumento.Nombre +
                                    "</strong>" +
                                "</td>" +
                                "<td>";
                        if (respuesta[b].DocumentoVersiones.NmArchivo == null) {
                            Table += "<strong style='font-size:10px;'>SIN ARCHIVO</strong>" +
                                     "<input type='file' id='fileInput_" + respuesta[b].Id + "' onchange='handleFiles(" + respuesta[b].Id + ")' style='visibility: hidden; width: 0px;'>";
                        } else {
                            Table += "<button class='btn waves-effect btn-danger waves-light ' onclick='EliminarArchivo(" + respuesta[b].Id + ")' data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>" +
                                     "<button class='btn waves-effect btn-view waves-light ' onclick='MostrarArchivo(" + respuesta[b].Id + ")' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>";
                        }
                      Table += "</td>" +
                                "<td>";
                        if (respuesta[b].DocumentoVersiones.NmArchivo == null) {
                            Table += "<button class='btn waves-effect waves-light btn-uppload ' id='BtnSubirArchivoListDocumentos_" + respuesta[b].Id + "' onclick='SubirArchivoListDocumentos(" + respuesta[b].Id + ")' data-toggle='tooltip' data-placement='top' title='Subir documento'><i class='fa fa-cloud-upload'></i></button>";
                        }
                            Table += "<button class='btn waves-effect btn-save2 waves-light ' onclick='EditarDocumento(" + respuesta[b].Id + ")' data-toggle='tooltip' data-placement='top' title='Editar'><i class='fa fa-pencil'></i></button>" +
                                    "<button class='btn waves-effect waves-light btn-danger ' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarDocumento(" + respuesta[b].Id + ")' ><i class='fa fa-trash'></i></button>";
                               "</td>";
                }
            }
            Table +=    "</tbody>"
                    "</table>";
        $('#DivTableListaDocumentos').html(Table);
        $('[data-toggle="tooltip"]').tooltip();
    }

    function SubirArchivoListDocumentos(num) {
        $("#fileInput_" + num).click();
    }

    function handleFiles(num) {
        var fileInput = document.getElementById('fileInput_' + num);

        if (fileInput.files.length > 0) {
            for (i = 0; i < fileInput.files.length; i++) {
                var ext = fileInput.files[i].name.split('.').pop();
                Extencion = fileInput.files[i].name.split('.').pop();

                // Convertimos en minúscula porque
                // la extensión del archivo puede estar en mayúscula
                ext = ext.toLowerCase();

                if (ext == 'pdf') {

                    Carga = true;
                } else {
                    Carga = false;
                    Formato = ext;
                    break;
                }
            }

            for (i = 0; i < fileInput.files.length; i++) {
                var filesize = ((fileInput.files[i].size / 1024) / 1024).toFixed(4);

                if (filesize < 10) {
                    CargaTam = true;
                } else {
                    CargaTam = false;
                    Tam = filesize;
                    break;
                }
            }

            if (Carga) {
                if (CargaTam) {

                    $("#BtnSubirArchivoListDocumentos_" + num).prop('disabled', true);
                    var formData = new FormData();

                    for (i = 0; i < fileInput.files.length; i++) {
                        formData.append(fileInput.files[i].name, fileInput.files[i]);
                    }

                    $("#CargandoProcesos").modal("show");

                    $.ajax({
                        url: '/api/FileAPI/UploadFilesDocumento',
                        type: 'POST',
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (documento) {
                           /* $("#fileProgress4").hide();*/
                            $("#BtnSubirArchivoListDocumentos_" + num).prop('disabled', false);

                            CargaDocumento(documento, num);
                        },
                        xhr: function () {

                            var fileXhr = $.ajaxSettings.xhr();
                            if (fileXhr.upload) {
                                $("progress").show();
                                fileXhr.upload.addEventListener("progress", function (e) {
                                    if (e.lengthComputable) {
                                        $("#fileProgress4").attr({
                                            value: e.loaded,
                                            max: e.total
                                        });
                                    }
                                }, false);
                            }
                            return fileXhr;
                        },
                        error: function () {

                            $("#BtnSubirArchivoListDocumentos_" + num).prop('disabled', false);
                           /* $("#fileProgress4").hide();*/
                            $.notify({
                                message: "Problemas para leer el archivo",
                            }, {
                                type: 'warning',
                                allow_dismiss: false,
                                animate: {
                                    enter: 'animated rollIn',
                                    exit: 'animated rollOut'
                                }
                            });
                            CerrarModal();
                        }
                    }).done(function (results) {
                        setTimeout(CerrarModal, 1000);
                    });
                } else {
                    $.notify({
                        message: "Intentas cargar una archivo muy pesada: " + Tam + " MG" + " Límite permitido 10 MG",
                    }, {
                        type: 'warning',
                        allow_dismiss: false,
                        animate: {
                            enter: 'animated rollIn',
                            exit: 'animated rollOut'
                        }
                    });
                }
            } else {
                $.notify({
                    message: "Intentas cargar un formato no permitido: " + Formato + " Formato de archivo permitido: .pdf ",
                }, {
                    type: 'warning',
                    allow_dismiss: false,
                    animate: {
                        enter: 'animated rollIn',
                        exit: 'animated rollOut'
                    }
                });
            }

        } else {
            $("#BtnSubirArchivoListDocumentos_" + num).prop('disabled', false);
            $.notify({
                message: "Selecciona un archivo."
            }, {
                type: 'danger',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }

    }

    function CargaDocumento(documento, num) {

        var Personas = new Object();
        Personas.Id = @ViewBag.Personas.Id;

        var DocumentoVersiones = new Object();
        DocumentoVersiones.NmArchivo = documento.NmArchivo;
        DocumentoVersiones.NmOriginal = documento.NmOriginal;

        var PersonasDocumentos = new Object();
        PersonasDocumentos.DocumentoVersiones = DocumentoVersiones;
        PersonasDocumentos.Id = num;
        PersonasDocumentos.Personas = Personas;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Documento_EditarEmpleado_ActulizarArchivo", "Documentos")",
            data: JSON.stringify(PersonasDocumentos),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {
                console.log(respuesta);
                PintaTableListaDocumentos(respuesta);
            },
            error: errores
        });

    }

    function EliminarArchivo(num)
    {
        swal({
            title: "¿Eliminar Archivo?",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
                swal.close();

                var Personas = new Object();
                Personas.Id = @ViewBag.Personas.Id;

                var Cat_EstatusDocumento = new Object();
                Cat_EstatusDocumento.Id = 3;

                var PersonasDocumentos = new Object();
                PersonasDocumentos.Id = num;
                PersonasDocumentos.Personas = Personas;
                PersonasDocumentos.Cat_EstatusDocumento = Cat_EstatusDocumento;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Documento_EditarEmpleado_Eliminar_Archivo", "Documentos")",
                    data: JSON.stringify(PersonasDocumentos),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (respuesta) {
                        PintaTableListaDocumentos(respuesta);
                    },
                    error: errores
                });
            }
        });
    }

    function MostrarArchivo(num) {

        var Personas = new Object();
        Personas.Id = @ViewBag.Personas.Id;

        var DocumentoVersiones = new Object();
        DocumentoVersiones.NmArchivo = null;
        DocumentoVersiones.NmOriginal = null;

        var PersonasDocumentos = new Object();
        PersonasDocumentos.DocumentoVersiones = DocumentoVersiones;
        PersonasDocumentos.Id = num;
        PersonasDocumentos.Personas = Personas;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Documento_EditarEmpleado_Mostrar", "Documentos")",
            data: JSON.stringify(PersonasDocumentos),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {
                console.log(respuesta);

                $("#ModalPDF").modal("show");
                var mail = "https://" + respuesta;
                $('#iframepdf').attr('src', mail);
            },
            error: errores
        });
    }

    function EliminarDocumento(num) {
        swal({
            title: "¿Eliminar Registro?",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
		        swal.close();

                var Personas = new Object();
                Personas.Id = @ViewBag.Personas.Id;

                var PersonasDocumentos = new Object();
                PersonasDocumentos.Id = num;
                PersonasDocumentos.Personas = Personas;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Documento_EditarEmpleado_Eliminar", "Documentos")",
                    data: JSON.stringify(PersonasDocumentos),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (respuesta) {
                        PintaTableListaDocumentos(respuesta);
                    },
                    error: errores
                });
            }
        });
    }

</script>


<script>
    $('#BTnNuevoDocumento').click(function () {

        var TipoExamen = $('#Nombre_Documento').val();
        $('#Nombre_Documento').css("border", "1px solid #f44336");

        if ($('#Nombre_Documento').val().length > 0) {
            $('#Nombre_Documento').css("border", "1px solid #cccccc");
        }

        var resul = false;

        if (TipoExamen.length > 0) {
            resul = true;
        }

        if (resul) {

            var obj = {};
            obj['Nombre'] = TipoExamen;

            var jsonObject = {
                "Cat_TipoDocumento": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_TipoDocumento_Agregar", "TipoDocumento")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoTipoDocumento,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }
    });

    function resultadoTipoDocumento(data) {
        switch (data.Id) {
            case -1:
                swal({
                     title: "Algo ocurrió !",
                    text: "El documento que intentas agregar ya se encuentra registrado.",
                     imageUrl: "../Images/icons/4944051.png",
                     buttons: true,
                     dangerMode: true,
                 }, function (isConfirm) {
                     if (isConfirm) {
                         swal.close();
                     }
                });
                
                $('#Nombre_Documento').css("border", "1px solid #f44336");
                break;
            case 0:
                swal({
                     title: "Algo ocurrió !",
                     text: "",
                     imageUrl: "../Images/icons/4944051.png",
                     buttons: true,
                     dangerMode: true,
                 }, function (isConfirm) {
                     if (isConfirm) {
                         swal.close();
                     }
                });
                break;

            default:
            // code block
        }

        if (data.Id > 0)
        {
            swal({
                title: "¡Nuevo documento agregado!",
                text: "",
                imageUrl: "../Images/icons/5673974.png",
                buttons: true,
                dangerMode: true,
            }, function (isConfirm) {
                if (isConfirm) {
                    swal.close();
                }
            });

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_TipoDocumento_Listar", "TipoDocumento")",
                data: '',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $("#DivTableContenidoDocumentos").show();
                    $("#DivBtnNuevoDocumento").show();
                    $("#DivNuevoDocumento").css("display", "none");

                    $("#DivTableContenidoDocumentos").empty();

                    console.log(data);

                    var Tabla = "<div class='table-responsive'>" +
                                    "<table class='table table-hover text-center' width='100%' id='TableListCatDocumentos'>"
                                    "<thead class='thead-dark btn-primary text-center'>" +
                                            "<tr>" +
                                                "<th class='text-center'>Documentos</th>" +
                                                "<th class='text-center'> </th>" +
                                            "</tr>" +
                                        "</thead>" +
                                        "<tbody>";
                    if (data.length > 0) {
                        for (var b = 0; b < data.length; b++) {
                            Tabla +=    "<tr style='padding: 0px, 0px;'>" +
                                            "<td width='20px;' style='padding: 0px, 0px;'>" + data[b].Nombre + "</td>" +
                                            "<td>" +
                                                "<button class='btn waves-effect waves-light btn-primary' onclick='AgregarDocumentoLista(" + data[b].Id + ")' data-toggle='tooltip' data-placement='top' title='' data-original-title='Agregar'><i class='icofont icofont-ui-add'></i></button>" +
                                            "</td>" +
                                        "</tr>";
                        }
                    }

                    Tabla +=            "</tbody>" +
                                    "</table>" +
                        "</div>";

                    $("#DivTableContenidoDocumentos").html(Tabla);


                    $('#TableListCatDocumentos').DataTable({
                        scrollY: '250px',
                        scrollCollapse: true,
                        paging: true,
                        "searching": true,
                        "language": {
                            "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
                        },
                        info: true,
                        aoColumns: [
                            { "sWidth": "15%" },
                            { "sWidth": "15%" },
                        ],
                    });

                },
                error: errores
            });

            /*$("#BtnCerrarDocumento").trigger("click");*/
            $('#Nombre_Documento').val('');
        }
    }

    $('#TableListCatDocumentos').DataTable({
        scrollY: '250px',
        scrollCollapse: true,
        paging: true,
        "searching": true,
        "language": {
            "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
        },
        info: true,
        aoColumns: [
            { "sWidth": "15%" },
            { "sWidth": "15%" },
        ],
    });

    $('#BtnCerrarNuevoDocumento').click(function () {
        $("#DivTableContenidoDocumentos").show();
        $("#DivBtnNuevoDocumento").show();
        $("#DivNuevoDocumento").css("display", "none");

    });

    $('#BtnAbrirNuevoDocumento').click(function () {
        $("#DivBtnNuevoDocumento").css("display", "none");
        $("#DivTableContenidoDocumentos").css("display", "none");

        $("#DivNuevoDocumento").show();
    });

</script>





<script>

    function GuardarPrueba() {
        if (ValidaPsicometrico()) {
            if (@ViewBag.Prueba.Id > 0) {
                if ($("#ApplicoPrueba").is(':checked')) {
                    EliminarRegistroPrueba();
                } else {
                    ActualizarPrueba();
                }
            } else {
                if ($("#ApplicoPrueba").is(':checked')) {
                    EliminarRegistroNuevaPrueba();
                } else {
                    NuevaPrueba();
                }
            }
        } else {
            $.notify({
                icon: 'fa fa-paw',
                message: "Completa el formulario.",
            }, {
                type: 'warning',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    }

    function NuevaPrueba() {
        swal({
            title: "Registrar Prueba.!",
            imageUrl: "../Images/icons/5673974.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
		        swal.close();

                var PersonasFolio = new Object();
                PersonasFolio.FolioCompuesto = "@ViewBag.Personas.PersonasFolio.FolioCompuesto";

                var Personas = new Object();
                Personas.Id = @ViewBag.Personas.Id;
                Personas.PersonasFolio = PersonasFolio


                var PersonasPsicometrico = new Object();
                PersonasPsicometrico.Id = @ViewBag.Prueba.Id;
                PersonasPsicometrico.Personas = Personas;
                PersonasPsicometrico.Califico = $('#Prueba_Califico_Empleado').val();
                PersonasPsicometrico.FechaAplicacion = $('#Prueba_FechaAplicacion_Empleado').val();
                PersonasPsicometrico.Observaciones = $('#Prueba_Observaciones_Empleado').val();

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Psicometricos_EditarEmpleado_Agregar", "Psicometricos")",
                    async: false,
                    data: JSON.stringify(PersonasPsicometrico),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: resultadoInformacionBasica,
                    error: errores
                });
            }
        });

    }

    function EliminarRegistroPrueba() {

        swal({
            title: "Eliminar Prueba.!",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
		        swal.close();

                var Personas = new Object();
                Personas.Id = @ViewBag.Personas.Id;

                var PersonasPsicometrico = new Object();
                PersonasPsicometrico.Id = @ViewBag.Prueba.Id;
                PersonasPsicometrico.Personas = Personas;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Psicometricos_EditarEmpleado_Eliminar_Prueba", "Psicometricos")",
                    async: false,
                    data: JSON.stringify(PersonasPsicometrico),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.Id == 1) {
                            swal({
                                title: "¡Prueba eliminada!",
                                /*  text: '',*/
                                icon: "success",
                                button: "Aceptar",
                            });

                            $('#DivTablePrueba').html('');
                            var valor = 0;

                            $("#Prueba_Califico_Empleado").val("");
                            $("#Prueba_FechaAplicacion_Empleado").val("");
                            $("#Prueba_Observaciones_Empleado").val("");

                        } else {
                            swal({
                                title: "Algo ocurrió !",
                                text: 'Prueba no fue eliminada.',
                                icon: "warning",
                                button: "Aceptar",
                            });
                        }
                    },
                    error: errores
                });
            }
        });
    }

    function EliminarRegistroNuevaPrueba() {
        swal({
            title: "Eliminar Prueba.!",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
                swal.close();

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Psicometricos_EditarEmpleado_Eliminar_NuevaPrueba", "Psicometricos")",
                    async: false,
                    /*data: JSON.stringify(jsonObject),*/
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.Id == 1) {
                            swal({
                                title: "¡Prueba eliminada!",
                                /*  text: '',*/
                                icon: "success",
                                button: "Aceptar",
                            });

                            $('#DivTablePrueba').html('');
                            var valor = 0;
                            $("#Prueba_Califico_Empleado").val("");
                            $("#Prueba_FechaAplicacion_Empleado").val("");
                            $("#Prueba_Observaciones_Empleado").val("");

                        } else if (result.Id == -1)
                        {
                            swal({
                                title: "Modificación de registros!",
                                text: 'Empleado actualizado.',
                                icon: "success",
                                buttons: {
                                    agregar: {
                                        text: "Continuar", className: 'sweet-continuar'
                                    },
                                },
                            }).then((value) => {
                                switch (value) {
                                    case "agregar":
                                        break;
                                }
                            });
                        }
                        else {
                            swal({
                                title: "Algo ocurrió !",
                                text: 'Prueba no fue eliminada.',
                                icon: "warning",
                                button: "Aceptar",
                            });
                        }
                    },
                    error: errores
                });
            }
        });
    }

    function ActualizarPrueba() {
        swal({
            title: "Actualizar Prueba.!",
            imageUrl: "../Images/icons/4944051.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
                swal.close();

                var Personas = new Object();
                Personas.Id = @ViewBag.Personas.Id;

                var PersonasPsicometrico = new Object();
                PersonasPsicometrico.Id = @ViewBag.Prueba.Id;
                PersonasPsicometrico.Personas = Personas;
                PersonasPsicometrico.Califico = $('#Prueba_Califico_Empleado').val();
                PersonasPsicometrico.FechaAplicacion = $('#Prueba_FechaAplicacion_Empleado').val();
                PersonasPsicometrico.Observaciones = $('#Prueba_Observaciones_Empleado').val();

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Psicometricos_EditarEmpleado_Actualizar_Prueba", "Psicometricos")",
                    async: false,
                    data: JSON.stringify(PersonasPsicometrico),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.Id == 1) {
                            swal({
                                title: "¡Prueba actualizada!",
                                text: "",
                                imageUrl: "../Images/icons/5673974.png",
                                buttons: true,
                                dangerMode: true,
                            }, function (isConfirm) {
                                if (isConfirm) {
                                    swal.close();
                                }
                            });
                        } else {
                            swal({
                                title: "Algo ocurrió !",
                                text: "Prueba no actualizada.",
                                imageUrl: "../Images/icons/4944051.png",
                                buttons: true,
                                dangerMode: true,
                            }, function (isConfirm) {
                                if (isConfirm) {
                                    swal.close();
                                }
                            });
                        }
                    },
                    error: errores
                });
            }
        });
    }

    function ValidaPsicometrico() {
        var result = false;
        if ($("#ApplicoPrueba").is(':checked')) {
            result = true;
        } else {
            $('#Prueba_Califico_Empleado').css("border", "1px solid #f44336");
            $('#Prueba_FechaAplicacion_Empleado').css("border", "1px solid #f44336");

            if ($('#Prueba_Califico_Empleado').val().length > 0) {
                $('#Prueba_Califico_Empleado').css("border", "1px solid #cccccc");
            }
            if ($('#Prueba_FechaAplicacion_Empleado').val().length > 0) {
                $('#Prueba_FechaAplicacion_Empleado').css("border", "1px solid #cccccc");
            }

            if ($('#Prueba_Califico_Empleado').val().length > 0) {
                if ($('#Prueba_FechaAplicacion_Empleado').val().length > 0) {
                    result = true;
                }
            }
        }
        return result;
    }

    $(document).ready(function () {
        if (@ViewBag.Prueba.Id > 0)
        {
            $('#ApplicoPrueba').prop('checked', false);
            $("#DivApplicoPrueba").show();
        }
    });

    function BtnCargarPrueba() {
        $("#fileInput3").click();
    }

    $('#fileInput3').change(function () {
        var fileInput = document.getElementById('fileInput3');


        if (fileInput.files.length > 0) {
            for (i = 0; i < fileInput.files.length; i++) {
                var ext = fileInput.files[i].name.split('.').pop();
                Extencion = fileInput.files[i].name.split('.').pop();

                // Convertimos en minúscula porque
                // la extensión del archivo puede estar en mayúscula
                ext = ext.toLowerCase();

                if (ext == 'pdf') {

                    Carga = true;
                } else {
                    Carga = false;
                    Formato = ext;
                    break;
                }
            }

            for (i = 0; i < fileInput.files.length; i++) {
                var filesize = ((fileInput.files[i].size / 1024) / 1024).toFixed(4);

                if (filesize < 10) {
                    CargaTam = true;
                } else {
                    CargaTam = false;
                    Tam = filesize;
                    break;
                }
            }

            if (Carga) {
                if (CargaTam) {


                    $("#BtnSubirPrueba").prop('disabled', true);
                    var formData = new FormData();

                    for (i = 0; i < fileInput.files.length; i++) {
                        formData.append(fileInput.files[i].name, fileInput.files[i]);
                    }

                    $("#CargandoProcesos").modal("show");

                    $.ajax({
                        url: '/api/FileAPI/UploadFilesExamen',
                        type: 'POST',
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (ListPrueba) {
                            /*$("#fileProgress3").hide();*/
                            $("#BtnSubirPrueba").prop('disabled', false);

                            CargaPrueba(ListPrueba);
                        },
                        xhr: function () {

                            var fileXhr = $.ajaxSettings.xhr();
                            if (fileXhr.upload) {
                                $("progress").show();
                                fileXhr.upload.addEventListener("progress", function (e) {
                                    if (e.lengthComputable) {
                                        $("#fileProgress4").attr({
                                            value: e.loaded,
                                            max: e.total
                                        });
                                    }
                                }, false);
                            }
                            return fileXhr;
                        },
                        error: function () {

                            $("#BtnSubirPrueba").prop('disabled', false);
                            /*$("#fileProgress3").hide();*/
                            $.notify({
                                message: "Problemas para leer el archivo",
                            }, {
                                type: 'warning',
                                allow_dismiss: false,
                                animate: {
                                    enter: 'animated rollIn',
                                    exit: 'animated rollOut'
                                }
                            });
                            CerrarModal();
                        }
                    }).done(function (results) {
                        setTimeout(CerrarModal, 1000);
                    });


                } else {
                    $.notify({
                        message: "Intentas cargar una imagen muy pesada: " + Tam + " MG" + " Límite permitido 10 MG",
                    }, {
                        type: 'warning',
                        allow_dismiss: false,
                        animate: {
                            enter: 'animated rollIn',
                            exit: 'animated rollOut'
                        }
                    });
                }
            } else {
                $.notify({
                    message: "Intentas cargar un formato no permitido: " + Formato + " Formato de archivo permitido: .pdf ",
                }, {
                    type: 'warning',
                    allow_dismiss: false,
                    animate: {
                        enter: 'animated rollIn',
                        exit: 'animated rollOut'
                    }
                });
            }

        } else {
            $("#BtnSubirPrueba").prop('disabled', false);
            $.notify({
                message: "Selecciona un archivo."
            }, {
                type: 'danger',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    });

    function CargaPrueba(respuesta) {

        var PersonasPsicometrico = new Object();
        PersonasPsicometrico.NmArchivo = respuesta.NmArchivo;
        PersonasPsicometrico.NmOriginal = respuesta.NmOriginal;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Psicometricos_NuevoEmpleado_Agregarn", "Psicometricos")",
            async: false,
            data: JSON.stringify(PersonasPsicometrico),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {
                PintaPrueba(respuesta)
	        },
            error: Error
        });
    }

    function PintaPrueba(respuesta) {
        var Table =
            "<div class='card-block table-border-style'>" +
            "<div class='table-responsive'>" +
            "<table class='table text-center table-hover' width='100%' id=''>" +
            "<thead class='thead-dark text-center'>" +
            "<tr>" +
            "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Archivo</p></th>" +
            "<th class='text-center'> </th>" +
            "</tr>" +
            "</thead>" +
            "<tbody>";

        if (respuesta.NmArchivo.length > 0) {
            Table += "<tr>" +
                "<td >" + respuesta.NmOriginal + "</td>" +
                "<td >" +
                "<button class='btn waves-effect btn-view waves-light col-md-4'  onclick='MostrarPrueba()' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>" +
                "<button class='btn waves-effect waves-light btn-danger col-md-4' onclick='EliminarPrueba()' data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>" +
                "</td>" +
                "</tr>";
        }

        Table += "</tbody>"
        "</table>"
        "</div>"
        "</div>";

        $('#DivTablePrueba').html(Table);
        $('[data-toggle="tooltip"]').tooltip();
    }

    function EliminarPrueba() {

        swal({
            title: "¿Eliminar Archivo?",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
		        swal.close();

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Psicometricos_NuevoEmpleado_Eliminar", "Psicometricos")",
                    async: false,
                    data: '',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (respuesta) {
                        $('#DivTablePrueba').html('');
	                },
                    error: Error
                });

            }
        });

    }

    function MostrarPrueba()
    {
        $.ajax({
            type: "POST",
            url: "@Url.Action("Psicometricos_NuevoEmpleado_Mostrar", "Psicometricos")",
            async: false,
            data: '',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {

                $("#ModalPDF").modal("show");
                var mail = "https://" + respuesta;
                $('#iframepdf').attr('src', mail);
            },
            error: errores
        });
    }

    $(document).on('click', '#ApplicoPrueba', function () {
        let val = $(this).val();
        //Revisa en que status está el checkbox y controlalo según lo //desees
        if ($(this).is(':checked')) {
            $("#DivApplicoPrueba").css("display", "none");

            $("#Prueba_Califico_Empleado").prop('disabled', true);
            $("#Prueba_FechaAplicacion_Empleado").prop('disabled', true);
            $("#Prueba_Observaciones_Empleado").prop('disabled', true);
            $("#BtnSubirPrueba").prop('disabled', true);

            $('#Prueba_Califico_Empleado').css("border", "1px solid #cccccc");
            $('#Prueba_FechaAplicacion_Empleado').css("border", "1px solid #cccccc");
        }
        else {
            $("#DivApplicoPrueba").show();
            $("#Prueba_Califico_Empleado").prop('disabled', false);
            $("#Prueba_FechaAplicacion_Empleado").prop('disabled', false);
            $("#Prueba_Observaciones_Empleado").prop('disabled', false);
            $("#BtnSubirPrueba").prop('disabled', false);
        }
    });

</script>


<script>
    function GuardarExamen() {
        if (ValidaExamen()) {
            if (@ViewBag.Examen.Id > 0) {
                if ($("#ApplicoExamen").is(':checked')) {
                    EliminarRegistroExamen();
                } else {
                    ActualizarExamen();
                }
            } else {
                if ($("#ApplicoExamen").is(':checked')) {
                    EliminarRegistroNuevoExamen();
                } else {

                    NuevoExamen();
                }
            }
        } else {
            $.notify({
                icon: 'fa fa-paw',
                message: "Completa el formulario.",
            }, {
                type: 'warning',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    }

    function NuevoExamen() {
        swal({
            title: "Registrar Examen.!",
            imageUrl: "../Images/icons/4944051.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
		        swal.close();

                var PersonasFolio = new Object();
                PersonasFolio.FolioCompuesto = "@ViewBag.Personas.PersonasFolio.FolioCompuesto";

                var Personas = new Object();
                Personas.Id = @ViewBag.Personas.Id;
                Personas.PersonasFolio = PersonasFolio

                var Cat_TipoExamen = new Object();
                Cat_TipoExamen.Id = $("#Select_TipoExamen_Empleado option:selected").val();

                var PersonasExamen = new Object();
                PersonasExamen.Personas = Personas;
                PersonasExamen.Cat_TipoExamen = Cat_TipoExamen;
                PersonasExamen.Calificacion = $('#Examen_Calificacion_Empleado').val();
                PersonasExamen.Califico = $('#Examen_Califico_Empleado').val();
                PersonasExamen.FechaAplicacion = $('#Examen_FechaAplicacion_Empleado').val();
                PersonasExamen.Observaciones = $('#Examen_Observaciones_Empleado').val();

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Examenes_EditarEmpleado_Agregar", "Examenes")",
                    async: false,
                    data: JSON.stringify(PersonasExamen),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: resultadoInformacionBasica,
                    error: errores
                });
            }
        });
    }

    function EliminarRegistroExamen() {
        swal({
            title: "Eliminar Examen.!",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
                swal.close();

                var Personas = new Object();
                Personas.Id = @ViewBag.Personas.Id;

                var PersonasExamen = new Object();
                PersonasExamen.Personas = Personas;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Examenes_EditarEmpleado_Eliminar_Examen", "Examenes")",
                    async: false,
                    data: JSON.stringify(PersonasExamen),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.Id == 1) {
                            swal({
                                title: "¡Examen eliminado!",
                                /*  text: '',*/
                                icon: "success",
                                button: "Aceptar",
                            });

                            $('#DivTableExamen').html('');
                            var valor = 0;
                            $("#Select_TipoExamen_Empleado option[value='" + valor + "']").attr("selected", true);
                            $("#Examen_Calificacion_Empleado").val("");
                            $("#Examen_Califico_Empleado").val("");
                            $("#Examen_FechaAplicacion_Empleado").val("");
                            $("#Examen_Observaciones_Empleado").val("");

                        } else {
                            swal({
                                title: "Algo ocurrió !",
                                text: 'El examen no fue eliminado.',
                                icon: "warning",
                                button: "Aceptar",
                            });
                        }
                    },
                    error: errores
                });
            }
        });
    }

    function EliminarRegistroNuevoExamen() {
        swal({
            title: "Eliminar Examen.!",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
		        swal.close();

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Examenes_EditarEmpleado_Eliminar_NuevoExamen", "Examenes")",
                    async: false,
                    /*data: JSON.stringify(jsonObject),*/
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.Id == 1) {

                            swal({
                                title: "¡Examen eliminado!",
                                text: "",
                                imageUrl: "../Images/icons/5673974.png",
                                buttons: true,
                                dangerMode: true,
                            }, function (isConfirm) {
                                if (isConfirm) {
                                    swal.close();
                                }
                            });

                            $('#DivTableExamen').html('');
                            var valor = 0;
                            $("#Select_TipoExamen_Empleado option[value='" + valor + "']").attr("selected", true);
                            $("#Examen_Calificacion_Empleado").val("");
                            $("#Examen_Califico_Empleado").val("");
                            $("#Examen_FechaAplicacion_Empleado").val("");
                            $("#Examen_Observaciones_Empleado").val("");

                        } else if (result.Id == -1)
                        {
                            swal({
                                title: "Modificación de registros!",
                                text: "Empleado actualizado.",
                                imageUrl: "../Images/icons/5673974.png",
                                buttons: true,
                                dangerMode: true,
                            }, function (isConfirm) {
                                if (isConfirm) {
                                    swal.close();
                                }
                            });
                        }
                        else {
                            swal({
                                title: "Algo ocurrió !",
                                text: "El examen no fue eliminado.",
                                imageUrl: "../Images/icons/4944051.png",
                                buttons: true,
                                dangerMode: true,
                            }, function (isConfirm) {
                                if (isConfirm) {
                                    swal.close();
                                }
                            });
                        }
                    },
                    error: errores
                });
            }
        });
    }

    function ActualizarExamen() {
        swal({
            title: "Actualizar Examen.!",
            imageUrl: "../Images/icons/4944051.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
		        swal.close();

                var Personas = new Object();
                Personas.Id = @ViewBag.Personas.Id;

                var Cat_TipoExamen = new Object();
                Cat_TipoExamen.Id = $("#Select_TipoExamen_Empleado option:selected").val();

                var PersonasExamen = new Object();
                PersonasExamen.Id = @ViewBag.Examen.Id;
                PersonasExamen.Personas = Personas;
                PersonasExamen.Cat_TipoExamen = Cat_TipoExamen;
                PersonasExamen.Calificacion = $('#Examen_Calificacion_Empleado').val();
                PersonasExamen.Califico = $('#Examen_Califico_Empleado').val();
                PersonasExamen.FechaAplicacion = $('#Examen_FechaAplicacion_Empleado').val();
                PersonasExamen.Observaciones = $('#Examen_Observaciones_Empleado').val();

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Examenes_EditarEmpleado_Actualizar_Examen", "Examenes")",
                    async: false,
                    data: JSON.stringify(PersonasExamen),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.Id == 1) {
                            swal({
                                title: "¡Examen actualizado!",
                                text: "",
                                imageUrl: "../Images/icons/5673974.png",
                                buttons: true,
                                dangerMode: true,
                            }, function (isConfirm) {
                                if (isConfirm) {
                                    swal.close();
                                }
                            });

                        } else {
                            swal({
                                title: "Algo ocurrió !",
                                text: "Examen no actualizado.",
                                imageUrl: "../Images/icons/4944051.png",
                                buttons: true,
                                dangerMode: true,
                            }, function (isConfirm) {
                                if (isConfirm) {
                                    swal.close();
                                }
                            });
                        }
                    },
                    error: errores
                });

            }
        });
    }


    function ValidaExamen() {
        var result = false;

        if ($("#ApplicoExamen").is(':checked')) {
            result = true;
        }
        else {
            $('#Select_TipoExamen_Empleado').css("border", "1px solid #f44336");
            $('#Examen_Calificacion_Empleado').css("border", "1px solid #f44336");
            $('#Examen_Califico_Empleado').css("border", "1px solid #f44336");
            $('#Examen_FechaAplicacion_Empleado').css("border", "1px solid #f44336");

            if ($("#Select_TipoExamen_Empleado option:selected").val() > 0) {
                $('#Select_TipoExamen_Empleado').css("border", "1px solid #cccccc");
            }
            if ($('#Examen_Calificacion_Empleado').val().length > 0) {
                $('#Examen_Calificacion_Empleado').css("border", "1px solid #cccccc");
            }
            if ($('#Examen_Califico_Empleado').val().length > 0) {
                $('#Examen_Califico_Empleado').css("border", "1px solid #cccccc");
            }
            if ($('#Examen_FechaAplicacion_Empleado').val().length > 0) {
                $('#Examen_FechaAplicacion_Empleado').css("border", "1px solid #cccccc");
            }

            if ($("#Select_TipoExamen_Empleado option:selected").val() > 0) {
                if ($('#Examen_Calificacion_Empleado').val().length > 0) {
                    if ($('#Examen_Califico_Empleado').val().length > 0) {
                        if ($('#Examen_FechaAplicacion_Empleado').val().length > 0) {
                            result = true;
                        }
                    }
                }
            }
        }

        return result;
    }

    $(document).ready(function () {
        if (@ViewBag.Examen.Id > 0)
        {
            $('#ApplicoExamen').prop('checked', false);
            $("#DivApplicoExamen").show();

            var valor = @ViewBag.Examen.Cat_TipoExamen.Id;
            $("#Select_TipoExamen_Empleado option[value='" + valor + "']").attr("selected", true);
        }
    });

    function BtnCargarExamen() {
        $("#fileInput2").click();
    }

    $('#fileInput2').change(function () {
        var fileInput = document.getElementById('fileInput2');


        if (fileInput.files.length > 0) {
            for (i = 0; i < fileInput.files.length; i++) {
                var ext = fileInput.files[i].name.split('.').pop();
                Extencion = fileInput.files[i].name.split('.').pop();

                // Convertimos en minúscula porque
                // la extensión del archivo puede estar en mayúscula
                ext = ext.toLowerCase();

                if (ext == 'pdf') {

                    Carga = true;
                } else {
                    Carga = false;
                    Formato = ext;
                    break;
                }
            }

            for (i = 0; i < fileInput.files.length; i++) {
                var filesize = ((fileInput.files[i].size / 1024) / 1024).toFixed(4);

                if (filesize < 10) {
                    CargaTam = true;
                } else {
                    CargaTam = false;
                    Tam = filesize;
                    break;
                }
            }

            if (Carga) {
                if (CargaTam) {

                    $("#BtnSubirExamen").prop('disabled', true);
                    var formData = new FormData();

                    for (i = 0; i < fileInput.files.length; i++) {
                        formData.append(fileInput.files[i].name, fileInput.files[i]);
                    }

                    $("#CargandoProcesos").modal("show");

                    $.ajax({
                        url: '/api/FileAPI/UploadFilesExamen',
                        type: 'POST',
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (ListExamen) {
                            /*$("#fileProgress").hide();*/
                            $("#BtnSubirExamen").prop('disabled', false);

                            CargaExamen(ListExamen);
                        },
                        xhr: function () {

                            var fileXhr = $.ajaxSettings.xhr();
                            if (fileXhr.upload) {
                                $("progress").show();
                                fileXhr.upload.addEventListener("progress", function (e) {
                                    if (e.lengthComputable) {
                                        $("#fileProgress4").attr({
                                            value: e.loaded,
                                            max: e.total
                                        });
                                    }
                                }, false);
                            }
                            return fileXhr;
                        },
                        error: function () {

                            $("#BtnSubirExamen").prop('disabled', false);
                            /*$("#fileProgress").hide();*/
                            $.notify({
                                message: "Problemas para leer el archivo",
                            }, {
                                type: 'warning',
                                allow_dismiss: false,
                                animate: {
                                    enter: 'animated rollIn',
                                    exit: 'animated rollOut'
                                }
                            });
                            CerrarModal();
                        }
                    }).done(function (results) {
                        setTimeout(CerrarModal, 1000);
                    });


                } else {
                    $.notify({
                        message: "Intentas cargar una imagen muy pesada: " + Tam + " MG" + " Límite permitido 10 MG",
                    }, {
                        type: 'warning',
                        allow_dismiss: false,
                        animate: {
                            enter: 'animated rollIn',
                            exit: 'animated rollOut'
                        }
                    });
                }
            } else {
                $.notify({
                    message: "Intentas cargar un formato no permitido: " + Formato + " Formato de archivo permitido: .pdf ",
                }, {
                    type: 'warning',
                    allow_dismiss: false,
                    animate: {
                        enter: 'animated rollIn',
                        exit: 'animated rollOut'
                    }
                });
            }

        } else {
            $("#BtnSubirExamen").prop('disabled', false);
            $.notify({
                message: "Selecciona un archivo."
            }, {
                type: 'danger',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    });

    function CargaExamen(respuesta) {

        var PersonasExamen = new Object();
        PersonasExamen.NmArchivo = respuesta.NmArchivo;
        PersonasExamen.NmOriginal = respuesta.NmOriginal;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Examenes_NuevoEmpleado_Agregarn", "Examenes")",
            async: false,
            data: JSON.stringify(PersonasExamen),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {
                PintaExamen(respuesta);
	        },
            error: Error
        });
    }

    function PintaExamen(respuesta) {
        var Table =
            "<div class='card-block table-border-style'>" +
            "<div class='table-responsive'>" +
            "<table class='table text-center table-hover' width='100%' id='TableListaExamen'>" +
            "<thead class='thead-dark  text-center'>" +
                "<tr>" +
                    "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Archivo<p></th>" +
                    "<th class='text-center'> </th>" +
                "</tr>" +
            "</thead>" +
            "<tbody>";

        if (respuesta.NmArchivo.length > 0) {
        Table += "<tr>" +
                    "<td >" + respuesta.NmOriginal + "</td>" +
                    "<td >" +
                        "<button class='btn waves-effect btn-view waves-light col-md-4'  onclick='MostrarExamen()' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>" +
                        "<button class='btn waves-effect waves-light btn-danger col-md-4' onclick='EliminarExamen()' data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>" +
                    "</td>" +
                "</tr>";
        }

        Table += "</tbody>"
        "</table>"
        "</div>"
        "</div>";

        $('#DivTableExamen').html(Table);
        $('[data-toggle="tooltip"]').tooltip();
    }

    function EliminarExamen() {
        swal({
            title: "¿Eliminar Archivo?",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
                swal.close();

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Examenes_NuevoEmpleado_Eliminar", "Examenes")",
                    async: false,
                    data: '',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (respuesta) {
                        $('#DivTableExamen').html('');
	                },
                    error: Error
                });
            }
        });
    }

    function MostrarExamen()
    {
        $.ajax({
            type: "POST",
            url: "@Url.Action("Examenes_NuevoEmpleado_Mostrar", "Examenes")",
            async: false,
            data: '',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {
                console.log(respuesta);

                $("#ModalPDF").modal("show");
                var mail = "https://" + respuesta;
                $('#iframepdf').attr('src', mail);
            },
            error: errores
        });
    }

    $(document).on('click', '#ApplicoExamen', function () {
        let val = $(this).val();
        //Revisa en que status está el checkbox y controlalo según lo //desees
        if ($(this).is(':checked')) {
            $("#DivApplicoExamen").css("display", "none");

            $("#Select_TipoExamen_Empleado").prop('disabled', true);
            $("#Examen_Calificacion_Empleado").prop('disabled', true);
            $("#Examen_Califico_Empleado").prop('disabled', true);
            $("#Examen_FechaAplicacion_Empleado").prop('disabled', true);
            $("#Examen_Observaciones_Empleado").prop('disabled', true);
            $("#BtnSubirExamen").prop('disabled', true);

            $('#Select_TipoExamen_Empleado').css("border", "1px solid #cccccc");
            $('#Examen_Calificacion_Empleado').css("border", "1px solid #cccccc");
            $('#Examen_Califico_Empleado').css("border", "1px solid #cccccc");
            $('#Examen_FechaAplicacion_Empleado').css("border", "1px solid #cccccc");
        }
        else {
            $("#DivApplicoExamen").show();
            $("#Select_TipoExamen_Empleado").prop('disabled', false);
            $("#Examen_Calificacion_Empleado").prop('disabled', false);
            $("#Examen_Califico_Empleado").prop('disabled', false);
            $("#Examen_FechaAplicacion_Empleado").prop('disabled', false);
            $("#Examen_Observaciones_Empleado").prop('disabled', false);
            $("#BtnSubirExamen").prop('disabled', false);
        }
    });

</script>

<script>
    $('#BTnNuevoExamen').click(function () {

        var TipoExamen = $('#Nombre_TipoExamen').val();
        $('#Nombre_TipoExamen').css("border", "1px solid #f44336");

        if ($('#Nombre_TipoExamen').val().length > 0) {
            $('#Nombre_TipoExamen').css("border", "1px solid #cccccc");
        }

        var resul = false;

        if (TipoExamen.length > 0) {
            resul = true;
        }

        if (resul) {

            var obj = {};
            obj['Nombre'] = TipoExamen;

            var jsonObject = {
                "Cat_TipoExamen": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_TipoExamen_Agregar", "TipoExamen")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoTipoExamen,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }
    });

    function resultadoTipoExamen(data) {
         switch (data.Id) {
             case -1:
                 swal({
                     title: "Algo ocurrió !",
                     text: "El examen que intentas agregar ya se encuentra registrado.",
                     imageUrl: "../Images/icons/4944051.png",
                     buttons: true,
                     dangerMode: true,
                 }, function (isConfirm) {
                     if (isConfirm) {
                         swal.close();
                     }
                 });
                 $('#Nombre_TipoExamen').css("border", "1px solid #f44336");
                break;
             case 0:
                 swal({
                     title: "Algo ocurrió !",
                     text: "",
                     imageUrl: "../Images/icons/4944051.png",
                     buttons: true,
                     dangerMode: true,
                 }, function (isConfirm) {
                     if (isConfirm) {
                         swal.close();
                     }
                 });
                break;

            default:
            // code block
        }

        if (data.Id > 0)
        {
            swal({
                title: "¡Nuevo examen agregado!",
                text: "",
                imageUrl: "../Images/icons/5673974.png",
                buttons: true,
                dangerMode: true,
            }, function (isConfirm) {
                if (isConfirm) {
                    swal.close();
                }
            });


            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_TipoExamen_Listar", "TipoExamen")",
                data: '',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_TipoExamen_Empleado").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    if (result.length > 0) {
                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Nombre.toUpperCase());
                            option.val(this.Id);

                            $("#Select_TipoExamen_Empleado").append(option);
                        });

                        $('#Select_TipoExamen_Empleado option[value="' + data.Id + '"]').attr("selected", true);
                    }
                },
                error: errores
            });

            $("#BtnCerrarExamen").trigger("click");
            $('#Nombre_TipoExamen').val('');
        }
    }
</script>



<script>
    $('#BTnNuevoEntrevista').click(function () {

        $('#Entrevisto_Entrevista').css("border", "1px solid #f44336");
        $('#FechaEntrevista_Entrevista').css("border", "1px solid #f44336");

        if ($('#Entrevisto_Entrevista').val().length > 0) {
            $('#Entrevisto_Entrevista').css("border", "1px solid #c2c2c2");
        }
        if ($('#FechaEntrevista_Entrevista').val().length > 0) {
            $('#FechaEntrevista_Entrevista').css("border", "1px solid #c2c2c2");
        }

        var resul = false;

        if ($('#Entrevisto_Entrevista').val().length > 0) {
            if ($('#FechaEntrevista_Entrevista').val().length > 0) {
                resul = true;
            }
        }

        if (resul) {

            var Personas = new Object();
            Personas.Id = @ViewBag.Personas.Id;

            var PersonasEntrevistas = new Object();
            PersonasEntrevistas.Entrevisto = $('#Entrevisto_Entrevista').val();
            PersonasEntrevistas.FechaEntrevista = $('#FechaEntrevista_Entrevista').val();
            PersonasEntrevistas.Observaciones = $('#Observaciones_Entrevista').val();
            PersonasEntrevistas.Personas = Personas;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Entrevistas_EditarEmpleado_Agregar", "Entrevistas")",
                async: false,
                data: JSON.stringify(PersonasEntrevistas),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: PintaEntrevistas,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }
    });

    function PintaEntrevistas(respuesta) {

        $('#Entrevisto_Entrevista').css("border", "1px solid #cccccc");
        $('#FechaEntrevista_Entrevista').css("border", "1px solid #cccccc");

        $('#Entrevisto_Entrevista').val('');
        $('#FechaEntrevista_Entrevista').val('');
        $('#Observaciones_Entrevista').val('');

        var Table =
            "<table class='table text-center table-hover table-striped' width='100%' id='TableListaEntrevitas2'>" +
            "<thead class='thead-dark text-center'>" +
            "<tr>" +
            "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Entrevisto</p></th>" +
            "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Fecha Entrevista</p></th>" +
            "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Observaciones </p></th>" +
            "<th class='text-center'> </th>" +
            "</tr>" +
            "</thead>" +
            "<tbody>";

        if (respuesta.length > 0) {
            for (var b = 0; b < respuesta.length; b++) {
                Table += "<tr>" +
                            "<td style='padding: 0px 10px;'>" + respuesta[b].Entrevisto + "</td>" +
                            "<td style='padding: 0px 10px;'>" + moment(respuesta[b].FechaEntrevista).format('YYYY-MM-DD') + "</td>" +
                            "<td style='padding: 0px 10px;'>";

                            if (respuesta[b].Observaciones != null) {
                                Table += respuesta[b].Observaciones;
                            }

                Table +=    "</td>" +
                            "<td style='padding: 0px 10px;'>" +
                            "<button class='btn waves-effect waves-light btn-danger col-md-6' onclick='EliminarEntrevista(" + respuesta[b].Id + ")'><i class='fa fa-trash'></i></button>" +
                            "</td>" +
                    "</tr>";
            }
        }

        Table += "</tbody>"
        "</table>";
        $('#TablaEntrevitas').html(Table);
        $('[data-toggle="tooltip"]').tooltip();
    }

    function EliminarEntrevista(Id) {

        swal({
            title: "¿Eliminar Entrevita?",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
                swal.close();

                $('#TablaEntrevitas').html("");

                var Personas = new Object();
                Personas.Id = @ViewBag.Personas.Id;

                var PersonasEntrevistas = new Object();
                PersonasEntrevistas.Id = Id;
                PersonasEntrevistas.Personas = Personas;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Entrevistas_EditarEmpleado_Eliminar", "Entrevistas")",
                    async: false,
                    data: JSON.stringify(PersonasEntrevistas),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (respuesta) {
                        PintaEntrevistas(respuesta);
                    },
                    error: errores
                });
            }
        });
    }

</script>

<script>
    $(document).on('click', '#checkboxEntrevista', function () {
        if ($(this).is(':checked')) {
            $("#DivFormEntrevisa").show();
        }
        else {
            $("#DivFormEntrevisa").css("display", "none");
        }
    });
</script>




<script>
    function GuardarInformacionPuesto() {
        if (ValidaPuesto()) {

            var PersonasExperiencia = new Object();
            PersonasExperiencia.Id = @ViewBag.PersonasExperiencia.Id;
            PersonasExperiencia.Empresa = $('#UltimaEmpresa_Empleado').val();
            PersonasExperiencia.Puesto = $('#UltimoPuesto_Empleado').val();
            PersonasExperiencia.MotivoSalida = $('#MotivoSalida_Empleado').val();
            PersonasExperiencia.Actividades = $('#Actividades_Puesto_Empleado').val();

            var EmpresaPuestos = new Object();
            EmpresaPuestos.Id = $("#Select_Puesto_Empleado option:selected").val();

            var Cat_ProyectoServicios = new Object();
            Cat_ProyectoServicios.Id = $("#Select_Proyecto_Empleado option:selected").val();

            var ClienteDireciones = new Object();
            ClienteDireciones.Id = $("#Select_Centro_Trabajo_Empleado option:selected").val();

            var Cat_EsquemaContratacion = new Object();
            Cat_EsquemaContratacion.Id = $("#Select_EsquemaContratacion_Empleado option:selected").val();

            var PersonasDetalle = new Object();
            PersonasDetalle.EmpresaPuestos = EmpresaPuestos;
            PersonasDetalle.Cat_ProyectoServicios = Cat_ProyectoServicios;
            PersonasDetalle.ClienteDireciones = ClienteDireciones
            PersonasDetalle.Cat_EsquemaContratacion = Cat_EsquemaContratacion;
            PersonasDetalle.Sueldo = $('#Sueldo_Empleado').val();

            var Personas = new Object();
            Personas.Id = @ViewBag.Personas.Id;
            Personas.PersonasExperiencia = PersonasExperiencia;
            Personas.PersonasDetalle = PersonasDetalle;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Empleados_Actualizar_PuestoExperiencia", "Empleados")",
                async: false,
                data: JSON.stringify(Personas),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    switch (respuesta.Id) {
                        case -1:
                            swal({
                                title: "¡Modificación de registros!",
                                text: "Experiencia no actualizada.",
                                imageUrl: "../Images/icons/4944051.png",
                                buttons: true,
                                dangerMode: true,
                            }, function (isConfirm) {
                                if (isConfirm) {
                                    swal.close();
                                }
                            });

                            break;
                        case 1:
                            swal({
                                title: "¡Modificación de registros!",
                                text: "Empleado actualizado.",
                                imageUrl: "../Images/icons/5673974.png",
                                buttons: true,
                                dangerMode: true,
                            }, function (isConfirm) {
                                if (isConfirm) {
                                    swal.close();
                                }
                            });
                            break;
                        case 0:
                            swal({
                                title: "Modificación de registros!",
                                text: "Empleado no actualizado.",
                                imageUrl: "../Images/icons/4944051.png",
                                buttons: true,
                                dangerMode: true,
                            }, function (isConfirm) {
                                if (isConfirm) {
                                    swal.close();
                                }
                            });
                            break;
                        default:
                        // code block
                    }
                },
                error: errores
            });

        } else {
            $.notify({
                icon: 'fa fa-paw',
                message: "Completa el formulario.",
            }, {
                type: 'warning',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    }

    function ValidaPuesto() {
        var result = false;

        $('#Select_Empresa_Empleado').css("border", "1px solid #f44336");
        $('#Select_Departamento_Empleado').css("border", "1px solid #f44336");
        $('#Select_Puesto_Empleado').css("border", "1px solid #f44336");
        $('#Select_Cliente_Empleado').css("border", "1px solid #f44336");
        $('#Select_Proyecto_Empleado').css("border", "1px solid #f44336");
        $('#Select_Centro_Trabajo_Empleado').css("border", "1px solid #f44336");
        $('#Select_EsquemaContratacion_Empleado').css("border", "1px solid #f44336");
        $('#UltimaEmpresa_Empleado').css("border", "1px solid #f44336");
        $('#UltimoPuesto_Empleado').css("border", "1px solid #f44336");
        $('#MotivoSalida_Empleado').css("border", "1px solid #f44336");


        if ($("#Select_Empresa_Empleado option:selected").val() > 0) {
            $('#Select_Empresa_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Departamento_Empleado option:selected").val() > 0) {
            $('#Select_Departamento_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Puesto_Empleado option:selected").val() > 0) {
            $('#Select_Puesto_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Cliente_Empleado option:selected").val() > 0) {
            $('#Select_Cliente_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Proyecto_Empleado option:selected").val() > 0) {
            $('#Select_Proyecto_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Centro_Trabajo_Empleado option:selected").val() > 0) {
            $('#Select_Centro_Trabajo_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_EsquemaContratacion_Empleado option:selected").val() > 0) {
            $('#Select_EsquemaContratacion_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#UltimaEmpresa_Empleado').val().length > 0) {
            $('#UltimaEmpresa_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#UltimoPuesto_Empleado').val().length > 0) {
            $('#UltimoPuesto_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#MotivoSalida_Empleado').val().length > 0) {
            $('#MotivoSalida_Empleado').css("border", "1px solid #cccccc");
        }

        if ($("#Select_Empresa_Empleado option:selected").val() > 0) {
            if ($("#Select_Departamento_Empleado option:selected").val() > 0) {
                if ($("#Select_Puesto_Empleado option:selected").val() > 0) {
                    if ($("#Select_Cliente_Empleado option:selected").val() > 0) {
                        if ($("#Select_Proyecto_Empleado option:selected").val() > 0) {
                            if ($("#Select_Centro_Trabajo_Empleado option:selected").val() > 0) {
                                if ($("#Select_EsquemaContratacion_Empleado option:selected").val() > 0) {
                                    if ($('#UltimaEmpresa_Empleado').val().length > 0) {
                                        if ($('#UltimoPuesto_Empleado').val().length > 0) {
                                            if ($('#MotivoSalida_Empleado').val().length > 0) {
                                                result = true;
                                            } else {
                                                var posicion = $("#MotivoSalida_Empleado").offset().top;
                                                $("html, body").animate({
                                                    scrollTop: posicion - 100
                                                }, 1000);
                                            }
                                        } else {
                                            var posicion = $("#UltimoPuesto_Empleado").offset().top;
                                            $("html, body").animate({
                                                scrollTop: posicion - 100
                                            }, 1000);
                                        }
                                    } else {
                                        var posicion = $("#UltimaEmpresa_Empleado").offset().top;
                                        $("html, body").animate({
                                            scrollTop: posicion - 100
                                        }, 1000);
                                    }
                                } else {
                                    var posicion = $("#Select_EsquemaContratacion_Empleado").offset().top;
                                    $("html, body").animate({
                                        scrollTop: posicion - 100
                                    }, 1000);
                                }
                            } else {
                                var posicion = $("#Select_Centro_Trabajo_Empleado").offset().top;
                                $("html, body").animate({
                                    scrollTop: posicion - 100
                                }, 1000);
                            }
                        } else {
                            var posicion = $("#Select_Proyecto_Empleado").offset().top;
                            $("html, body").animate({
                                scrollTop: posicion - 100
                            }, 1000);
                        }
                    } else {
                        var posicion = $("#Select_Cliente_Empleado").offset().top;
                        $("html, body").animate({
                            scrollTop: posicion - 100
                        }, 1000);
                    }
                } else {
                    var posicion = $("#Select_Puesto_Empleado").offset().top;
                    $("html, body").animate({
                        scrollTop: posicion - 100
                    }, 1000);
                }
            } else {
                var posicion = $("#Select_Departamento_Empleado").offset().top;
                $("html, body").animate({
                    scrollTop: posicion - 100
                }, 1000);
            }
        } else {
            var posicion = $("#Select_Empresa_Empleado").offset().top;
            $("html, body").animate({
                scrollTop: posicion - 100
            }, 1000);
        }

        return result;
    }
</script>

<script>
    $(document).ready(function () {
        var CP = "@ViewBag.PersonasDirecciones.CP";

        if (CP.length > 0) {
            $('#CP_Empleado').val("@ViewBag.PersonasDirecciones.CP");
            $("#CP_Empleado").change();

            var valor = @ViewBag.PersonasDirecciones.IdColonia;
            $("#Select_Colonia_Empleado option[value='" + valor + "']").attr("selected", true);
        }
    });
</script>

<script>
    $('#BTnNuevoProyectoServicio').click(function () {
        var IdCliente = $("#Select_Cliente_Empleado option:selected").val();

        var NombreProyecto = $('#Nombre_Proyecto_Modal').val();
        $('#Nombre_Proyecto_Modal').css("border", "1px solid #f44336");

        if ($('#Nombre_Proyecto_Modal').val().length > 0) {
            $('#Nombre_Proyecto_Modal').css("border", "1px solid #cccccc");
        }

        if (NombreProyecto.length > 0) {

            var obj = {};
            obj['IdCliente'] = IdCliente;
            obj['Nombre'] = NombreProyecto;

            var jsonObject = {
                "Cat_ProyectoServicios": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("ProyectoServicios_Agregar", "ProyectoServicios")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoProyectoServicios,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }
    });

    function resultadoProyectoServicios(data) {
        switch (data.Id) {
            case -1:
                swal({
                    title: "Algo ocurrió !",
                    text: "El proyecto o servicio que intentas agregar ya se encuentra registrado.",
                    imageUrl: "../Images/icons/4944051.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });

                $('#Nombre_Proyecto_Modal').css("border", "1px solid #f44336");
                break;
            case 0:
                swal({
                    title: "Algo ocurrió !",
                    text: "",
                    imageUrl: "../Images/icons/4944051.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });
                break;

            default:
            // code block
        }

        if (data.Id > 0)
        {
            swal({
                title: "¡Nuevo proyecto o servicio agregado!",
                text: "",
                imageUrl: "../Images/icons/5673974.png",
                buttons: true,
                dangerMode: true,
            }, function (isConfirm) {
                if (isConfirm) {
                    swal.close();
                }
            });

            var IdCliente = $("#Select_Cliente_Empleado option:selected").val();

            var obj = {};
            obj['IdCliente'] = IdCliente;

            var jsonObject = {
                "Cat_ProyectoServicios": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("ProyectoServicios_Listar", "ProyectoServicios")",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Proyecto_Empleado").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    if (result.length > 0) {
                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Nombre.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Proyecto_Empleado").append(option);
                        });

                        $('#Select_Proyecto_Empleado option[value="' + data.Id + '"]').attr("selected", true);
                    }

                    /*CargaCentroTrabajo();*/
                },
                error: errores
            });

            $("#BtnCerrarProyectoServicio").trigger("click");
            $('#Nombre_Proyecto_Modal').val('');
        }
    }

    $('#BTnNuevoProyecto').click(function () {
        var IdDepartamento = $("#Select_Cliente_Empleado option:selected").val();
        if (IdDepartamento > 0) {
            $("#AgregarProyectoServicio").modal("show");
        } else {
            $.notify({
                message: "Formulario incompleto, Selecciona un cliente !."
            }, {
                type: 'danger'
            });
        }
    });

</script>

<script>
    $('#BTnAgregarCentroTrabajo').click(function () {
        if (ValidarNuevoCentroTrabajo()) {

            var Cat_Clientes = new Object();
            Cat_Clientes.Id = $("#Select_Cliente_Empleado option:selected").val();

            var Cat_Colonias = new Object();
            Cat_Colonias.Id = $("#Select_Colonia_Trabajo option:selected").val();

            var ClienteDireciones = new Object();
            ClienteDireciones.Cat_Clientes = Cat_Clientes;
            ClienteDireciones.Cat_Colonias = Cat_Colonias;
            ClienteDireciones.Calle = $('#Calle_Trabajo').val();
            ClienteDireciones.NumExterior = $('#NumExterior_Trabajo').val();
            ClienteDireciones.NumInteriror = $('#NumInterior_Trabajo').val();
            ClienteDireciones.EntreCalles = $('#EntreCalle_Trabajo').val();
            ClienteDireciones.Referencias = $('#Referencias_Trabajo').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("CentroTrabajo_Agregar", "CentroTrabajo")",
                async: false,
                data: JSON.stringify(ClienteDireciones),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoCentroTrabajo,
                error: errores
            });
        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }
    });

    function resultadoCentroTrabajo(data) {
        switch (data.Id) {
            case -1:
                swal({
                    title: "Algo ocurrió !",
                    text: "La dirección que intentas agregar ya se encuentra registrada.",
                    imageUrl: "../Images/icons/4944051.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });

                break;
            case 0:

                swal({
                    title: "Algo ocurrió !",
                    text: "",
                    imageUrl: "../Images/icons/4944051.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });
                break;

            default:
            // code block
        }

        if (data.Id > 0)
        {
            swal({
                title: "¡Nueva dirección agregada!",
                text: "",
                imageUrl: "../Images/icons/5673974.png",
                buttons: true,
                dangerMode: true,
            }, function (isConfirm) {
                if (isConfirm) {
                    swal.close();
                }
            });

            var IdCliente = $("#Select_Cliente_Empleado option:selected").val();

            var obj = {};
            obj['Id'] = IdCliente;

            var jsonObject = {
                "Cat_Clientes": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("CentroTrabajo_Listar", "CentroTrabajo")",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {

                    $("#Select_Centro_Trabajo_Empleado").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Select_Centro_Trabajo_Empleado").append(option);

                    if (result.length > 0) {
                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Direccion.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Centro_Trabajo_Empleado").append(option);
                        });

                        $('#Select_Centro_Trabajo_Empleado option[value="' + data.Id + '"]').attr("selected", true);
                    }
                },
                error: function () {

                    $("#Select_Centro_Trabajo_Empleado").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Select_Centro_Trabajo_Empleado").append(option);
                }
            });

            $("#BtnCerrarCentroTrabajo").trigger("click");
            //$('#Nombre_Proyecto_Modal').val('');
        }

    }

    function ValidarNuevoCentroTrabajo() {

        $('#CP_Trabajo').css("border", "1px solid #f44336");
        $('#Calle_Trabajo').css("border", "1px solid #f44336");
        $('#NumExterior_Trabajo').css("border", "1px solid #f44336");
        $('#Select_Estado_Trabajo').css("border", "1px solid #f44336");
        $('#Select_Delegacion_Municipio_Trabajo').css("border", "1px solid #f44336");
        $('#Select_Colonia_Trabajo').css("border", "1px solid #f44336");

        if ($('#CP_Trabajo').val().length > 0) {
            $('#CP_Trabajo').css("border", "1px solid #cccccc");
        }
        if ($('#Calle_Trabajo').val().length > 0) {
            $('#Calle_Trabajo').css("border", "1px solid #cccccc");
        }
        if ($('#NumExterior_Trabajo').val().length > 0) {
            $('#NumExterior_Trabajo').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Estado_Trabajo option:selected").val() > 0) {
            $('#Select_Estado_Trabajo').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Delegacion_Municipio_Trabajo option:selected").val() > 0) {
            $('#Select_Delegacion_Municipio_Trabajo').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Colonia_Trabajo option:selected").val() > 0) {
            $('#Select_Colonia_Trabajo').css("border", "1px solid #cccccc");
        }

        if ($('#CP_Trabajo').val().length > 0) {
            if ($('#Calle_Trabajo').val().length > 0) {
                if ($('#NumExterior_Trabajo').val().length > 0) {
                    if ($("#Select_Estado_Trabajo option:selected").val() > 0) {
                        if ($("#Select_Delegacion_Municipio_Trabajo option:selected").val() > 0) {
                            if ($("#Select_Colonia_Trabajo option:selected").val() > 0) {
                                result = true;
                            }
                        }
                    }
                }
            }
        }

        return result;
    }

    $('#BTnNuevoCentroTrabajo').click(function () {

        var IdCliente = $("#Select_Cliente_Empleado option:selected").val();
        if (IdCliente > 0) {
            $("#AgregarCentroTrabajo").modal("show");
        } else {
            $('#Select_Cliente_Empleado').css("border", "1px solid #f44336");

            if ($("#Select_Cliente_Empleado option:selected").val() > 0) {
                $('#Select_Cliente_Empleado').css("border", "1px solid #cccccc");
            }

            $.notify({
                message: "Formulario incompleto, Selecciona un cliente !."
            }, {
                type: 'danger'
            });
        }
    });

    function CPBuscar_Trabajo(valor) {

        ValidaInput('CP_Trabajo');

        $('#CP_Trabajo').css("border", "1px solid #ff0049");

        if ($('#CP_Trabajo').val().length > 0) {
            $('#CP_Trabajo').css("border", "1px solid #cccccc");
        }

        if (valor.length > 0) {
            var obj = {};
            obj['CP'] = valor;

            var jsonObject = {
                "Cat_CP": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("CP_Busqueda", "Direcciones")",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoBusqueda_Trabajo,
                error: function (result) {
                    $.notify({
                        message: "Código postal no encontrado ."
                    }, {
                        type: 'danger',
                        allow_dismiss: false,
                        animate: {
                            enter: 'animated rollIn',
                            exit: 'animated rollOut'
                        }
                    });
                }
            });
        } else {
            $.notify({
                message: "Coloca tu código postal."
            }, {
                type: 'danger',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }

    }

    function resultadoBusqueda_Trabajo(data) {

        if (data.length > 0) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_Estados", "Direcciones")",
                async: false,
                //data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (dataestados) {

                    $("#Select_Estado_Trabajo").empty();
                    if (dataestados.length > 0) {

                        var option = $(document.createElement('option'));
                        option.text("SELECCIONAR");
                        option.val(0);

                        $("#Select_Estado_Trabajo").append(option);

                        $(dataestados).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Estado.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Estado_Trabajo").append(option);
                        });

                        $('#Select_Estado_Trabajo option[value="' + data[0]["IdEstado"] + '"]').attr("selected", true);

                        var IdPoblacion = $("#Select_Estado_Trabajo option:selected").val();

                        if (IdPoblacion > 0) {
                            var obj = {};
                            obj['Id'] = IdPoblacion;

                            var jsonObject = {
                                "Cat_Poblacion": obj
                            };

                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("Consulta_DelegacionMunicipio", "Direcciones")",
                                data: JSON.stringify(jsonObject),
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: function (result) {

                                    $("#Select_Delegacion_Municipio_Trabajo").empty();

                                    if (result.length > 0) {

                                        var option = $(document.createElement('option'));
                                        option.text("SELECCIONAR");
                                        option.val(0);

                                        $("#Select_Delegacion_Municipio_Trabajo").append(option);

                                        $(result).each(function () {
                                            var option = $(document.createElement('option'));

                                            option.text(this.Poblacion.toUpperCase());
                                            option.val(this.Id);

                                            $("#Select_Delegacion_Municipio_Trabajo").append(option);
                                        });
                                    }
                                    $('#Select_Delegacion_Municipio_Trabajo option[value="' + data[0]["IdPoblacion"] + '"]').attr("selected", true);


                                    $("#Select_Colonia_Trabajo").empty();

                                    if (data.length > 0) {

                                        var option = $(document.createElement('option'));
                                        option.text("SELECCIONAR");
                                        option.val(0);

                                        $("#Select_Colonia_Trabajo").append(option);

                                        $(data).each(function () {
                                            var option = $(document.createElement('option'));

                                            option.text(this.Colonia.toUpperCase());
                                            option.val(this.IdColonia);

                                            $("#Select_Colonia_Trabajo").append(option);
                                        });
                                    }

                                    $('#Select_Colonia_Trabajo option[value="' + data[0]["IdColonia"] + '"]').attr("selected", true);

                                    $('#CP_Trabajo').css("border", "1px solid #e6e6e6");
                                    $('#Select_Colonia_Trabajo').css("border", "1px solid #e6e6e6");
                                    $('#Select_Estado_Trabajo').css("border", "1px solid #e6e6e6");
                                    $('#Select_Delegacion_Municipio_Trabajo').css("border", "1px solid #e6e6e6");

                                }
                            });
                        }

                    }
                },
                error: function () {
                    $.notify({
                        message: "Inténtelo mas tarde."
                    }, {
                        type: 'danger',
                        allow_dismiss: false,
                        animate: {
                            enter: 'animated rollIn',
                            exit: 'animated rollOut'
                        }
                    });
                }
            });

        } else {

            $("#Select_Delegacion_Municipio_Trabajo").empty();

            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Select_Delegacion_Municipio_Empleado").append(option);

            $("#Select_Colonia_Trabajo").empty();
            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Select_Colonia_Trabajo").append(option);


            $.notify({
                message: "Código postal no encontrado."
            }, {
                type: 'danger',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }

    }

    function callCP_Trabajo(valor)
    {
        if (valor > 0) {

            var obj = {};
            obj['Id'] = valor;

            var jsonObject = {
                "Cat_Colonias": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_CP", "Direcciones")",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultado3_Trabajo,
                error: errores
            });
        }
    }

    function resultado3_Trabajo(data) {
        $("#CP_Trabajo").val(data[0].CP);
        ValidaInput('Select_Colonia_Trabajo');
        ValidaInput('CP_Trabajo');
    }

    function callColonias_Trabajo(valor) {
        if (valor > 0) {

            var obj = {};
            obj['Id'] = valor;

            var jsonObject = {
                "Cat_Colonias": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_Colonias", "Direcciones")",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultado2_Trabajo,
                error: errores
            });

        }
    }

    function resultado2_Trabajo(data) {
        ValidaSelect("Select_Delegacion_Municipio_Trabajo");
        $("#Select_Colonia_Trabajo").empty();

        if (data.length > 0) {

            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Select_Colonia_Trabajo").append(option);

            $(data).each(function () {
                var option = $(document.createElement('option'));

                option.text(this.Colonia.toUpperCase());
                option.val(this.Id);

                $("#Select_Colonia_Trabajo").append(option);
            });
        }
    }

    function callEstados_Trabajo(valor) {
        if (valor > 0) {
            $("#Select_Colonia_Trabajo").empty();

            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Select_Colonia_Trabajo").append(option);

            var obj = {};
            obj['Id'] = valor;

            var jsonObject = {
                "Cat_Poblacion": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_DelegacionMunicipio", "Direcciones")",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultado_Trabajo,
                error: errores
            });

        }
    }

    function resultado_Trabajo(data) {
        ValidaSelect("Select_Estado_Trabajo");
        $("#Select_Delegacion_Municipio_Trabajo").empty();

        if (data.length > 0) {

            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Select_Delegacion_Municipio_Trabajo").append(option);

            $(data).each(function () {
                var option = $(document.createElement('option'));

                option.text(this.Poblacion.toUpperCase());
                option.val(this.Id);

                $("#Select_Delegacion_Municipio_Trabajo").append(option);
            });
        }
    }
</script>

<script>
    $('#BTnNuevaEmpresa').click(function () {

        var RazonSocial = $('#RazonSocial_Empresa_Modal').val();
        $('#RazonSocial_Empresa_Modal').css("border", "1px solid #f44336");

        var NombreComercial = $('#NombreComercial_Empresa_Modal').val();
        $('#NombreComercial_Empresa_Modal').css("border", "1px solid #f44336");

        var Alias = $('#Alias_Empresa_Modal').val();
        $('#Alias_Empresa_Modal').css("border", "1px solid #f44336");

        var RFC = $('#RFC_Empresa_Modal').val();
        $('#RFC_Empresa_Modal').css("border", "1px solid #f44336");

        if ($('#RazonSocial_Empresa_Modal').val().length > 0) {
            $('#RazonSocial_Empresa_Modal').css("border", "1px solid #cccccc");
        }

        if ($('#NombreComercial_Empresa_Modal').val().length > 0) {
            $('#NombreComercial_Empresa_Modal').css("border", "1px solid #cccccc");
        }
        if ($('#Alias_Empresa_Modal').val().length > 0) {
            $('#Alias_Empresa_Modal').css("border", "1px solid #cccccc");
        }
        if ($('#RFC_Empresa_Modal').val().length > 0) {
            $('#RFC_Empresa_Modal').css("border", "1px solid #cccccc");
        }

        var resul = false;

        if (RazonSocial.length > 0) {
            if (NombreComercial.length > 0) {
                if (Alias.length > 0) {
                    if (RFC.length > 0) {
                        resul = true;
                    }
                }
            }
        }

        if (resul) {

            var obj = {};
            obj['RazonSocial'] = RazonSocial;
            obj['NombreComercial'] = NombreComercial;
            obj['Alias'] = Alias;
            obj['RFC'] = RFC;

            var jsonObject = {
                "Empresas": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Empresas_Agregar", "Empresas")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoEmpresas,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }
    });

    function resultadoEmpresas(data) {
      switch (data.Id) {
          case -1:
                swal({
                    title: "Algo ocurrió !",
                    text: "La Empresa que intentas agregar ya se encuentra registrada.",
                    imageUrl: "../Images/icons/4944051.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });

                $('#RFC_Empresa_Modal').css("border", "1px solid #f44336");
                break;
          case 0:
                swal({
                    title: "Algo ocurrió !",
                    text: "",
                    imageUrl: "../Images/icons/4944051.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });
                break;

            default:
            // code block
        }

        if (data.Id > 0)
        {
            swal({
                title: "¡Nueva empresa agregada!",
                text: "",
                imageUrl: "../Images/icons/5673974.png",
                buttons: true,
                dangerMode: true,
            }, function (isConfirm) {
                if (isConfirm) {
                    swal.close();
                }
            });

            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_Empresas", "Empresas")",
                data: '',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Empresa_Empleado").empty();
                    $("#Select_Departamento_Empleado").empty();
                    $("#Select_Puesto_Empleado").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    var option2 = $(document.createElement('option'));
                    option2.text("SELECCIONAR");
                    option2.val(0);

                    var option3 = $(document.createElement('option'));
                    option3.text("SELECCIONAR");
                    option3.val(0);

                    $("#Select_Empresa_Empleado").append(option);
                    $("#Select_Departamento_Empleado").append(option2);
                    $("#Select_Puesto_Empleado").append(option3);

                    if (result.length > 0) {
                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.RazonSocial.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Empresa_Empleado").append(option);
                        });

                        $('#Select_Empresa_Empleado option[value="' + data.Id + '"]').attr("selected", true);
                    }
                },
                error: errores
            });

            $("#BtnCerrarEmpresa").trigger("click");
            $('#RazonSocial_Empresa_Modal').val('');
            $('#NombreComercial_Empresa_Modal').val('');
            $('#Alias_Empresa_Modal').val('');
            $('#RFC_Empresa_Modal').val('');
        }
    }

</script>

<script>
    function CargaPuestos(valor) {
        if (valor > 0) {
            $('#Select_Departamento_Empleado').css("border", "1px solid #cccccc");

            var obj = {};
            obj['Id'] = valor;

            var jsonObject = {
                "EmpresasDepartamento": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_Puestos", "Empresas")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Puesto_Empleado").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Select_Puesto_Empleado").append(option);


                    if (result.length > 0) {


                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Nombre.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Puesto_Empleado").append(option);
                        });

                        /*$('#Select_Puesto_Empleado option[value="' + valor + '"]').attr("selected", true);*/
                    }
                },
                error: errores
            });
        }
    }

    function CargaDepartamentos(valor) {
        if (valor > 0) {
            $('#Select_Empresa_Empleado').css("border", "1px solid #cccccc");

            var obj = {};
            obj['Id'] = valor;

            var jsonObject = {
                "Empresas": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_Departamentos", "Empresas")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Departamento_Empleado").empty();
                    $("#Select_Puesto_Empleado").empty();

                    var option2 = $(document.createElement('option'));
                    option2.text("SELECCIONAR");
                    option2.val(0);

                    var option3 = $(document.createElement('option'));
                    option3.text("SELECCIONAR");
                    option3.val(0);

                    $("#Select_Departamento_Empleado").append(option2);
                    $("#Select_Puesto_Empleado").append(option3);

                    if (result.length > 0) {
                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Nombre.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Departamento_Empleado").append(option);
                        });

                        /*$('#Select_Departamento_Empleado option[value="' + valor + '"]').attr("selected", true);*/
                    }
                },
                error: errores
            });

            var Empresas = new Object();
            Empresas.Id = valor;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_Clientes_Listar_IdEmpresa", "Clientes")",
                async: false,
                data: JSON.stringify(Empresas),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Cliente_Empleado").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Select_Cliente_Empleado").append(option);

                    if (result.length > 0) {
                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Nombre.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Cliente_Empleado").append(option);
                        });
                    }
                },
                error: errores
            });

            if (valor == 1) {
                $("#BTnNuevoCliente2").prop('disabled', false);
                $("#BTnNuevoProyecto").prop('disabled', false);
            } else {
                $("#BTnNuevoCliente2").prop('disabled', true);
                $("#BTnNuevoProyecto").prop('disabled', true);
            }
        }
    }

    function CargaProyectosServicios(valor)
    {
        if ($('#Select_Cliente_Empleado option:selected').val() > 0) {
            $('#Select_Cliente_Empleado').css("border", "1px solid #cccccc");
        } else {
            $('#Select_Cliente_Empleado').css("border", "1px solid #f44336");
        }

        if (valor > 0) {

            var obj2 = {};
            obj2['Id'] = valor;

            var jsonObject2 = {
                "Cat_Clientes": obj2
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("CentroTrabajo_Listar", "CentroTrabajo")",
                async: false,
                data: JSON.stringify(jsonObject2),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {

                    $("#Select_Centro_Trabajo_Empleado").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Select_Centro_Trabajo_Empleado").append(option);

                    if (result.length > 0) {
                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Direccion.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Centro_Trabajo_Empleado").append(option);
                        });
                    }

                },
                error: function () {

                    $("#Select_Centro_Trabajo_Empleado").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Select_Centro_Trabajo_Empleado").append(option);
                }
            });

            var obj = {};
            obj['IdCliente'] = valor;

            var jsonObject = {
                "Cat_ProyectoServicios": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("ProyectoServicios_Listar", "ProyectoServicios")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Proyecto_Empleado").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    $("#Select_Proyecto_Empleado").append(option);


                    if (result.length > 0) {


                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Nombre.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Proyecto_Empleado").append(option);
                        });

                        /*$('#Select_Puesto_Empleado option[value="' + valor + '"]').attr("selected", true);*/
                    }
                },
                error: errores
            });

           /* CargaCentroTrabajo();*/
        }
    }
</script>

<script>
    $('#BTnNuevoPuesto').click(function () {
        var IdDepartamento = $("#Select_Departamento_Empleado option:selected").val();

        var NombrePuesto = $('#Nombre_Puesto').val();
        $('#Nombre_Puesto').css("border", "1px solid #f44336");

        if ($('#Nombre_Puesto').val().length > 0) {
            $('#Nombre_Puesto').css("border", "1px solid #cccccc");
        }

        if (NombrePuesto.length > 0) {

            var obj = {};
            obj['IdDepartamento'] = IdDepartamento;
            obj['Nombre'] = NombrePuesto;

            var jsonObject = {
                "EmpresaPuestos": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("EmpresaPuestos_Agregar", "Empresas")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoPuestos,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }

    });

    function resultadoPuestos(data) {
        switch (data.Id) {
            case -1:
                swal({
                    title: "Algo ocurrió !",
                    text: "El puesto que intentas agregar ya se encuentra registrada.",
                    imageUrl: "../Images/icons/4944051.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });
                $('#Nombre_Puesto').css("border", "1px solid #f44336");
                break;
            case 0:
                swal({
                    title: "Algo ocurrió !",
                    text: "",
                    imageUrl: "../Images/icons/4944051.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });
                break;

            default:
            // code block
        }

        if (data.Id > 0)
        {
            swal({
                title: "¡Nuevo puesto agregado!",
                text: "",
                imageUrl: "../Images/icons/5673974.png",
                buttons: true,
                dangerMode: true,
            }, function (isConfirm) {
                if (isConfirm) {
                    swal.close();
                }
            });

            var IdDepartamento = $("#Select_Departamento_Empleado option:selected").val();

            var obj = {};
            obj['Id'] = IdDepartamento;

            var jsonObject = {
                "EmpresasDepartamento": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_Puestos", "Empresas")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Puesto_Empleado").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    if (result.length > 0) {
                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Nombre.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Puesto_Empleado").append(option);
                        });

                        $('#Select_Puesto_Empleado option[value="' + data.Id + '"]').attr("selected", true);
                    }
                },
                error: errores
            });

            $("#BtnCerrarPuesto").trigger("click");
            $('#Nombre_Puesto').val('');
        }
    }

    $('#BtnAbrirNuevoPuesto').click(function () {
        var IdDepartamento = $("#Select_Departamento_Empleado option:selected").val();
        if (IdDepartamento > 0) {
            $("#AgregarPuesto").modal("show");
        } else {
            $.notify({
                message: "Formulario incompleto, Selecciona un departamento !."
            }, {
                type: 'danger'
            });
        }
    });
</script>

<script>

    $('#BTnNuevoDepartamento').click(function () {
        var IdEmpresa = $("#Select_Empresa_Empleado option:selected").val();

        var NombreDepartamento = $('#Nombre_Departamento').val();
        $('#Nombre_Departamento').css("border", "1px solid #f44336");

        if ($('#Nombre_Departamento').val().length > 0) {
            $('#Nombre_Departamento').css("border", "1px solid #cccccc");
        }

        if (NombreDepartamento.length > 0) {
            var obj = {};
            obj['IdEmpresa'] = IdEmpresa;
            obj['Nombre'] = NombreDepartamento;

            var jsonObject = {
                "EmpresasDepartamento": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("EmpresasDepartamento_Agregar", "Empresas")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoDepartamento,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }

    });

    function resultadoDepartamento(data) {
        switch (data.Id) {
            case -1:
                  swal({
                        title: "Algo ocurrió !",
                        text: "El departamento que intentas agregar ya se encuentra registrado.",
                        imageUrl: "../Images/icons/4944051.png",
                        buttons: true,
                        dangerMode: true,
                    }, function (isConfirm) {
                        if (isConfirm) {
                            swal.close();
                        }
                  });

                $('#Nombre_Departamento').css("border", "1px solid #f44336");
                break;
            case 0:
                swal({
                    title: "Algo ocurrió !",
                    text: "",
                    imageUrl: "../Images/icons/4944051.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });
                break;

            default:
            // code block
        }

        if (data.Id > 0)
        {
            swal({
                title: "¡Nuevo departamento agregado!",
                text: "",
                imageUrl: "../Images/icons/5673974.png",
                buttons: true,
                dangerMode: true,
            }, function (isConfirm) {
                if (isConfirm) {
                    swal.close();
                }
            });

            var IdEmpresa = $("#Select_Empresa_Empleado option:selected").val();

            var obj = {};
            obj['Id'] = IdEmpresa;

            var jsonObject = {
                "Empresas": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_Departamentos", "Empresas")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Departamento_Empleado").empty();
                    $("#Select_Puesto_Empleado").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);

                    var option2 = $(document.createElement('option'));
                    option2.text("SELECCIONAR");
                    option2.val(0);

                    $("#Select_Departamento_Empleado").append(option);
                    $("#Select_Puesto_Empleado").append(option2);

                    if (result.length > 0) {
                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Nombre.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Departamento_Empleado").append(option);
                        });

                        $('#Select_Departamento_Empleado option[value="' + data.Id + '"]').attr("selected", true);
                    }
                },
                error: errores
            });

            $("#BtnCerrarDepartamento").trigger("click");
            $('#Nombre_Departamento').val('');
        }
    }

    $('#BtnAbrirNuevoDEpartamento').click(function () {
        var IdEmpresa = $("#Select_Empresa_Empleado option:selected").val();
        if (IdEmpresa > 0) {
            $("#AgregarDepartamento").modal("show");
        } else {
            $.notify({
                message: "Formulario incompleto, Selecciona una empresa !."
            }, {
                type: 'danger'
            });
        }
    });

</script>





<script>

    function GuardarDireccion() {
        if (ValidarDireccion()) {

            swal({
                title: "¡ Modificar dirección. !",
                imageUrl: "../Images/icons/4944051.png",
                showCancelButton: true,
                cancelButtonText: "Cancelar",
                confirmButtonColor: "#3070A9",
                confirmButtonText: "Continuar",
                closeOnConfirm: false,
            },
            function (isConfirm) {
                if (isConfirm) {
		            swal.close();

                    var PersonasDirecciones = new Object();
                    PersonasDirecciones.Id = @ViewBag.PersonasDirecciones.Id;
                    PersonasDirecciones.IdColonia = $("#Select_Colonia_Empleado option:selected").val();
                    PersonasDirecciones.Calle = $('#Calle_Empleado').val();
                    PersonasDirecciones.NumExterior = $('#NumExterior_Empleado').val();
                    PersonasDirecciones.NumInteriror = $('#NumInterior_Empleado').val();
                    PersonasDirecciones.EntreCalles = $('#EntreCalle_Empleado').val();
                    PersonasDirecciones.Referencias = $('#Referencias_Empleado').val();

                    var Personas = new Object();
                    Personas.Id = @ViewBag.Personas.Id;
                    Personas.PersonasDirecciones = PersonasDirecciones;

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Empleados_Actualizar_Direccion", "Empleados")",
                        async: false,
                        data: JSON.stringify(Personas),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: resultadoInformacionBasica,
                        error: errores
                    });
                }
            });

        } else {
            $.notify({
                icon: 'fa fa-paw',
                message: "Completa el formulario.",
            }, {
                type: 'warning',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    }

    function ValidarDireccion() {

        var result = false;

        $('#CP_Empleado').css("border", "1px solid #f44336");
        $('#Calle_Empleado').css("border", "1px solid #f44336");
        $('#NumExterior_Empleado').css("border", "1px solid #f44336");
        $('#Select_Estado_Empleado').css("border", "1px solid #f44336");
        $('#Select_Delegacion_Municipio_Empleado').css("border", "1px solid #f44336");
        $('#Select_Colonia_Empleado').css("border", "1px solid #f44336");

        if ($('#CP_Empleado').val().length > 0) {
            $('#CP_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#Calle_Empleado').val().length > 0) {
            $('#Calle_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#NumExterior_Empleado').val().length > 0) {
            $('#NumExterior_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Estado_Empleado option:selected").val() > 0) {
            $('#Select_Estado_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Delegacion_Municipio_Empleado option:selected").val() > 0) {
            $('#Select_Delegacion_Municipio_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Colonia_Empleado option:selected").val() > 0) {
            $('#Select_Colonia_Empleado').css("border", "1px solid #cccccc");
        }

        if ($('#CP_Empleado').val().length > 0) {
            if ($('#Calle_Empleado').val().length > 0) {
                if ($('#NumExterior_Empleado').val().length > 0) {
                    if ($("#Select_Estado_Empleado option:selected").val() > 0) {
                        if ($("#Select_Delegacion_Municipio_Empleado option:selected").val() > 0) {
                            if ($("#Select_Colonia_Empleado option:selected").val() > 0) {
                                result = true;
                            }
                        }
                    }
                }
            }
        }

        return result;
    }

    $(document).ready(function () {
        var CP = "@ViewBag.PersonasDirecciones.CP";

        if (CP.length > 0) {
            $('#CP_Empleado').val("@ViewBag.PersonasDirecciones.CP");
            $("#CP_Empleado").change();

            var valor = @ViewBag.PersonasDirecciones.IdColonia;
            $("#Select_Colonia_Empleado option[value='" + valor + "']").attr("selected", true);
        }
    });

    function CPBuscar(valor) {
        $('#CP_Empleado').css("border", "1px solid #ff0049");

        if ($('#CP_Empleado').val().length > 0) {
            $('#CP_Empleado').css("border", "1px solid #cccccc");
        }

        if (valor.length > 0) {
            var obj = {};
            obj['CP'] = valor;

            var jsonObject = {
                "Cat_CP": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("CP_Busqueda", "Direcciones")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoBusqueda,
                error: function (result) {
                    $.notify({
                        message: "Código postal no encontrado ."
                    }, {
                        type: 'danger',
                        allow_dismiss: false,
                        animate: {
                            enter: 'animated rollIn',
                            exit: 'animated rollOut'
                        }
                    });
                }
            });
        } else {
            $.notify({
                message: "Coloca tu código postal."
            }, {
                type: 'danger',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }

    }

    function resultadoBusqueda(data) {
        if (data.length > 0) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_Estados", "Direcciones")",
                async: false,
                //data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (dataestados) {

                    $("#Select_Estado_Empleado").empty();
                    if (dataestados.length > 0) {

                        var option = $(document.createElement('option'));
                        option.text("SELECCIONAR");
                        option.val(0);

                        $("#Select_Estado_Empleado").append(option);

                        $(dataestados).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Estado.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Estado_Empleado").append(option);
                        });

                        $('#Select_Estado_Empleado option[value="' + data[0]["IdEstado"] + '"]').attr("selected", true);

                        var IdPoblacion = $("#Select_Estado_Empleado option:selected").val();

                        if (IdPoblacion > 0) {
                            var obj = {};
                            obj['Id'] = IdPoblacion;

                            var jsonObject = {
                                "Cat_Poblacion": obj
                            };

                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("Consulta_DelegacionMunicipio", "Direcciones")",
                                async: false,
                                data: JSON.stringify(jsonObject),
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: function (result) {

                                    $("#Select_Delegacion_Municipio_Empleado").empty();

                                    if (result.length > 0) {

                                        var option = $(document.createElement('option'));
                                        option.text("SELECCIONAR");
                                        option.val(0);

                                        $("#Select_Delegacion_Municipio_Empleado").append(option);

                                        $(result).each(function () {
                                            var option = $(document.createElement('option'));

                                            option.text(this.Poblacion.toUpperCase());
                                            option.val(this.Id);

                                            $("#Select_Delegacion_Municipio_Empleado").append(option);
                                        });
                                    }
                                    $('#Select_Delegacion_Municipio_Empleado option[value="' + data[0]["IdPoblacion"] + '"]').attr("selected", true);


                                    $("#Select_Colonia_Empleado").empty();

                                    if (data.length > 0) {

                                        var option = $(document.createElement('option'));
                                        option.text("SELECCIONAR");
                                        option.val(0);

                                        $("#Select_Colonia_Empleado").append(option);

                                        $(data).each(function () {
                                            var option = $(document.createElement('option'));

                                            option.text(this.Colonia.toUpperCase());
                                            option.val(this.IdColonia);

                                            $("#Select_Colonia_Empleado").append(option);
                                        });
                                    }

                                    $('#Select_Colonia_Empleado option[value="' + data[0]["IdColonia"] + '"]').attr("selected", true);

                                    $('#CP_Empleado').css("border", "1px solid #e6e6e6");
                                    $('#Select_Colonia_Empleado').css("border", "1px solid #e6e6e6");
                                    $('#Select_Estado_Empleado').css("border", "1px solid #e6e6e6");
                                    $('#Select_Delegacion_Municipio_Empleado').css("border", "1px solid #e6e6e6");

                                }
                            });
                        }

                    }
                },
                error: function () {
                    $.notify({
                        message: "Inténtelo mas tarde."
                    }, {
                        type: 'danger',
                        allow_dismiss: false,
                        animate: {
                            enter: 'animated rollIn',
                            exit: 'animated rollOut'
                        }
                    });
                }
            });

        } else {

            $("#Select_Delegacion_Municipio_Empleado").empty();

            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Select_Delegacion_Municipio_Empleado").append(option);

            $("#Select_Colonia_Empleado").empty();
            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Select_Colonia_Empleado").append(option);


            $.notify({
                message: "Código postal no encontrado."
            }, {
                type: 'danger',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }

    }

    function callCP(valor)
    {
        if (valor > 0) {

            var obj = {};
            obj['Id'] = valor;

            var jsonObject = {
                "Cat_Colonias": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_CP", "Direcciones")",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultado3,
                error: errores
            });
        }
    }

    function resultado3(data) {
        $("#CP_Empleado").val(data[0].CP);
    }

    function callColonias(valor) {
        if (valor > 0) {

            var obj = {};
            obj['Id'] = valor;

            var jsonObject = {
                "Cat_Colonias": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_Colonias", "Direcciones")",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultado2,
                error: errores
            });

        }
    }

    function resultado2(data) {

        $("#Select_Colonia_Empleado").empty();

        if (data.length > 0) {

            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Select_Colonia_Empleado").append(option);

            $(data).each(function () {
                var option = $(document.createElement('option'));

                option.text(this.Colonia.toUpperCase());
                option.val(this.Id);

                $("#Select_Colonia_Empleado").append(option);
            });
        }
    }

    function callEstados(valor) {
        if (valor > 0) {
            $("#Select_Colonia_Empleado").empty();

            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Select_Colonia_Empleado").append(option);

            var obj = {};
            obj['Id'] = valor;

            var jsonObject = {
                "Cat_Poblacion": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Consulta_DelegacionMunicipio", "Direcciones")",
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultado,
                error: errores
            });

        }
    }

    function resultado(data) {

        $("#Select_Delegacion_Municipio_Empleado").empty();

        if (data.length > 0) {

            var option = $(document.createElement('option'));
            option.text("SELECCIONAR");
            option.val(0);

            $("#Select_Delegacion_Municipio_Empleado").append(option);

            $(data).each(function () {
                var option = $(document.createElement('option'));

                option.text(this.Poblacion.toUpperCase());
                option.val(this.Id);

                $("#Select_Delegacion_Municipio_Empleado").append(option);
            });
        }
    }
</script>

<script>
    $(document).on('click', '#checkboxCDC', function () {
        let val = $(this).val();
        //Revisa en que status está el checkbox y controlalo según lo //desees
        if ($(this).is(':checked')) {
            $("#DivFormCDC").show();
            /*$("#DivFormCDCTabla").show();*/
        }
        else {
            $("#DivFormCDC").css("display", "none");
            $("#DivFormCurso").css("display", "none");
            $("#DivFormDiplomado").css("display", "none");
            $("#DivFormCertificaciones").css("display", "none");
           /* $("#DivFormCDCTabla").css("display", "none");*/
            $('#Select_Tipo_CDC option[value="0"]').attr("selected", true);
        }
    });

    $('#BTnNuevaCertificacion').click(function () {

        var Certificacion = $('#Nombre_certificacion_Modal').val();
        $('#Nombre_certificacion_Modal').css("border", "1px solid #f44336");

        if ($('#Nombre_certificacion_Modal').val().length > 0) {
            $('#Nombre_certificacion_Modal').css("border", "1px solid #cccccc");
        }

        var resul = false;

        if (Certificacion.length > 0) {
            resul = true;
        }

        if (resul) {

            var obj = {};
            obj['Nombre'] = Certificacion;

            var jsonObject = {
                "Cat_Certificaciones": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_Certificaciones_Agregar", "Certificaciones")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoCertificacion,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }
    });

    function resultadoCertificacion(data) {
         switch (data.Id) {
             case -1:
                  swal({
                        title: "Algo ocurrió !",
                        text: "La certificación que intentas agregar ya se encuentra registrada.",
                        imageUrl: "../Images/icons/4944051.png",
                        buttons: true,
                        dangerMode: true,
                    }, function (isConfirm) {
                        if (isConfirm) {
                            swal.close();
                        }
                  });
                 $('#Nombre_certificacion_Modal').css("border", "1px solid #f44336");
                break;
             case 0:
                 swal({
                     title: "Algo ocurrió !",
                     text: "",
                     imageUrl: "../Images/icons/4944051.png",
                     buttons: true,
                     dangerMode: true,
                 }, function (isConfirm) {
                     if (isConfirm) {
                         swal.close();
                     }
                 });
                break;

            default:
            // code block
        }

        if (data.Id > 0)
        {
            swal({
                title: "¡Nueva certificación agregada!",
                text: "",
                imageUrl: "../Images/icons/5673974.png",
                buttons: true,
                dangerMode: true,
            }, function (isConfirm) {
                if (isConfirm) {
                    swal.close();
                }
            });

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_Certificaciones_Listar", "Certificaciones")",
                data: '',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Certificaciones_nombre").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);
                    $("#Select_Certificaciones_nombre").append(option);

                    if (result.length > 0) {
                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Nombre.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Certificaciones_nombre").append(option);
                        });

                        $('#Select_Certificaciones_nombre option[value="' + data.Id + '"]').attr("selected", true);
                    }
                },
                error: errores
            });

            $("#BtnCerrarCertificacion").trigger("click");
            $('#Nombre_certificacion_Modal').val('');
        }
    }

    $('#BTnNuevoDiplomado').click(function () {

        var Diplomado = $('#Nombre_Diplomado_Modal').val();
        $('#Nombre_Diplomado_Modal').css("border", "1px solid #f44336");

        if ($('#Nombre_Diplomado_Modal').val().length > 0) {
            $('#Nombre_Diplomado_Modal').css("border", "1px solid #cccccc");
        }

        var resul = false;

        if (Diplomado.length > 0) {
            resul = true;
        }

        if (resul) {

            var obj = {};
            obj['Nombre'] = Diplomado;

            var jsonObject = {
                "Cat_Diplomados": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_Diplomados_Agregar", "Diplomados")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoDiplomados,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }
    });

    function resultadoDiplomados(data) {
         switch (data.Id) {
             case -1:
                  swal({
                        title: "Algo ocurrió !",
                      text: "El diplomado que intentas agregar ya se encuentra registrado.",
                        imageUrl: "../Images/icons/4944051.png",
                        buttons: true,
                        dangerMode: true,
                    }, function (isConfirm) {
                        if (isConfirm) {
                            swal.close();
                        }
                  });

                 $('#Nombre_Diplomado_Modal').css("border", "1px solid #f44336");
                break;
             case 0:
                 swal({
                     title: "Algo ocurrió !",
                     text: "",
                     imageUrl: "../Images/icons/4944051.png",
                     buttons: true,
                     dangerMode: true,
                 }, function (isConfirm) {
                     if (isConfirm) {
                         swal.close();
                     }
                 });
                break;

            default:
            // code block
        }

        if (data.Id > 0)
        {
            swal({
                title: "¡Nuevo diplomado agregado!",
                text: "",
                imageUrl: "../Images/icons/5673974.png",
                buttons: true,
                dangerMode: true,
            }, function (isConfirm) {
                if (isConfirm) {
                    swal.close();
                }
            });

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_Diplomados_Listar", "Diplomados")",
                data: '',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Diplomados_nombre").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);
                    $("#Select_Diplomados_nombre").append(option);

                    if (result.length > 0) {
                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Nombre.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Diplomados_nombre").append(option);
                        });

                        $('#Select_Diplomados_nombre option[value="' + data.Id + '"]').attr("selected", true);
                    }
                },
                error: errores
            });

            $("#BtnCerrarDiplomado").trigger("click");
            $('#Nombre_Diplomado_Modal').val('');
        }
    }

    $('#BTnNuevoCurso').click(function () {

        var Curso = $('#Nombre_Curso_Modal').val();
        $('#Nombre_Curso_Modal').css("border", "1px solid #f44336");

        if ($('#Nombre_Curso_Modal').val().length > 0) {
            $('#Nombre_Curso_Modal').css("border", "1px solid #cccccc");
        }

        var resul = false;

        if (Curso.length > 0) {
            resul = true;
        }

        if (resul) {

            var obj = {};
            obj['Nombre'] = Curso;

            var jsonObject = {
                "Cat_Cursos": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_Cursos_Agregar", "Cursos")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoCursos,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }
    });

    function resultadoCursos(data) {
         switch (data.Id) {
             case -1:
                 swal({
                     title: "Algo ocurrió !",
                     text: "El curso que intentas agregar ya se encuentra registrado.",
                     imageUrl: "../Images/icons/4944051.png",
                     buttons: true,
                     dangerMode: true,
                 }, function (isConfirm) {
                     if (isConfirm) {
                         swal.close();
                     }
                 });
                 $('#Nombre_Curso_Modal').css("border", "1px solid #f44336");
                break;
             case 0:
                swal({
                     title: "Algo ocurrió !",
                     text: "",
                     imageUrl: "../Images/icons/4944051.png",
                     buttons: true,
                     dangerMode: true,
                 }, function (isConfirm) {
                     if (isConfirm) {
                         swal.close();
                     }
                });
                break;

            default:
            // code block
        }

        if (data.Id > 0)
        {
            swal({
                title: "¡Nuevo curso agregado!",
                text: "",
                imageUrl: "../Images/icons/5673974.png",
                buttons: true,
                dangerMode: true,
            }, function (isConfirm) {
                if (isConfirm) {
                    swal.close();
                }
            });

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_Cursos_Listar", "Cursos")",
                data: '',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Curso_nombre").empty();

                    var option = $(document.createElement('option'));
                    option.text("SELECCIONAR");
                    option.val(0);
                    $("#Select_Curso_nombre").append(option);

                    if (result.length > 0) {
                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Nombre.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Curso_nombre").append(option);
                        });

                        $('#Select_Curso_nombre option[value="' + data.Id + '"]').attr("selected", true);
                    }
                },
                error: errores
            });

            $("#BtnCerrarCurso").trigger("click");
            $('#Nombre_Curso_Modal').val('');
        }
    }

    function CargaFormulario() {
        var Tipo = $("#Select_Tipo_CDC option:selected").val();

        if (Tipo == 1) {
            $("#DivFormCurso").show();
            $("#DivFormDiplomado").css("display", "none");
            $("#DivFormCertificaciones").css("display", "none");
            $("#DivFormCDCTabla").show();
        } else if (Tipo == 2) {
            $("#DivFormCurso").css("display", "none");
            $("#DivFormDiplomado").show();
            $("#DivFormCertificaciones").css("display", "none");
            $("#DivFormCDCTabla").show();
        } else if (Tipo == 3) {
            $("#DivFormCurso").css("display", "none");
            $("#DivFormDiplomado").css("display", "none");
            $("#DivFormCertificaciones").show();
            $("#DivFormCDCTabla").show();
        } else {
            $("#DivFormCurso").css("display", "none");
            $("#DivFormDiplomado").css("display", "none");
            $("#DivFormCertificaciones").css("display", "none");
            $("#DivFormCDCTabla").css("display", "none");
            $("#DivFormCDCTabla").show();
        }
    }
</script>

<script>
    $('#BTnAgregarCertificado').click(function () {

        var Certificaciones = $("#Select_Certificaciones_nombre option:selected").val();
        var NombreCertificacion = $("#Select_Certificaciones_nombre option:selected").text();
        var Fecha = $("#FechaTermino_Certificaciones").val();
        var Certificado = $("#Select_Certificado_Certificaciones option:selected").val();

        $('#Select_Certificaciones_nombre').css("border", "1px solid #f44336");
        $('#FechaTermino_Certificaciones').css("border", "1px solid #f44336");
        $('#Select_Certificado_Certificaciones').css("border", "1px solid #f44336");

        if ($("#Select_Certificaciones_nombre option:selected").val() > 0) {
            $('#Select_Certificaciones_nombre').css("border", "1px solid #cccccc");
        }

        if ($("#FechaTermino_Certificaciones").val().length > 0) {
            $('#FechaTermino_Certificaciones').css("border", "1px solid #cccccc");
        }

        if ($("#Select_Certificado_Certificaciones option:selected").val() > 0) {
            $('#Select_Certificado_Certificaciones').css("border", "1px solid #cccccc");
        }

        var resul = false;

        if (Certificaciones > 0) {
            if (Fecha.length > 0) {
                if (Certificado > 0) {
                    resul = true;
                }
            }
        }

        if (resul) {
            var Personas = new Object();
            Personas.Id = @ViewBag.Personas.Id;

            var Cat_Certificaciones = new Object();
            Cat_Certificaciones.Id = Certificaciones;
            Cat_Certificaciones.Nombre = NombreCertificacion;

            var PersonasCertificacion = new Object();
            PersonasCertificacion.Personas = Personas;
            PersonasCertificacion.Cat_Certificaciones = Cat_Certificaciones;
            PersonasCertificacion.FechaTermino = Fecha;
            PersonasCertificacion.Aprobado = Certificado;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Certificaciones_EditarEmpleado_agregar", "Certificaciones")",
                async: false,
                data: JSON.stringify(PersonasCertificacion),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: PintaTableListaCDC,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }

    });

    $('#BTnAgregarDiplomado').click(function () {
        var Diplomados = $("#Select_Diplomados_nombre option:selected").val();
        var NombreDiplomado = $("#Select_Diplomados_nombre option:selected").text();
        var Fecha = $("#FechaTermino_Diplomado").val();
        var Aprobado = $("#Select_Diplomado_Aprobado option:selected").val();

        $('#Select_Diplomados_nombre').css("border", "1px solid #f44336");
        $('#FechaTermino_Diplomado').css("border", "1px solid #f44336");
        $('#Select_Diplomado_Aprobado').css("border", "1px solid #f44336");

        if ($("#Select_Diplomados_nombre option:selected").val() > 0) {
            $('#Select_Diplomados_nombre').css("border", "1px solid #cccccc");
        }

        if ($("#FechaTermino_Diplomado").val().length > 0) {
            $('#FechaTermino_Diplomado').css("border", "1px solid #cccccc");
        }

        if ($("#Select_Diplomado_Aprobado option:selected").val() > 0) {
            $('#Select_Diplomado_Aprobado').css("border", "1px solid #cccccc");
        }

        var resul = false;

        if (Diplomados > 0) {
            if (Fecha.length > 0) {
                if (Aprobado > 0) {
                    resul = true;
                }
            }
        }

        if (resul) {

            var Personas = new Object();
            Personas.Id = @ViewBag.Personas.Id;

            var Cat_Diplomados = new Object();
            Cat_Diplomados.Id = Diplomados;
            Cat_Diplomados.Nombre = NombreDiplomado;

            var PersonasDiplomados = new Object();
            PersonasDiplomados.Cat_Diplomados = Cat_Diplomados;
            PersonasDiplomados.FechaTermino = Fecha;
            PersonasDiplomados.Aprobado = Aprobado;
            PersonasDiplomados.Personas = Personas;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Diplomados_EditarEmpleado_agregar", "Diplomados")",
                async: false,
                data: JSON.stringify(PersonasDiplomados),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: PintaTableListaCDC,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }

    });

    $('#BTnAgregarCurso').click(function () {
        var Curso = $("#Select_Curso_nombre option:selected").val();
        var NombreCurso = $("#Select_Curso_nombre option:selected").text();
        var Fecha = $("#FechaTermino_Curso").val();
        var Acreditado = $("#Select_Curso_Acreditado option:selected").val();

        $('#Select_Curso_nombre').css("border", "1px solid #f44336");
        $('#FechaTermino_Curso').css("border", "1px solid #f44336");
        $('#Select_Curso_Acreditado').css("border", "1px solid #f44336");

        if ($("#Select_Curso_nombre option:selected").val() > 0) {
            $('#Select_Curso_nombre').css("border", "1px solid #cccccc");
        }

        if ($("#FechaTermino_Curso").val().length > 0) {
            $('#FechaTermino_Curso').css("border", "1px solid #cccccc");
        }

        if ($("#Select_Curso_Acreditado option:selected").val() > 0) {
            $('#Select_Curso_Acreditado').css("border", "1px solid #cccccc");
        }

        var resul = false;

        if (Curso > 0) {
            if (Fecha.length > 0) {
                if (Acreditado > 0) {
                    resul = true;
                }
            }
        }

        if (resul) {

            var Personas = new Object();
            Personas.Id = @ViewBag.Personas.Id;

            var Cat_Cursos = new Object();
            Cat_Cursos.Id = Curso;
            Cat_Cursos.Nombre = NombreCurso;

            var PersonasCursos = new Object();
            PersonasCursos.Cat_Cursos = Cat_Cursos;
            PersonasCursos.FechaTermino = Fecha;
            PersonasCursos.Acreditado = Acreditado;
            PersonasCursos.Personas = Personas;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cursos_EditarEmpleado_agregar", "Cursos")",
                async: false,
                data: JSON.stringify(PersonasCursos),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: PintaTableListaCDC,
                error: errores
            });

        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }

    });

    function PintaTableListaCDC(respuesta) {


        $("#Select_Curso_nombre").val("0");
        $("#Select_Curso_Acreditado").val("0");
        $('#FechaTermino_Curso').val('');

        $("#Select_Diplomados_nombre").val("0");
        $("#Select_Diplomado_Aprobado").val("0");
        $('#FechaTermino_Diplomado').val('');

        $("#Select_Certificaciones_nombre").val("0");
        $("#Select_Certificado_Certificaciones").val("0");
        $('#FechaTermino_Certificaciones').val('');

         var Table =
            "<div class='card-block table-border-style'>" +
                "<div class='table-responsive'>" +
                    "<table class='table text-center table-hover table-striped' width='100%' id='TableListaCursoCertifiDiplo'>" +
                        "<thead class='thead-dark text-center'>" +
                            "<tr>" +
                                 "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Nombre</p></th>" +
                                 "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Estatus </p></th>" +
                                 "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Fecha </p></th>" +
                                 "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Archivo </p></th>" +
                                 "<th class='text-center'> </th>" +
                            "</tr>" +
                        "</thead>" +
            "<tbody>";

        if (respuesta.PersonasCursos != null) {
            for (var b = 0; b < respuesta.PersonasCursos.length; b++) {
                Table +="<tr>" +
                        "<td>" +
                            "<p style='font-size:13px;'>" +
                                "<strong> CURSO </strong> <br>" +
                                    respuesta.PersonasCursos[b].Cat_Cursos.Nombre +
                            "</p>" +
                        "</td >" +
                        "<td>" +
                            "<p style='font-size:13px;'>";
                            if (respuesta.PersonasCursos[b].Acreditado == 1) {
                                Table += "<strong>Acreditado</strong>";
                            } else {
                                Table += "<strong>No Acreditado</strong>";
                            }
                Table +=    "</p>" +
                        "</td>" +
                        "<td>" +
                            "<p style='font-size:13px;'>" +
                                "" + moment(respuesta.PersonasCursos[b].FechaTermino).format('DD/MM/YYYY') + "" +
                            "</p>" +
                        "</td>" +
                        "<td>";
                            if (respuesta.PersonasCursos[b].NmArchivo == null) {
                                Table += "" +
                                    "<strong>Sin Archivo</strong>" +
                                    "<input type='file' id='fileInputCDC_" + respuesta.PersonasCursos[b].Id + "' onchange='handleFilesCDC(1," + respuesta.PersonasCursos[b].Id + ")' style='visibility: hidden; width: 1px;'>";
                            } else {
                                Table += "<button class='btn waves-effect btn-danger waves-light col-md-4'  onclick='EliminarArchivoCDC(1," + respuesta.PersonasCursos[b].Id + ")'  data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>";
                                Table += "<button class='btn waves-effect btn-view waves-light col-md-4'  onclick='MostrarArchivoCDC(1," + respuesta.PersonasCursos[b].Id + ")' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>";
                            }
                Table += "</td>" +
                         "<td>";
                            if (respuesta.PersonasCursos[b].NmArchivo == null) {
                                Table += "<button class='btn waves-effect waves-light btn-uppload col-md-4' id='BtnSubirArchivoListCDC_" + respuesta.PersonasCursos[b].Id + "' onclick='SubirArchivoListCDC(" + respuesta.PersonasCursos[b].Id + ")' data-toggle='tooltip' data-placement='top' title='Subir documento'><i class='fa fa-cloud-upload'></i></button>";
                                Table += "<button class='btn waves-effect waves-light btn-danger col-md-4' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarCDC(1," + respuesta.PersonasCursos[b].Id + ")'><i class='fa fa-trash'></i></button>";
                            } else {
                                Table += "<button class='btn waves-effect waves-light btn-danger col-md-8' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarCDC(1," + respuesta.PersonasCursos[b].Id + ")'><i class='fa fa-trash'></i></button>";
                            }
                Table += "</td>" +
                         "</tr>";
            }
        }

        if (respuesta.PersonasDiplomados != null) {
            for (var b = 0; b < respuesta.PersonasDiplomados.length; b++) {
                Table +="<tr>" +
                        "<td>" +
                            "<p style='font-size:13px;'>" +
                                "<strong> DIPLOMADO </strong> <br>" +
                                    respuesta.PersonasDiplomados[b].Cat_Diplomados.Nombre +
                            "</p>" +
                        "</td >" +
                        "<td>" +
                            "<p style='font-size:13px;'>";
                            if (respuesta.PersonasDiplomados[b].Aprobado == 1) {
                                Table += "<strong>Acreditado</strong>";
                            } else {
                                Table += "<strong>No Acreditado</strong>";
                            }
                Table +=    "</p>" +
                        "</td>" +
                        "<td>" +
                            "<p style='font-size:13px;'>" +
                                "" + moment(respuesta.PersonasDiplomados[b].FechaTermino).format('DD/MM/YYYY') + "" +
                            "</p>" +
                        "</td>" +
                        "<td>";
                            if (respuesta.PersonasDiplomados[b].NmArchivo == null) {
                                Table += "" +
                                    "<strong>Sin Archivo</strong>" +
                                    "<input type='file' id='fileInputCDC_" + respuesta.PersonasDiplomados[b].Id + "' onchange='handleFilesCDC(2," + respuesta.PersonasDiplomados[b].Id + ")' multiple style='visibility: hidden; width: 1px;'>";
                            } else {
                                Table += "<button class='btn waves-effect btn-danger waves-light col-md-4'  onclick='EliminarArchivoCDC(2," + respuesta.PersonasDiplomados[b].Id + ")'  data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>";
                                Table += "<button class='btn waves-effect btn-view waves-light col-md-4'  onclick='MostrarArchivoCDC(2," + respuesta.PersonasDiplomados[b].Id + ")' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>";
                            }
                Table += "</td>" +
                         "<td>";
                            if (respuesta.PersonasDiplomados[b].NmArchivo == null) {
                                Table += "<button class='btn waves-effect waves-light btn-uppload col-md-4' id='BtnSubirArchivoListCDC_" + respuesta.PersonasDiplomados[b].Id + "' onclick='SubirArchivoListCDC(" + respuesta.PersonasDiplomados[b].Id + ")' data-toggle='tooltip' data-placement='top' title='Subir documento'><i class='fa fa-cloud-upload'></i></button>";
                                Table += "<button class='btn waves-effect waves-light btn-danger col-md-4' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarCDC(2," + respuesta.PersonasDiplomados[b].Id + ")'><i class='fa fa-trash'></i></button>";
                            } else {
                                Table += "<button class='btn waves-effect waves-light btn-danger col-md-8' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarCDC(2," + respuesta.PersonasDiplomados[b].Id + ")'><i class='fa fa-trash'></i></button>";
                            }
                Table += "</td>" +
                         "</tr>";
            }
        }

        if (respuesta.PersonasCertificaciones != null) {
            for (var b = 0; b < respuesta.PersonasCertificaciones.length; b++) {
                Table +="<tr>" +
                        "<td>" +
                            "<p style='font-size:13px;'>" +
                                "<strong> CERTIFICACIÓN </strong> <br>" +
                                    respuesta.PersonasCertificaciones[b].Cat_Certificaciones.Nombre +
                            "</p>" +
                        "</td >" +
                        "<td>" +
                            "<p style='font-size:13px;'>";
                            if (respuesta.PersonasCertificaciones[b].Aprobado == 1) {
                                Table += "<strong>Acreditado</strong>";
                            } else {
                                Table += "<strong>No Acreditado</strong>";
                            }
                Table +=    "</p>" +
                        "</td>" +
                        "<td>" +
                            "<p style='font-size:13px;'>" +
                                "" + moment(respuesta.PersonasCertificaciones[b].FechaTermino).format('DD/MM/YYYY') + "" +
                            "</p>" +
                        "</td>" +
                        "<td>";
                            if (respuesta.PersonasCertificaciones[b].NmArchivo == null) {
                                Table += "" +
                                    "<strong>Sin Archivo</strong>" +
                                    "<input type='file' id='fileInputCDC_" + respuesta.PersonasCertificaciones[b].Id + "' onchange='handleFilesCDC(3," + respuesta.PersonasCertificaciones[b].Id + ")' multiple style='visibility: hidden; width: 1px;'>";
                            } else {
                                Table += "<button class='btn waves-effect btn-danger waves-light col-md-4'  onclick='EliminarArchivoCDC(3," + respuesta.PersonasCertificaciones[b].Id + ")'  data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>";
                                Table += "<button class='btn waves-effect btn-view waves-light col-md-4'  onclick='MostrarArchivoCDC(3," + respuesta.PersonasCertificaciones[b].Id + ")' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>";
                            }
                Table += "</td>" +
                         "<td>";
                            if (respuesta.PersonasCertificaciones[b].NmArchivo == null) {
                                Table += "<button class='btn waves-effect waves-light btn-uppload col-md-4' id='BtnSubirArchivoListCDC_" + respuesta.PersonasCertificaciones[b].Id + "' onclick='SubirArchivoListCDC(" + respuesta.PersonasCertificaciones[b].Id + ")' data-toggle='tooltip' data-placement='top' title='Subir documento'><i class='fa fa-cloud-upload'></i></button>";
                                Table += "<button class='btn waves-effect waves-light btn-danger col-md-4' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarCDC(3," + respuesta.PersonasCertificaciones[b].Id + ")'><i class='fa fa-trash'></i></button>";
                            } else {
                                Table += "<button class='btn waves-effect waves-light btn-danger col-md-8' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarCDC(3," + respuesta.PersonasCertificaciones[b].Id + ")'><i class='fa fa-trash'></i></button>";
                            }
                Table += "</td>" +
                         "</tr>";
            }
        }

        Table +=        "</tbody>" +
                    "</table>" +
                "</div>" +
            "</div>";
        $('#TablaCursoCertifiDiplo').html(Table);
        $('[data-toggle="tooltip"]').tooltip();
    }

    function SubirArchivoListCDC(num) {
        $("#fileInputCDC_" + num).click();
    }

    function handleFilesCDC(tipo,num) {

        var fileInput = document.getElementById('fileInputCDC_' + num);

        if (fileInput.files.length > 0) {
            for (i = 0; i < fileInput.files.length; i++) {
                var ext = fileInput.files[i].name.split('.').pop();
                Extencion = fileInput.files[i].name.split('.').pop();

                // Convertimos en minúscula porque
                // la extensión del archivo puede estar en mayúscula
                ext = ext.toLowerCase();

                if (ext == 'pdf') {

                    Carga = true;
                } else {
                    Carga = false;
                    Formato = ext;
                    break;
                }
            }

            for (i = 0; i < fileInput.files.length; i++) {
                var filesize = ((fileInput.files[i].size / 1024) / 1024).toFixed(4);

                if (filesize < 10) {
                    CargaTam = true;
                } else {
                    CargaTam = false;
                    Tam = filesize;
                    break;
                }
            }

            if (Carga) {
                if (CargaTam) {
                    $("#BtnSubirArchivoListCDC_" + num).prop('disabled', true);
                    var formData = new FormData();

                    for (i = 0; i < fileInput.files.length; i++) {
                        formData.append(fileInput.files[i].name, fileInput.files[i]);
                    }
                    $("#CargandoProcesos").modal("show");

                    $.ajax({
                        url: '/api/FileAPI/UploadFilesEstudios',
                        type: 'POST',
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (documento) {
                            $("#BtnSubirArchivoListCDC_" + num).prop('disabled', false);
                            CargaCDC(documento, num, tipo);
                        },
                        xhr: function () {
                            var fileXhr = $.ajaxSettings.xhr();
                            if (fileXhr.upload) {
                                $("progress").show();
                                fileXhr.upload.addEventListener("progress", function (e) {
                                    if (e.lengthComputable) {
                                        $("#fileProgress4").attr({
                                            value: e.loaded,
                                            max: e.total
                                        });
                                    }
                                }, false);
                            }
                            return fileXhr;
                        },
                        error: function () {
                            $("#BtnSubirArchivoListCDC_" + num).prop('disabled', false);
                            /*$("#fileProgress4").hide();*/
                            $.notify({
                                message: "Problemas para leer el archivo",
                            }, {
                                type: 'warning',
                                allow_dismiss: false,
                                animate: {
                                    enter: 'animated rollIn',
                                    exit: 'animated rollOut'
                                }
                            });
                            CerrarModal();
                        }
                    }).done(function (results) {
                        setTimeout(CerrarModal, 1000);
                    });
                } else {
                    $.notify({
                        message: "Intentas cargar una archivo muy pesada: " + Tam + " MG" + " Límite permitido 10 MG",
                    }, {
                        type: 'warning',
                        allow_dismiss: false,
                        animate: {
                            enter: 'animated rollIn',
                            exit: 'animated rollOut'
                        }
                    });
                }
            } else {
                $.notify({
                    message: "Intentas cargar un formato no permitido: " + Formato + " Formato de archivo permitido: .pdf ",
                }, {
                    type: 'warning',
                    allow_dismiss: false,
                    animate: {
                        enter: 'animated rollIn',
                        exit: 'animated rollOut'
                    }
                });
            }
        } else {
            $("#BtnSubirArchivoListCDC_" + num).prop('disabled', false);
            $.notify({
                message: "Selecciona un archivo."
            }, {
                type: 'danger',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    }

    function CargaCDC(documento, num, tipo) {
        if (tipo == 1) {

            var Personas = new Object();
            Personas.Id = @ViewBag.Personas.Id;

            var PersonasCursos = new Object();
            PersonasCursos.Id = num;
            PersonasCursos.NmArchivo = documento.NmArchivo;
            PersonasCursos.NmOriginal = documento.NmOriginal;
            PersonasCursos.Personas = Personas

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cursos_EditarEmpleado_Actualizar", "Cursos")",
                data: JSON.stringify(PersonasCursos),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    PintaTableListaCDC(respuesta);
                },
                error: errores
            });

        } else if (tipo == 2) {

            var Personas = new Object();
            Personas.Id = @ViewBag.Personas.Id;

            var PersonasDiplomados = new Object();
            PersonasDiplomados.Id = num;
            PersonasDiplomados.NmArchivo = documento.NmArchivo;
            PersonasDiplomados.NmOriginal = documento.NmOriginal;
            PersonasDiplomados.Personas = Personas;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Diplomados_EditarEmpleado_Actualizar", "Diplomados")",
                data: JSON.stringify(PersonasDiplomados),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    PintaTableListaCDC(respuesta);
                },
                error: errores
            });

        } else if (tipo == 3) {

            var Personas = new Object();
            Personas.Id = @ViewBag.Personas.Id;

            var PersonasCertificacion = new Object();
            PersonasCertificacion.Id = num;
            PersonasCertificacion.NmArchivo = documento.NmArchivo;
            PersonasCertificacion.NmOriginal = documento.NmOriginal;
            PersonasCertificacion.Personas = Personas;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Certificaciones_EditarEmpleado_Actualizar", "Certificaciones")",
                data: JSON.stringify(PersonasCertificacion),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    PintaTableListaCDC(respuesta);
                },
                error: errores
            });
        }
    }

    function EliminarArchivoCDC(tipo, num) {

        swal({
            title: "¿Eliminar Archivo?",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
		        swal.close();

                if (tipo == 1) {

                    var Personas = new Object();
                    Personas.Id = @ViewBag.Personas.Id;

                    var PersonasCursos = new Object();
                    PersonasCursos.Id = num;
                    PersonasCursos.Personas = Personas;

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Cursos_EditarEmpleado_Eliminar_Archivo", "Cursos")",
                        data: JSON.stringify(PersonasCursos),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (respuesta) {
                            PintaTableListaCDC(respuesta);
                        },
                        error: errores
                    });

                } else if (tipo == 2) {

                    var Personas = new Object();
                    Personas.Id = @ViewBag.Personas.Id;

                    var PersonasDiplomados = new Object();
                    PersonasDiplomados.Id = num;
                    PersonasDiplomados.Personas = Personas;

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Diplomados_EditarEmpleado_Eliminar_Archivo", "Diplomados")",
                        data: JSON.stringify(PersonasDiplomados),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (respuesta) {
                            PintaTableListaCDC(respuesta);
                        },
                        error: errores
                    });

                } else if (tipo == 3) {

                        var Personas = new Object();
                    Personas.Id = @ViewBag.Personas.Id;

                    var PersonasCertificacion = new Object();
                    PersonasCertificacion.Id = num;
                    PersonasCertificacion.Personas = Personas;

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Certificaciones_EditarEmpleado_Eliminar_Archivo", "Certificaciones")",
                        data: JSON.stringify(PersonasCertificacion),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (respuesta) {
                            PintaTableListaCDC(respuesta);
                        },
                        error: errores
                    });
                }

            }
        });
    }

    function MostrarArchivoCDC(tipo, num) {

        if (tipo == 1) {

            var PersonasCursos = new Object();
            PersonasCursos.Id = num;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cursos_EditarEmpleado_Mostrar", "Cursos")",
                data: JSON.stringify(PersonasCursos),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    //console.log(respuesta);
                    //console.log(respuesta.NmArchivo);
                    $("#ModalPDF").modal("show");
                    var mail = "https://" + respuesta;
                    $('#iframepdf').attr('src', mail);
                },
                error: errores
            });

        } else if (tipo == 2) {

            var PersonasDiplomados = new Object();
            PersonasDiplomados.Id = num;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Diplomados_EditarEmpleado_Mostrar", "Diplomados")",
                data: JSON.stringify(PersonasDiplomados),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    $("#ModalPDF").modal("show");
                    var mail = "https://" + respuesta;
                    $('#iframepdf').attr('src', mail);
                },
                error: errores
            });

        } else if (tipo == 3) {
            var PersonasCertificacion = new Object();
            PersonasCertificacion.Id = num;

            $.ajax({
                type: "POST",
                url: "@Url.Action("Certificaciones_EditarEmpleado_Mostrar", "Certificaciones")",
                data: JSON.stringify(PersonasCertificacion),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (respuesta) {
                    $("#ModalPDF").modal("show");
                    var mail = "https://" + respuesta;
                    $('#iframepdf').attr('src', mail);
                },
                error: errores
            });
        }
    }

    function EliminarCDC(tipo, num) {

        swal({
            title: "¿Eliminar Registro?",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
                swal.close();

                if (tipo == 1) {

                    var Personas = new Object();
                    Personas.Id = @ViewBag.Personas.Id;

                    var PersonasCursos = new Object();
                    PersonasCursos.Id = num;
                    PersonasCursos.Personas = Personas;

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Cursos_EditarEmpleado_Eliminar", "Cursos")",
                        data: JSON.stringify(PersonasCursos),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (respuesta) {
                            PintaTableListaCDC(respuesta);
                        },
                        error: errores
                    });

                } else if (tipo == 2) {

                    var Personas = new Object();
                    Personas.Id = @ViewBag.Personas.Id;

                    var PersonasDiplomados = new Object();
                    PersonasDiplomados.Id = num;
                    PersonasDiplomados.Personas = Personas;

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Diplomados_EditarEmpleado_Eliminar", "Diplomados")",
                        data: JSON.stringify(PersonasDiplomados),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (respuesta) {
                            PintaTableListaCDC(respuesta);
                        },
                        error: errores
                    });

                } else if (tipo == 3) {

                    var Personas = new Object();
                    Personas.Id = @ViewBag.Personas.Id;

                    var PersonasCertificacion = new Object();
                    PersonasCertificacion.Id = num;
                    PersonasCertificacion.Personas = Personas;

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Certificaciones_EditarEmpleado_Eliminar", "Certificaciones")",
                        data: JSON.stringify(PersonasCertificacion),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (respuesta) {
                            PintaTableListaCDC(respuesta);
                        },
                        error: errores
                    });
                }
            }
        });
    }

    function CerrarModal() {
        $("#BtnCerrarCargandoProcesos").trigger("click");
    }
</script>

<script>
    $(document).on('click', '#checkboxEstudios', function () {
        let val = $(this).val();
        if ($(this).is(':checked')) {
            $("#DivGradosEstudios").show();
          /*  $("#DivFormGradosTabla").show();*/
        }
        else {
            $("#DivGradosEstudios").css("display", "none");
           /* $("#DivFormGradosTabla").css("display", "none");*/
        }
    });

    function BtnAgregarGrado() {
        if (ValidarNuevoGrado()) {

            var Personas = new Object();
            Personas.Id = @ViewBag.Personas.Id;

            var Cat_Estudios = new Object();
            Cat_Estudios.Id = $("#Select_Estudios_Grado option:selected").val();

            var Cat_EstatusEstudios = new Object();
            Cat_EstatusEstudios.Id = $("#Select_EstatusEstudios_Grado option:selected").val();

            var PersonaEstudio = new Object();
            PersonaEstudio.Personas = Personas;
            PersonaEstudio.Cat_Estudios = Cat_Estudios;
            PersonaEstudio.Cat_EstatusEstudios = Cat_EstatusEstudios;
            PersonaEstudio.FechaTermino = $('#FechaTermino_Grado').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("Estudios_EditarEmpleado_Agregar", "Estudios")",
                async: false,
                data: JSON.stringify(PersonaEstudio),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Estudios_Grado").val("0");
                    $("#Select_EstatusEstudios_Grado").val("0");
                    $('#FechaTermino_Grado').val('');
                    PintaTableListaEstudios(result);
                },
                error: errores
            });

        } else {
            $.notify({
                icon: 'fa fa-paw',
                message: "Debes completar el formulario.",
            }, {
                type: 'warning',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    }

    function ValidarNuevoGrado() {

        $('#Select_Estudios_Grado').css("border", "1px solid #f44336");
        $('#Select_EstatusEstudios_Grado').css("border", "1px solid #f44336");
        $('#FechaTermino_Grado').css("border", "1px solid #f44336");

        if ($('#FechaTermino_Grado').val().length > 0) {
            $('#FechaTermino_Grado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Estudios_Grado option:selected").val() > 0) {
            $('#Select_Estudios_Grado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_EstatusEstudios_Grado option:selected").val() > 0) {
            $('#Select_EstatusEstudios_Grado').css("border", "1px solid #cccccc");
        }

        var result = false;

        if ($('#FechaTermino_Grado').val().length > 0) {
            if ($("#Select_Estudios_Grado option:selected").val() > 0) {
                if ($("#Select_EstatusEstudios_Grado option:selected").val() > 0) {
                    result = true;
                } else {
                    var posicion = $("#Select_EstatusEstudios_Grado").offset().top;
                    $("html, body").animate({
                        scrollTop: posicion - 100
                    }, 1000);
                }
            } else {
                var posicion = $("#Select_Estudios_Grado").offset().top;
                $("html, body").animate({
                    scrollTop: posicion - 100
                }, 1000);
            }
        } else {
            var posicion = $("#FechaTermino_Grado").offset().top;
            $("html, body").animate({
                scrollTop: posicion - 100
            }, 1000);
        }

        return result;
    }

    function PintaTableListaEstudios(data) {
        console.log(data);
        $('#TablaNivelEstudios').html('');
        var Table =
                 "<table class='table table-hover table-striped text-center'>" +
                     "<thead class='thead-dark text-center'>" +
                         "<tr>" +
                            "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Grado de estudio</p></th>" +
                            "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Estatus</p></th>" +
                            "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Fecha Termino</p></th>" +
                            "<th class='text-center'><p style='margin-bottom: 0.5rem; margin-top:0.5rem;'>Archivo</p></th>" +
                            "<th> </th>" +
                         "</tr>" +
                     "</thead>" +
                 "<tbody>";

        if (data.length > 0) {
            for (var b = 0; b < data.length; b++) {
         Table +=   "<tr>" +
                         "<td >" +
                             "<p style='font-size:13px;'>" +
                                "<strong>" + data[b].Cat_Estudios.Nombre + "</strong>" +
                             "</p>" +
                         "</td >" +
                         "<td >" +
                             "<p style='font-size:13px;'>" +
                                "" + data[b].Cat_EstatusEstudios.Nombre + "" +
                             "</p>" +
                         "</td >" +
                         "<td >" +
                             "<p style='font-size:13px;'>" +
                                "" + moment(data[b].FechaTermino).format('DD/MM/YYYY') + "" +
                             "</p>" +
                         "</td >" +
                         "<td >" +
                            "<input type='file' id='fileInputEstudios_" + data[b].Id + "' onchange='handleFilesEstudio(" + data[b].Id + ")' style='visibility: hidden; width: 1px;'>";
                            if (data[b].NmArchivo == null) {
                                Table += "" +
                                            "<strong>Sin Archivo</strong>" +
                                        "";
                            } else {
                                Table += "<button class='btn waves-effect btn-danger waves-light '  onclick='EliminarArchivoEstudio(" + data[b].Id + ")'  data-toggle='tooltip' data-placement='top' title='Eliminar Archivo'><i class='fa fa-trash'></i></button>";
                                Table += "<button class='btn waves-effect btn-view waves-light '  onclick='MostrarArchivoEstudio(" + data[b].Id + ")' data-toggle='tooltip' data-placement='top' title='Mostrar Archivo'><i class='fa fa-eye'></i></button>";
                            }
                Table +="</td >" +
                         "<td >";
                            if (data[b].NmArchivo == null) {
                                Table += "<button class='btn waves-effect waves-light btn-uppload ' id='BtnSubirArchivoListEstudios_" + data[b].Id + "' onclick='SubirArchivoListEstudios(" + data[b].Id + ")' data-toggle='tooltip' data-placement='top' title='Subir documento'><i class='fa fa-cloud-upload'></i></button>";
                                Table += "<button class='btn waves-effect waves-light btn-danger ' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarEstudio(" + data[b].Id + ")'><i class='fa fa-trash'></i></button>";
                            } else{
                                Table += "<button class='btn waves-effect waves-light btn-danger ' data-toggle='tooltip' data-placement='top' title='Eliminar registro' onclick='EliminarEstudio(" + data[b].Id + ")'><i class='fa fa-trash'></i></button>";
                            }
                Table +="</td >" +
                    "</tr >";
            }
        }

        Table += "</tbody>" +
            "</table>";


        $('#TablaNivelEstudios').html(Table);
        $('[data-toggle="tooltip"]').tooltip();
    }

    function SubirArchivoListEstudios(num) {
        $("#fileInputEstudios_" + num).click();
    }

    function handleFilesEstudio(num) {

        var fileInput = document.getElementById('fileInputEstudios_' + num);

        if (fileInput.files.length > 0) {
            for (i = 0; i < fileInput.files.length; i++) {
                var ext = fileInput.files[i].name.split('.').pop();
                Extencion = fileInput.files[i].name.split('.').pop();

                // Convertimos en minúscula porque
                // la extensión del archivo puede estar en mayúscula
                ext = ext.toLowerCase();

                if (ext == 'pdf') {

                    Carga = true;
                } else {
                    Carga = false;
                    Formato = ext;
                    break;
                }
            }

            for (i = 0; i < fileInput.files.length; i++) {
                var filesize = ((fileInput.files[i].size / 1024) / 1024).toFixed(4);

                if (filesize < 10) {
                    CargaTam = true;
                } else {
                    CargaTam = false;
                    Tam = filesize;
                    break;
                }
            }

            if (Carga) {
                if (CargaTam) {
                    $("#BtnSubirArchivoListEstudios_" + num).prop('disabled', true);
                    var formData = new FormData();

                    for (i = 0; i < fileInput.files.length; i++) {
                        formData.append(fileInput.files[i].name, fileInput.files[i]);
                    }
                    $("#CargandoProcesos").modal("show");

                    $.ajax({
                        url: '/api/FileAPI/UploadFilesEstudios',
                        type: 'POST',
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (documento) {
                            $("#BtnSubirArchivoListEstudios_" + num).prop('disabled', false);
                            CargaEstudios(documento, num);
                        },
                        xhr: function () {
                            var fileXhr = $.ajaxSettings.xhr();
                            if (fileXhr.upload) {
                                $("progress").show();
                                fileXhr.upload.addEventListener("progress", function (e) {
                                    if (e.lengthComputable) {
                                        $("#fileProgress4").attr({
                                            value: e.loaded,
                                            max: e.total
                                        });
                                    }
                                }, false);
                            }
                            return fileXhr;
                        },
                        error: function () {
                            $("#BtnSubirArchivoListEstudios_" + num).prop('disabled', false);
                            /*$("#fileProgress4").hide();*/
                            $.notify({
                                message: "Problemas para leer el archivo",
                            }, {
                                type: 'warning',
                                allow_dismiss: false,
                                animate: {
                                    enter: 'animated rollIn',
                                    exit: 'animated rollOut'
                                }
                            });
                            CerrarModal();
                        }
                    }).done(function (results) {
                        setTimeout(CerrarModal, 1000);
                    });
                } else {
                    $.notify({
                        message: "Intentas cargar una archivo muy pesada: " + Tam + " MG" + " Límite permitido 10 MG",
                    }, {
                        type: 'warning',
                        allow_dismiss: false,
                        animate: {
                            enter: 'animated rollIn',
                            exit: 'animated rollOut'
                        }
                    });
                }
            } else {
                $.notify({
                    message: "Intentas cargar un formato no permitido: " + Formato + " Formato de archivo permitido: .pdf ",
                }, {
                    type: 'warning',
                    allow_dismiss: false,
                    animate: {
                        enter: 'animated rollIn',
                        exit: 'animated rollOut'
                    }
                });
            }
        } else {
            $("#BtnSubirArchivoListEstudios_" + num).prop('disabled', false);
            $.notify({
                message: "Selecciona un archivo."
            }, {
                type: 'danger',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    }

    function CargaEstudios(documento, num) {

        var Personas = new Object();
        Personas.Id = @ViewBag.Personas.Id;

        var PersonaEstudio = new Object();
        PersonaEstudio.Id = num;
        PersonaEstudio.NmArchivo = documento.NmArchivo;
        PersonaEstudio.NmOriginal = documento.NmOriginal;
        PersonaEstudio.Personas = Personas;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Estudios_EditarEmpleado_ActulizarArchivo", "Estudios")",
            data: JSON.stringify(PersonaEstudio),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {
                PintaTableListaEstudios(respuesta);
            },
            error: errores
        });

    }

    function EliminarEstudio(num)
    {
        swal({
            title: "¿Eliminar Registro?",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
                swal.close();

                var Personas = new Object();
                Personas.Id = @ViewBag.Personas.Id;

                var PersonaEstudio = new Object();
                PersonaEstudio.Id = num;
                PersonaEstudio.Personas = Personas;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Estudios_EditarEmpleado_Eliminar", "Estudios")",
                    data: JSON.stringify(PersonaEstudio),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (respuesta) {
                        PintaTableListaEstudios(respuesta);
                    },
                    error: errores
                });
            }
        });
    }

    function EliminarArchivoEstudio(num)
    {
        swal({
            title: "¿Eliminar Archivo?",
            imageUrl: "../Images/icons/6301508.png",
            showCancelButton: true,
            cancelButtonText: "Cancelar",
            confirmButtonColor: "#3070A9",
            confirmButtonText: "Continuar",
            closeOnConfirm: false,
        },
        function (isConfirm) {
            if (isConfirm) {
                swal.close();

                var Personas = new Object();
                Personas.Id = @ViewBag.Personas.Id;

                var PersonaEstudio = new Object();
                PersonaEstudio.Id = num;
                PersonaEstudio.Personas = Personas;

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Estudios_EditarEmpleado_Eliminar_Archivo", "Estudios")",
                    data: JSON.stringify(PersonaEstudio),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (respuesta) {
                        PintaTableListaEstudios(respuesta);
                    },
                    error: errores
                });
            }
        });
    }

    function MostrarArchivoEstudio(num) {
        var PersonaEstudio = new Object();
        PersonaEstudio.Id = num;

        $.ajax({
            type: "POST",
            url: "@Url.Action("Estudios_EditarEmpleado_Mostrar", "Estudios")",
            data: JSON.stringify(PersonaEstudio),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (respuesta) {
                $("#ModalPDF").modal("show");
                var mail = "https://" + respuesta;
                $('#iframepdf').attr('src', mail);
            },
            error: errores
        });
    }

    function CerrarModal() {
        $("#BtnCerrarCargandoProcesos").trigger("click");
    }
</script>

<script>
    function GuardarInformacionBasica() {
        if (ValidarInformacionBasica()) {

            swal({
                title: "Modificar empleado.!",
                imageUrl: "../Images/icons/4944051.png",
                showCancelButton: true,
                cancelButtonText: "Cancelar",
                confirmButtonColor: "#3070A9",
                confirmButtonText: "Continuar",
                closeOnConfirm: false,
            },
            function (isConfirm) {
                if (isConfirm) {
		            var Cat_EstadoCivil = new Object();
                    Cat_EstadoCivil.Id = $("#Select_EstadoCivil_Empleado option:selected").val();

                    var Cat_TipoCredito = new Object();
                    Cat_TipoCredito.Id = $("#Select_TipoCredito_Empleado option:selected").val();

                    var Cat_Banco = new Object();
                    Cat_Banco.Id = $("#Select_Bancos_Empleado option:selected").val();

                    var PersonasDetalle = new Object();
                    PersonasDetalle.FechaNacimiento = $('#FechaNacimiento_Empleado').val();
                    PersonasDetalle.Sexo = $("#Select_Sexo_Empleado option:selected").val();
                    PersonasDetalle.Cat_EstadoCivil = Cat_EstadoCivil;
                    PersonasDetalle.RFC = $('#RFC_Empleado').val();
                    PersonasDetalle.CURP = $('#CURP_Empleado').val();
                    PersonasDetalle.NSS = $('#NSS_Empleado').val();
                    PersonasDetalle.Cat_Banco = Cat_Banco;
                    PersonasDetalle.ClaveInterbancaria = $('#ClaveInterbancaria_Empleado').val();
                    PersonasDetalle.NoNomina = $('#NoNomina_Empleado').val();

                    PersonasDetalle.TelefonoCelular = $('#TelefonoCelular_Empleado').val();
                    PersonasDetalle.TelefonoFijo = $('#TelefonoFijo_Empleado').val();
                    PersonasDetalle.CorreoPersonal = $('#EmailPersonal_Empleado').val();
                    PersonasDetalle.CorreoCorporativo = $('#EmailCorporativo_Empleado').val();

                    PersonasDetalle.Cat_TipoCredito = Cat_TipoCredito;
                    PersonasDetalle.Sueldo = $('#Sueldo_Empleado').val();

                    var Personas = new Object();
                    Personas.Id = @ViewBag.Personas.Id;
                    Personas.Nombre = $('#Nombre_Empleado').val();
                    Personas.ApPaterno = $('#ApellidoPaterno_Empleado').val();
                    Personas.ApMaterno = $('#ApellidoMaterno_Empleado').val();
                    Personas.PersonasDetalle = PersonasDetalle;

                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Empleados_Actualizar_Informacion_Basica", "Empleados")",
                        async: false,
                        data: JSON.stringify(Personas),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: resultadoInformacionBasica,
                        error: errores
                    });
                }
            });
        } else {
            $.notify({
                icon: 'fa fa-paw',
                message: "Completa el formulario.",
            }, {
                type: 'warning',
                allow_dismiss: false,
                animate: {
                    enter: 'animated rollIn',
                    exit: 'animated rollOut'
                }
            });
        }
    }

    function resultadoInformacionBasica(data) {

        switch (data.Id) {
            case 1:
                swal({
                    title: "Modificación de registros!",
                    text: "Empleado actualizado.",
                    imageUrl: "../Images/icons/5673974.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });

                break;
            case 0:
                swal({
                    title: "Modificación de registros!",
                    text: "Empleado no actualizado.",
                    imageUrl: "../Images/icons/4944051.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });
                break;
            default:
            // code block
        }
    }

    function ValidarInformacionBasica() {
        var result = false;

        $('#Nombre_Empleado').css("border", "1px solid #f44336");
        $('#ApellidoPaterno_Empleado').css("border", "1px solid #f44336");
        $('#ApellidoMaterno_Empleado').css("border", "1px solid #f44336");
        $('#FechaNacimiento_Empleado').css("border", "1px solid #f44336");
        $('#Select_Sexo_Empleado').css("border", "1px solid #f44336");

        $('#Select_EstadoCivil_Empleado').css("border", "1px solid #f44336");
        $('#RFC_Empleado').css("border", "1px solid #f44336");
        $('#CURP_Empleado').css("border", "1px solid #f44336");
        $('#NSS_Empleado').css("border", "1px solid #f44336");
        $('#Select_TipoCredito_Empleado').css("border", "1px solid #f44336");
        $('#Select_Bancos_Empleado').css("border", "1px solid #f44336");
        $('#ClaveInterbancaria_Empleado').css("border", "1px solid #f44336");

        $('#TelefonoCelular_Empleado').css("border", "1px solid #f44336");
        $('#EmailPersonal_Empleado').css("border", "1px solid #f44336");

        if ($('#Nombre_Empleado').val().length > 0) {
            $('#Nombre_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#ApellidoPaterno_Empleado').val().length > 0) {
            $('#ApellidoPaterno_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#ApellidoMaterno_Empleado').val().length > 0) {
            $('#ApellidoMaterno_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#FechaNacimiento_Empleado').val().length > 0) {
            $('#FechaNacimiento_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Sexo_Empleado option:selected").val() > 0) {
            $('#Select_Sexo_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_EstadoCivil_Empleado option:selected").val() > 0) {
            $('#Select_EstadoCivil_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#RFC_Empleado').val().length > 0) {
            $('#RFC_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#CURP_Empleado').val().length > 0) {
            $('#CURP_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#NSS_Empleado').val().length > 0) {
            $('#NSS_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_TipoCredito_Empleado option:selected").val() > 0) {
            $('#Select_TipoCredito_Empleado').css("border", "1px solid #cccccc");
        }
        if ($("#Select_Bancos_Empleado option:selected").val() > 0) {
            $('#Select_Bancos_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#ClaveInterbancaria_Empleado').val().length > 0) {
            $('#ClaveInterbancaria_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#TelefonoCelular_Empleado').val().length > 0) {
            $('#TelefonoCelular_Empleado').css("border", "1px solid #cccccc");
        }
        if ($('#EmailPersonal_Empleado').val().length > 0) {
            $('#EmailPersonal_Empleado').css("border", "1px solid #cccccc");
        }


        if ($('#Nombre_Empleado').val().length > 0) {
            if ($('#ApellidoPaterno_Empleado').val().length > 0) {
                if ($('#ApellidoMaterno_Empleado').val().length > 0) {
                    if ($('#FechaNacimiento_Empleado').val().length > 0) {
                        if ($("#Select_Sexo_Empleado option:selected").val() > 0) {
                            if ($("#Select_EstadoCivil_Empleado option:selected").val() > 0) {
                                if ($('#RFC_Empleado').val().length > 0) {
                                    if ($('#CURP_Empleado').val().length > 0) {
                                        if ($('#NSS_Empleado').val().length > 0) {
                                            if ($("#Select_TipoCredito_Empleado option:selected").val() > 0) {
                                                if ($("#Select_Bancos_Empleado option:selected").val() > 0) {
                                                    if ($('#ClaveInterbancaria_Empleado').val().length > 0) {
                                                        if ($('#TelefonoCelular_Empleado').val().length > 0) {
                                                            if ($('#EmailPersonal_Empleado').val().length > 0) {
                                                                result = true;
                                                            } else {
                                                                var posicion = $("#EmailPersonal_Empleado").offset().top;
                                                                $("html, body").animate({
                                                                    scrollTop: posicion - 100
                                                                }, 1000);
                                                            }
                                                        } else {
                                                            var posicion = $("#TelefonoCelular_Empleado").offset().top;
                                                            $("html, body").animate({
                                                                scrollTop: posicion - 100
                                                            }, 1000);
                                                        }
                                                    } else {
                                                        var posicion = $("#ClaveInterbancaria_Empleado").offset().top;
                                                        $("html, body").animate({
                                                            scrollTop: posicion - 100
                                                        }, 1000);
                                                    }
                                                } else {
                                                    var posicion = $("#Select_Bancos_Empleado").offset().top;
                                                    $("html, body").animate({
                                                        scrollTop: posicion - 100
                                                    }, 1000);
                                                }
                                            } else {
                                                var posicion = $("#Select_TipoCredito_Empleado").offset().top;
                                                $("html, body").animate({
                                                    scrollTop: posicion - 100
                                                }, 1000);
                                            }
                                        } else {
                                            var posicion = $("#NSS_Empleado").offset().top;
                                            $("html, body").animate({
                                                scrollTop: posicion - 100
                                            }, 1000);
                                        }
                                    } else {
                                        var posicion = $("#CURP_Empleado").offset().top;
                                        $("html, body").animate({
                                            scrollTop: posicion - 100
                                        }, 1000);
                                    }
                                } else {
                                    var posicion = $("#RFC_Empleado").offset().top;
                                    $("html, body").animate({
                                        scrollTop: posicion - 100
                                    }, 1000);
                                }
                            } else {
                                var posicion = $("#Select_EstadoCivil_Empleado").offset().top;
                                $("html, body").animate({
                                    scrollTop: posicion - 100
                                }, 1000);
                            }
                        } else {
                            var posicion = $("#Select_Sexo_Empleado").offset().top;
                            $("html, body").animate({
                                scrollTop: posicion - 100
                            }, 1000);
                        }
                    } else {
                        var posicion = $("#FechaNacimiento_Empleado").offset().top;
                        $("html, body").animate({
                            scrollTop: posicion - 100
                        }, 1000);
                    }
                } else {
                    var posicion = $("#ApellidoMaterno_Empleado").offset().top;
                    $("html, body").animate({
                        scrollTop: posicion - 100
                    }, 1000);
                }
            } else {
                var posicion = $("#ApellidoPaterno_Empleado").offset().top;
                $("html, body").animate({
                    scrollTop: posicion - 100
                }, 1000);
            }
        } else {
            var posicion = $("#Nombre_Empleado").offset().top;
            $("html, body").animate({
                scrollTop: posicion - 100
            }, 1000);
        }

        return result;
    }

    $('#BTnNuevoBanco').click(function () {

        var NombreBanco = $('#Nombre_Banco').val();
        $('#Nombre_Banco').css("border", "1px solid #f44336");

        if ($('#Nombre_Banco').val().length > 0) {
            $('#Nombre_Banco').css("border", "1px solid #cccccc");
        }

        if (NombreBanco.length > 0) {
            var obj = {};
            obj['Nombre'] = NombreBanco;

            var jsonObject = {
                "Cat_Banco": obj
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_Banco_Agregar", "Bancos")",
                async: false,
                data: JSON.stringify(jsonObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: resultadoBanco,
                error: errores
            });
        } else {
            $.notify({
                message: "Formulario incompleto!."
            }, {
                type: 'danger'
            });
        }
    });

    function resultadoBanco(data) {
      switch (data.Id) {
          case -1:
                swal({
                    title: "Algo ocurrió !",
                    text: "El banco que intentas agregar ya se encuentra registrado.",
                    imageUrl: "../Images/icons/4944051.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });
                $('#Nombre_Banco').css("border", "1px solid #f44336");
                break;
          case 0:
                swal({
                    title: "Algo ocurrió !",
                    text: "",
                    imageUrl: "../Images/icons/4944051.png",
                    buttons: true,
                    dangerMode: true,
                }, function (isConfirm) {
                    if (isConfirm) {
                        swal.close();
                    }
                });

                break;

            default:
            // code block
        }

        if (data.Id > 0)
        {
            swal({
                title: "¡Nuevo banco agregado!",
                text: "",
                imageUrl: "../Images/icons/5673974.png",
                buttons: true,
                dangerMode: true,
            }, function (isConfirm) {
                if (isConfirm) {
                    swal.close();
                }
            });

            $.ajax({
                type: "POST",
                url: "@Url.Action("Cat_Banco_Listar", "Bancos")",
                data: '',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    $("#Select_Bancos_Empleado").empty();

                    if (result.length > 0) {
                        var option = $(document.createElement('option'));
                        option.text("SELECCIONAR");
                        option.val(0);

                        $("#Select_Bancos_Empleado").append(option);

                        $(result).each(function () {
                            var option = $(document.createElement('option'));

                            option.text(this.Nombre.toUpperCase());
                            option.val(this.Id);

                            $("#Select_Bancos_Empleado").append(option);
                        });

                        $('#Select_Bancos_Empleado option[value="' + data.Id + '"]').attr("selected", true);
                    }
                },
                error: errores
            });
            $("#BtnCerrarBanco").trigger("click");
            $('#Nombre_Banco').val('');
        }
    }
</script>

<script>
    function errores(data) {
        swal({
            title: "UPS",
            text: "Se ha presentado un problema #18595",
            imageUrl: "../Images/icons/4944051.png",
            buttons: true,
            dangerMode: true,
        }, function (isConfirm) {
            if (isConfirm) {
                swal.close();
            }
        });
    }

    function ValidaInput(name) {
        if ($('#' + name).val().length > 0) {
            $('#' + name).css("border", "1px solid #cccccc");
        } else {
            $('#' + name).css("border", "1px solid #f44336");
        }
    }

    function ValidaSelect(name) {
        if ($('#' + name + ' option:selected').val() > 0) {
            $('#' + name).css("border", "1px solid #cccccc");
        } else {
            $('#' + name).css("border", "1px solid #f44336");
        }
    }

    function Next() {
        var $activeTab = $('.tab-pane.active');
        $("#myBtn").trigger("click");
        $('.btn-circle.btn-info').removeClass('btn-info').addClass('btn-default');

        var nextTab = $activeTab.next('.tab-pane').attr('id');
        $('[href="#' + nextTab + '"]').addClass('btn-info').removeClass('btn-default');
        $('[href="#' + nextTab + '"]').tab('show');

        var posicion = $("#" + nextTab).offset().top;
        $("html, body").animate({
            scrollTop: posicion
        }, 1000);

    }

    function Previus() {
        var $activeTab = $('.tab-pane.active');
        $("#myBtn").trigger("click");
        $('.btn-circle.btn-info').removeClass('btn-info').addClass('btn-default');

        var prevTab = $activeTab.prev('.tab-pane').attr('id');
        $('[href="#' + prevTab + '"]').addClass('btn-info').removeClass('btn-default');
        $('[href="#' + prevTab + '"]').tab('show');

        var posicion = $("#" + prevTab).offset().top;
        $("html, body").animate({
            scrollTop: posicion
        }, 1000);
    }

    $(document).ready(function () {
        $('.btn-circle').on('click', function () {
            $('.btn-circle.btn-info').removeClass('btn-info').addClass('btn-default');
            $(this).addClass('btn-info').removeClass('btn-default').blur();
        });

        $('[href="#menu1"]').tab('show');

    });

    function errores() {
        $.notify({
            message: "Inténtelo mas tarde."
        }, {
            type: 'danger',
            allow_dismiss: false,
            animate: {
                enter: 'animated rollIn',
                exit: 'animated rollOut'
            }
        });
    }

    function soloLetras(e) {

        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();
        letras = " áéíóúabcdefghijklmnñopqrstuvwxyz ";
        especiales = [8, 37, 39, 46];

        tecla_especial = false
        for (var i in especiales) {
            if (key == especiales[i]) {
                tecla_especial = true;
                break;
            }
        }
        if (letras.indexOf(tecla) == -1 && !tecla_especial)
            return false;
    }

    function soloNum(e) {
        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();
        letras = "1234567890";
        especiales = [8, 37, 39, 46];

        tecla_especial = false
        for (var i in especiales) {
            if (key == especiales[i]) {
                tecla_especial = true;
                break;
            }
        }
        if (letras.indexOf(tecla) == -1 && !tecla_especial)
            return false;
    }

    function mayus(e) {
        e.value = e.value.toUpperCase();
    }
</script>

<script>
    $('#IdMenuEmpleados').addClass("active pcoded-trigger");
    $('#IdSubMenulistaEmpleado').addClass("active");
</script>

<script>
    $(document).ready(function () {
        var Empresa = @ViewBag.Personas.Empleados.EmpresaPuestos.EmpresasDepartamento.Empresas.Id;
        $("#Select_Empresa_Empleado option[value='" + Empresa + "']").attr("selected", true);
        $("#Select_Empresa_Empleado").change();

        var Departamento = @ViewBag.Personas.Empleados.EmpresaPuestos.EmpresasDepartamento.Id;
        $("#Select_Departamento_Empleado option[value='" + Departamento + "']").attr("selected", true);
        $("#Select_Departamento_Empleado").change();

        var Puesto = @ViewBag.Personas.Empleados.EmpresaPuestos.Id;
        $("#Select_Puesto_Empleado option[value='" + Puesto + "']").attr("selected", true);

        var Cliente = @ViewBag.Personas.PersonasDetalle.Cat_Clientes.Id;
        $("#Select_Cliente_Empleado option[value='" + Cliente + "']").attr("selected", true);
        $("#Select_Cliente_Empleado").change();

        var ProyectoServicio = @ViewBag.Personas.PersonasDetalle.Cat_ProyectoServicios.Id;
        $("#Select_Proyecto_Empleado option[value='" + ProyectoServicio + "']").attr("selected", true);

        var EsquemaContratacion = @ViewBag.Personas.PersonasDetalle.Cat_EsquemaContratacion.Id;
        $("#Select_EsquemaContratacion_Empleado option[value='" + EsquemaContratacion + "']").attr("selected", true);


        var ClienteDireccion = @{ if (ViewBag.Personas.PersonasClienteDirecciones != null) { @ViewBag.Personas.PersonasClienteDirecciones.Id }else { @Html.Raw(0) }  } ;
        $("#Select_Centro_Trabajo_Empleado option[value='" + ClienteDireccion + "']").attr("selected", true);
    });
</script>